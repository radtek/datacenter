//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.8009
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.8009 版自动生成。
// 
#pragma warning disable 1591

namespace Wxjzgcjczy.Web.DataShareService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DataShareServiceSoap", Namespace="http://tempuri.org/")]
    public partial class DataShareService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ShareDataXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShareDataXML2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTatalPageNumOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DataShareService() {
            this.Url = global::Wxjzgcjczy.Web.Properties.Settings.Default.Wxjzgcjczy_Web_DataShareService_DataShareService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ShareDataXMLCompletedEventHandler ShareDataXMLCompleted;
        
        /// <remarks/>
        public event ShareDataXML2CompletedEventHandler ShareDataXML2Completed;
        
        /// <remarks/>
        public event GetTatalPageNumCompletedEventHandler GetTatalPageNumCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ShareDataXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ShareDataXML(string userid, string password, System.DateTime startDate, System.DateTime endDate) {
            object[] results = this.Invoke("ShareDataXML", new object[] {
                        userid,
                        password,
                        startDate,
                        endDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ShareDataXMLAsync(string userid, string password, System.DateTime startDate, System.DateTime endDate) {
            this.ShareDataXMLAsync(userid, password, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void ShareDataXMLAsync(string userid, string password, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.ShareDataXMLOperationCompleted == null)) {
                this.ShareDataXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShareDataXMLOperationCompleted);
            }
            this.InvokeAsync("ShareDataXML", new object[] {
                        userid,
                        password,
                        startDate,
                        endDate}, this.ShareDataXMLOperationCompleted, userState);
        }
        
        private void OnShareDataXMLOperationCompleted(object arg) {
            if ((this.ShareDataXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShareDataXMLCompleted(this, new ShareDataXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ShareDataXML2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ShareDataXML2(string userid, string password, System.DateTime startDate, System.DateTime endDate, int DataContent, int CurrentPageNum) {
            object[] results = this.Invoke("ShareDataXML2", new object[] {
                        userid,
                        password,
                        startDate,
                        endDate,
                        DataContent,
                        CurrentPageNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ShareDataXML2Async(string userid, string password, System.DateTime startDate, System.DateTime endDate, int DataContent, int CurrentPageNum) {
            this.ShareDataXML2Async(userid, password, startDate, endDate, DataContent, CurrentPageNum, null);
        }
        
        /// <remarks/>
        public void ShareDataXML2Async(string userid, string password, System.DateTime startDate, System.DateTime endDate, int DataContent, int CurrentPageNum, object userState) {
            if ((this.ShareDataXML2OperationCompleted == null)) {
                this.ShareDataXML2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnShareDataXML2OperationCompleted);
            }
            this.InvokeAsync("ShareDataXML2", new object[] {
                        userid,
                        password,
                        startDate,
                        endDate,
                        DataContent,
                        CurrentPageNum}, this.ShareDataXML2OperationCompleted, userState);
        }
        
        private void OnShareDataXML2OperationCompleted(object arg) {
            if ((this.ShareDataXML2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShareDataXML2Completed(this, new ShareDataXML2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTatalPageNum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetTatalPageNum(string userid, string password, System.DateTime startDate, System.DateTime endDate, int DataContent) {
            object[] results = this.Invoke("GetTatalPageNum", new object[] {
                        userid,
                        password,
                        startDate,
                        endDate,
                        DataContent});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetTatalPageNumAsync(string userid, string password, System.DateTime startDate, System.DateTime endDate, int DataContent) {
            this.GetTatalPageNumAsync(userid, password, startDate, endDate, DataContent, null);
        }
        
        /// <remarks/>
        public void GetTatalPageNumAsync(string userid, string password, System.DateTime startDate, System.DateTime endDate, int DataContent, object userState) {
            if ((this.GetTatalPageNumOperationCompleted == null)) {
                this.GetTatalPageNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTatalPageNumOperationCompleted);
            }
            this.InvokeAsync("GetTatalPageNum", new object[] {
                        userid,
                        password,
                        startDate,
                        endDate,
                        DataContent}, this.GetTatalPageNumOperationCompleted, userState);
        }
        
        private void OnGetTatalPageNumOperationCompleted(object arg) {
            if ((this.GetTatalPageNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTatalPageNumCompleted(this, new GetTatalPageNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    public delegate void ShareDataXMLCompletedEventHandler(object sender, ShareDataXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShareDataXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShareDataXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    public delegate void ShareDataXML2CompletedEventHandler(object sender, ShareDataXML2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShareDataXML2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShareDataXML2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    public delegate void GetTatalPageNumCompletedEventHandler(object sender, GetTatalPageNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTatalPageNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTatalPageNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591