//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.8009
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.8009 版自动生成。
// 
#pragma warning disable 1591

namespace WxjzgcjczyTimerService.DataDownService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="dataDownServiceSoap11Binding", Namespace="http://webservice.datecenter.jscedc")]
    public partial class dataDownService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getPersonInfoStreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPersonRegCertStream_PacketOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCorpInfoStreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDataUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPersonRegMajorStream_IncOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPersonRegCertStreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPersonJobCertStream_CorpOperationCompleted;
        
        private System.Threading.SendOrPostCallback getClientIpAxisOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPersonInfoStream_PacketOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPersonRegCertStream_IncOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPersonRegCertStream_CorpOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCorpInfoStream_PacketOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCorpInfoStream_IncOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPersonInfoStream_IncOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPersonJobCertStream_PacketOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPersonInfoStream_CorpOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCorpStatRptStreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPersonJobCertStreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCorpInfoStream_SingleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPersonInfoStream_SingleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPersonRegCertStream_SingleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPersonJobCertStream_IncOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPersonJobCertStream_SingleOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public dataDownService() {
            this.Url = global::WxjzgcjczyTimerService.Properties.Settings.Default.WxjzgcjczyTimerService3_0_DataDownService_dataDownService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getPersonInfoStreamCompletedEventHandler getPersonInfoStreamCompleted;
        
        /// <remarks/>
        public event getPersonRegCertStream_PacketCompletedEventHandler getPersonRegCertStream_PacketCompleted;
        
        /// <remarks/>
        public event getCorpInfoStreamCompletedEventHandler getCorpInfoStreamCompleted;
        
        /// <remarks/>
        public event getDataUserCompletedEventHandler getDataUserCompleted;
        
        /// <remarks/>
        public event getPersonRegMajorStream_IncCompletedEventHandler getPersonRegMajorStream_IncCompleted;
        
        /// <remarks/>
        public event getPersonRegCertStreamCompletedEventHandler getPersonRegCertStreamCompleted;
        
        /// <remarks/>
        public event getPersonJobCertStream_CorpCompletedEventHandler getPersonJobCertStream_CorpCompleted;
        
        /// <remarks/>
        public event getClientIpAxisCompletedEventHandler getClientIpAxisCompleted;
        
        /// <remarks/>
        public event getPersonInfoStream_PacketCompletedEventHandler getPersonInfoStream_PacketCompleted;
        
        /// <remarks/>
        public event getPersonRegCertStream_IncCompletedEventHandler getPersonRegCertStream_IncCompleted;
        
        /// <remarks/>
        public event getPersonRegCertStream_CorpCompletedEventHandler getPersonRegCertStream_CorpCompleted;
        
        /// <remarks/>
        public event getCorpInfoStream_PacketCompletedEventHandler getCorpInfoStream_PacketCompleted;
        
        /// <remarks/>
        public event getCorpInfoStream_IncCompletedEventHandler getCorpInfoStream_IncCompleted;
        
        /// <remarks/>
        public event getPersonInfoStream_IncCompletedEventHandler getPersonInfoStream_IncCompleted;
        
        /// <remarks/>
        public event getPersonJobCertStream_PacketCompletedEventHandler getPersonJobCertStream_PacketCompleted;
        
        /// <remarks/>
        public event getPersonInfoStream_CorpCompletedEventHandler getPersonInfoStream_CorpCompleted;
        
        /// <remarks/>
        public event getCorpStatRptStreamCompletedEventHandler getCorpStatRptStreamCompleted;
        
        /// <remarks/>
        public event getPersonJobCertStreamCompletedEventHandler getPersonJobCertStreamCompleted;
        
        /// <remarks/>
        public event getCorpInfoStream_SingleCompletedEventHandler getCorpInfoStream_SingleCompleted;
        
        /// <remarks/>
        public event getPersonInfoStream_SingleCompletedEventHandler getPersonInfoStream_SingleCompleted;
        
        /// <remarks/>
        public event getPersonRegCertStream_SingleCompletedEventHandler getPersonRegCertStream_SingleCompleted;
        
        /// <remarks/>
        public event getPersonJobCertStream_IncCompletedEventHandler getPersonJobCertStream_IncCompleted;
        
        /// <remarks/>
        public event getPersonJobCertStream_SingleCompletedEventHandler getPersonJobCertStream_SingleCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getPersonInfoStream", RequestNamespace="http://webservice.datecenter.jscedc", ResponseNamespace="http://webservice.datecenter.jscedc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", DataType="base64Binary", IsNullable=true)]
        public byte[] getPersonInfoStream([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CityCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CountyCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RegType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IsZip) {
            object[] results = this.Invoke("getPersonInfoStream", new object[] {
                        UserID,
                        CityCode,
                        CountyCode,
                        RegType,
                        IsZip});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getPersonInfoStreamAsync(string UserID, string CityCode, string CountyCode, string RegType, string IsZip) {
            this.getPersonInfoStreamAsync(UserID, CityCode, CountyCode, RegType, IsZip, null);
        }
        
        /// <remarks/>
        public void getPersonInfoStreamAsync(string UserID, string CityCode, string CountyCode, string RegType, string IsZip, object userState) {
            if ((this.getPersonInfoStreamOperationCompleted == null)) {
                this.getPersonInfoStreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonInfoStreamOperationCompleted);
            }
            this.InvokeAsync("getPersonInfoStream", new object[] {
                        UserID,
                        CityCode,
                        CountyCode,
                        RegType,
                        IsZip}, this.getPersonInfoStreamOperationCompleted, userState);
        }
        
        private void OngetPersonInfoStreamOperationCompleted(object arg) {
            if ((this.getPersonInfoStreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPersonInfoStreamCompleted(this, new getPersonInfoStreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getPersonRegCertStream_Packet", RequestNamespace="http://webservice.datecenter.jscedc", ResponseNamespace="http://webservice.datecenter.jscedc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", DataType="base64Binary", IsNullable=true)]
        public byte[] getPersonRegCertStream_Packet([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CityCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CountyCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RegType, int PacketNo, [System.Xml.Serialization.XmlIgnoreAttribute()] bool PacketNoSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IsZip) {
            object[] results = this.Invoke("getPersonRegCertStream_Packet", new object[] {
                        UserID,
                        CityCode,
                        CountyCode,
                        RegType,
                        PacketNo,
                        PacketNoSpecified,
                        IsZip});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getPersonRegCertStream_PacketAsync(string UserID, string CityCode, string CountyCode, string RegType, int PacketNo, bool PacketNoSpecified, string IsZip) {
            this.getPersonRegCertStream_PacketAsync(UserID, CityCode, CountyCode, RegType, PacketNo, PacketNoSpecified, IsZip, null);
        }
        
        /// <remarks/>
        public void getPersonRegCertStream_PacketAsync(string UserID, string CityCode, string CountyCode, string RegType, int PacketNo, bool PacketNoSpecified, string IsZip, object userState) {
            if ((this.getPersonRegCertStream_PacketOperationCompleted == null)) {
                this.getPersonRegCertStream_PacketOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonRegCertStream_PacketOperationCompleted);
            }
            this.InvokeAsync("getPersonRegCertStream_Packet", new object[] {
                        UserID,
                        CityCode,
                        CountyCode,
                        RegType,
                        PacketNo,
                        PacketNoSpecified,
                        IsZip}, this.getPersonRegCertStream_PacketOperationCompleted, userState);
        }
        
        private void OngetPersonRegCertStream_PacketOperationCompleted(object arg) {
            if ((this.getPersonRegCertStream_PacketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPersonRegCertStream_PacketCompleted(this, new getPersonRegCertStream_PacketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getCorpInfoStream", RequestNamespace="http://webservice.datecenter.jscedc", ResponseNamespace="http://webservice.datecenter.jscedc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", DataType="base64Binary", IsNullable=true)]
        public byte[] getCorpInfoStream([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CityCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CountyCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CertType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IsZip) {
            object[] results = this.Invoke("getCorpInfoStream", new object[] {
                        UserID,
                        CityCode,
                        CountyCode,
                        CertType,
                        IsZip});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getCorpInfoStreamAsync(string UserID, string CityCode, string CountyCode, string CertType, string IsZip) {
            this.getCorpInfoStreamAsync(UserID, CityCode, CountyCode, CertType, IsZip, null);
        }
        
        /// <remarks/>
        public void getCorpInfoStreamAsync(string UserID, string CityCode, string CountyCode, string CertType, string IsZip, object userState) {
            if ((this.getCorpInfoStreamOperationCompleted == null)) {
                this.getCorpInfoStreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCorpInfoStreamOperationCompleted);
            }
            this.InvokeAsync("getCorpInfoStream", new object[] {
                        UserID,
                        CityCode,
                        CountyCode,
                        CertType,
                        IsZip}, this.getCorpInfoStreamOperationCompleted, userState);
        }
        
        private void OngetCorpInfoStreamOperationCompleted(object arg) {
            if ((this.getCorpInfoStreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCorpInfoStreamCompleted(this, new getCorpInfoStreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getDataUser", RequestNamespace="http://webservice.datecenter.jscedc", ResponseNamespace="http://webservice.datecenter.jscedc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public TDataServiceUser getDataUser([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserID) {
            object[] results = this.Invoke("getDataUser", new object[] {
                        UserID});
            return ((TDataServiceUser)(results[0]));
        }
        
        /// <remarks/>
        public void getDataUserAsync(string UserID) {
            this.getDataUserAsync(UserID, null);
        }
        
        /// <remarks/>
        public void getDataUserAsync(string UserID, object userState) {
            if ((this.getDataUserOperationCompleted == null)) {
                this.getDataUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDataUserOperationCompleted);
            }
            this.InvokeAsync("getDataUser", new object[] {
                        UserID}, this.getDataUserOperationCompleted, userState);
        }
        
        private void OngetDataUserOperationCompleted(object arg) {
            if ((this.getDataUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDataUserCompleted(this, new getDataUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getPersonRegMajorStream_Inc", RequestNamespace="http://webservice.datecenter.jscedc", ResponseNamespace="http://webservice.datecenter.jscedc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", DataType="base64Binary", IsNullable=true)]
        public byte[] getPersonRegMajorStream_Inc([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RegType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string StartDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EndDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IsZip) {
            object[] results = this.Invoke("getPersonRegMajorStream_Inc", new object[] {
                        UserID,
                        RegType,
                        StartDate,
                        EndDate,
                        IsZip});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getPersonRegMajorStream_IncAsync(string UserID, string RegType, string StartDate, string EndDate, string IsZip) {
            this.getPersonRegMajorStream_IncAsync(UserID, RegType, StartDate, EndDate, IsZip, null);
        }
        
        /// <remarks/>
        public void getPersonRegMajorStream_IncAsync(string UserID, string RegType, string StartDate, string EndDate, string IsZip, object userState) {
            if ((this.getPersonRegMajorStream_IncOperationCompleted == null)) {
                this.getPersonRegMajorStream_IncOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonRegMajorStream_IncOperationCompleted);
            }
            this.InvokeAsync("getPersonRegMajorStream_Inc", new object[] {
                        UserID,
                        RegType,
                        StartDate,
                        EndDate,
                        IsZip}, this.getPersonRegMajorStream_IncOperationCompleted, userState);
        }
        
        private void OngetPersonRegMajorStream_IncOperationCompleted(object arg) {
            if ((this.getPersonRegMajorStream_IncCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPersonRegMajorStream_IncCompleted(this, new getPersonRegMajorStream_IncCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getPersonRegCertStream", RequestNamespace="http://webservice.datecenter.jscedc", ResponseNamespace="http://webservice.datecenter.jscedc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", DataType="base64Binary", IsNullable=true)]
        public byte[] getPersonRegCertStream([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CityCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CountyCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RegType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IsZip) {
            object[] results = this.Invoke("getPersonRegCertStream", new object[] {
                        UserID,
                        CityCode,
                        CountyCode,
                        RegType,
                        IsZip});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getPersonRegCertStreamAsync(string UserID, string CityCode, string CountyCode, string RegType, string IsZip) {
            this.getPersonRegCertStreamAsync(UserID, CityCode, CountyCode, RegType, IsZip, null);
        }
        
        /// <remarks/>
        public void getPersonRegCertStreamAsync(string UserID, string CityCode, string CountyCode, string RegType, string IsZip, object userState) {
            if ((this.getPersonRegCertStreamOperationCompleted == null)) {
                this.getPersonRegCertStreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonRegCertStreamOperationCompleted);
            }
            this.InvokeAsync("getPersonRegCertStream", new object[] {
                        UserID,
                        CityCode,
                        CountyCode,
                        RegType,
                        IsZip}, this.getPersonRegCertStreamOperationCompleted, userState);
        }
        
        private void OngetPersonRegCertStreamOperationCompleted(object arg) {
            if ((this.getPersonRegCertStreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPersonRegCertStreamCompleted(this, new getPersonRegCertStreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getPersonJobCertStream_Corp", RequestNamespace="http://webservice.datecenter.jscedc", ResponseNamespace="http://webservice.datecenter.jscedc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", DataType="base64Binary", IsNullable=true)]
        public byte[] getPersonJobCertStream_Corp([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CorpCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CertType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IsZip) {
            object[] results = this.Invoke("getPersonJobCertStream_Corp", new object[] {
                        UserID,
                        CorpCode,
                        CertType,
                        IsZip});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getPersonJobCertStream_CorpAsync(string UserID, string CorpCode, string CertType, string IsZip) {
            this.getPersonJobCertStream_CorpAsync(UserID, CorpCode, CertType, IsZip, null);
        }
        
        /// <remarks/>
        public void getPersonJobCertStream_CorpAsync(string UserID, string CorpCode, string CertType, string IsZip, object userState) {
            if ((this.getPersonJobCertStream_CorpOperationCompleted == null)) {
                this.getPersonJobCertStream_CorpOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonJobCertStream_CorpOperationCompleted);
            }
            this.InvokeAsync("getPersonJobCertStream_Corp", new object[] {
                        UserID,
                        CorpCode,
                        CertType,
                        IsZip}, this.getPersonJobCertStream_CorpOperationCompleted, userState);
        }
        
        private void OngetPersonJobCertStream_CorpOperationCompleted(object arg) {
            if ((this.getPersonJobCertStream_CorpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPersonJobCertStream_CorpCompleted(this, new getPersonJobCertStream_CorpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getClientIpAxis", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("getClientIpAxisResponse", Namespace="http://webservice.datecenter.jscedc")]
        public getClientIpAxisResponse getClientIpAxis() {
            object[] results = this.Invoke("getClientIpAxis", new object[0]);
            return ((getClientIpAxisResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getClientIpAxisAsync() {
            this.getClientIpAxisAsync(null);
        }
        
        /// <remarks/>
        public void getClientIpAxisAsync(object userState) {
            if ((this.getClientIpAxisOperationCompleted == null)) {
                this.getClientIpAxisOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetClientIpAxisOperationCompleted);
            }
            this.InvokeAsync("getClientIpAxis", new object[0], this.getClientIpAxisOperationCompleted, userState);
        }
        
        private void OngetClientIpAxisOperationCompleted(object arg) {
            if ((this.getClientIpAxisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getClientIpAxisCompleted(this, new getClientIpAxisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getPersonInfoStream_Packet", RequestNamespace="http://webservice.datecenter.jscedc", ResponseNamespace="http://webservice.datecenter.jscedc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", DataType="base64Binary", IsNullable=true)]
        public byte[] getPersonInfoStream_Packet([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CityCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CountyCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RegType, int PacketNo, [System.Xml.Serialization.XmlIgnoreAttribute()] bool PacketNoSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IsZip) {
            object[] results = this.Invoke("getPersonInfoStream_Packet", new object[] {
                        UserID,
                        CityCode,
                        CountyCode,
                        RegType,
                        PacketNo,
                        PacketNoSpecified,
                        IsZip});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getPersonInfoStream_PacketAsync(string UserID, string CityCode, string CountyCode, string RegType, int PacketNo, bool PacketNoSpecified, string IsZip) {
            this.getPersonInfoStream_PacketAsync(UserID, CityCode, CountyCode, RegType, PacketNo, PacketNoSpecified, IsZip, null);
        }
        
        /// <remarks/>
        public void getPersonInfoStream_PacketAsync(string UserID, string CityCode, string CountyCode, string RegType, int PacketNo, bool PacketNoSpecified, string IsZip, object userState) {
            if ((this.getPersonInfoStream_PacketOperationCompleted == null)) {
                this.getPersonInfoStream_PacketOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonInfoStream_PacketOperationCompleted);
            }
            this.InvokeAsync("getPersonInfoStream_Packet", new object[] {
                        UserID,
                        CityCode,
                        CountyCode,
                        RegType,
                        PacketNo,
                        PacketNoSpecified,
                        IsZip}, this.getPersonInfoStream_PacketOperationCompleted, userState);
        }
        
        private void OngetPersonInfoStream_PacketOperationCompleted(object arg) {
            if ((this.getPersonInfoStream_PacketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPersonInfoStream_PacketCompleted(this, new getPersonInfoStream_PacketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getPersonRegCertStream_Inc", RequestNamespace="http://webservice.datecenter.jscedc", ResponseNamespace="http://webservice.datecenter.jscedc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", DataType="base64Binary", IsNullable=true)]
        public byte[] getPersonRegCertStream_Inc([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CityCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CountyCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RegType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string StartDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EndDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IsZip) {
            object[] results = this.Invoke("getPersonRegCertStream_Inc", new object[] {
                        UserID,
                        CityCode,
                        CountyCode,
                        RegType,
                        StartDate,
                        EndDate,
                        IsZip});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getPersonRegCertStream_IncAsync(string UserID, string CityCode, string CountyCode, string RegType, string StartDate, string EndDate, string IsZip) {
            this.getPersonRegCertStream_IncAsync(UserID, CityCode, CountyCode, RegType, StartDate, EndDate, IsZip, null);
        }
        
        /// <remarks/>
        public void getPersonRegCertStream_IncAsync(string UserID, string CityCode, string CountyCode, string RegType, string StartDate, string EndDate, string IsZip, object userState) {
            if ((this.getPersonRegCertStream_IncOperationCompleted == null)) {
                this.getPersonRegCertStream_IncOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonRegCertStream_IncOperationCompleted);
            }
            this.InvokeAsync("getPersonRegCertStream_Inc", new object[] {
                        UserID,
                        CityCode,
                        CountyCode,
                        RegType,
                        StartDate,
                        EndDate,
                        IsZip}, this.getPersonRegCertStream_IncOperationCompleted, userState);
        }
        
        private void OngetPersonRegCertStream_IncOperationCompleted(object arg) {
            if ((this.getPersonRegCertStream_IncCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPersonRegCertStream_IncCompleted(this, new getPersonRegCertStream_IncCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getPersonRegCertStream_Corp", RequestNamespace="http://webservice.datecenter.jscedc", ResponseNamespace="http://webservice.datecenter.jscedc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", DataType="base64Binary", IsNullable=true)]
        public byte[] getPersonRegCertStream_Corp([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CorpCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RegType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IsZip) {
            object[] results = this.Invoke("getPersonRegCertStream_Corp", new object[] {
                        UserID,
                        CorpCode,
                        RegType,
                        IsZip});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getPersonRegCertStream_CorpAsync(string UserID, string CorpCode, string RegType, string IsZip) {
            this.getPersonRegCertStream_CorpAsync(UserID, CorpCode, RegType, IsZip, null);
        }
        
        /// <remarks/>
        public void getPersonRegCertStream_CorpAsync(string UserID, string CorpCode, string RegType, string IsZip, object userState) {
            if ((this.getPersonRegCertStream_CorpOperationCompleted == null)) {
                this.getPersonRegCertStream_CorpOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonRegCertStream_CorpOperationCompleted);
            }
            this.InvokeAsync("getPersonRegCertStream_Corp", new object[] {
                        UserID,
                        CorpCode,
                        RegType,
                        IsZip}, this.getPersonRegCertStream_CorpOperationCompleted, userState);
        }
        
        private void OngetPersonRegCertStream_CorpOperationCompleted(object arg) {
            if ((this.getPersonRegCertStream_CorpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPersonRegCertStream_CorpCompleted(this, new getPersonRegCertStream_CorpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getCorpInfoStream_Packet", RequestNamespace="http://webservice.datecenter.jscedc", ResponseNamespace="http://webservice.datecenter.jscedc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", DataType="base64Binary", IsNullable=true)]
        public byte[] getCorpInfoStream_Packet([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CityCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CountyCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CertType, int PacketNo, [System.Xml.Serialization.XmlIgnoreAttribute()] bool PacketNoSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IsZip) {
            object[] results = this.Invoke("getCorpInfoStream_Packet", new object[] {
                        UserID,
                        CityCode,
                        CountyCode,
                        CertType,
                        PacketNo,
                        PacketNoSpecified,
                        IsZip});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getCorpInfoStream_PacketAsync(string UserID, string CityCode, string CountyCode, string CertType, int PacketNo, bool PacketNoSpecified, string IsZip) {
            this.getCorpInfoStream_PacketAsync(UserID, CityCode, CountyCode, CertType, PacketNo, PacketNoSpecified, IsZip, null);
        }
        
        /// <remarks/>
        public void getCorpInfoStream_PacketAsync(string UserID, string CityCode, string CountyCode, string CertType, int PacketNo, bool PacketNoSpecified, string IsZip, object userState) {
            if ((this.getCorpInfoStream_PacketOperationCompleted == null)) {
                this.getCorpInfoStream_PacketOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCorpInfoStream_PacketOperationCompleted);
            }
            this.InvokeAsync("getCorpInfoStream_Packet", new object[] {
                        UserID,
                        CityCode,
                        CountyCode,
                        CertType,
                        PacketNo,
                        PacketNoSpecified,
                        IsZip}, this.getCorpInfoStream_PacketOperationCompleted, userState);
        }
        
        private void OngetCorpInfoStream_PacketOperationCompleted(object arg) {
            if ((this.getCorpInfoStream_PacketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCorpInfoStream_PacketCompleted(this, new getCorpInfoStream_PacketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getCorpInfoStream_Inc", RequestNamespace="http://webservice.datecenter.jscedc", ResponseNamespace="http://webservice.datecenter.jscedc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", DataType="base64Binary", IsNullable=true)]
        public byte[] getCorpInfoStream_Inc([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CityCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CountyCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CertType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string StartDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EndDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IsZip) {
            object[] results = this.Invoke("getCorpInfoStream_Inc", new object[] {
                        UserID,
                        CityCode,
                        CountyCode,
                        CertType,
                        StartDate,
                        EndDate,
                        IsZip});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getCorpInfoStream_IncAsync(string UserID, string CityCode, string CountyCode, string CertType, string StartDate, string EndDate, string IsZip) {
            this.getCorpInfoStream_IncAsync(UserID, CityCode, CountyCode, CertType, StartDate, EndDate, IsZip, null);
        }
        
        /// <remarks/>
        public void getCorpInfoStream_IncAsync(string UserID, string CityCode, string CountyCode, string CertType, string StartDate, string EndDate, string IsZip, object userState) {
            if ((this.getCorpInfoStream_IncOperationCompleted == null)) {
                this.getCorpInfoStream_IncOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCorpInfoStream_IncOperationCompleted);
            }
            this.InvokeAsync("getCorpInfoStream_Inc", new object[] {
                        UserID,
                        CityCode,
                        CountyCode,
                        CertType,
                        StartDate,
                        EndDate,
                        IsZip}, this.getCorpInfoStream_IncOperationCompleted, userState);
        }
        
        private void OngetCorpInfoStream_IncOperationCompleted(object arg) {
            if ((this.getCorpInfoStream_IncCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCorpInfoStream_IncCompleted(this, new getCorpInfoStream_IncCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getPersonInfoStream_Inc", RequestNamespace="http://webservice.datecenter.jscedc", ResponseNamespace="http://webservice.datecenter.jscedc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", DataType="base64Binary", IsNullable=true)]
        public byte[] getPersonInfoStream_Inc([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CityCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CountyCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RegType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string StartDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EndDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IsZip) {
            object[] results = this.Invoke("getPersonInfoStream_Inc", new object[] {
                        UserID,
                        CityCode,
                        CountyCode,
                        RegType,
                        StartDate,
                        EndDate,
                        IsZip});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getPersonInfoStream_IncAsync(string UserID, string CityCode, string CountyCode, string RegType, string StartDate, string EndDate, string IsZip) {
            this.getPersonInfoStream_IncAsync(UserID, CityCode, CountyCode, RegType, StartDate, EndDate, IsZip, null);
        }
        
        /// <remarks/>
        public void getPersonInfoStream_IncAsync(string UserID, string CityCode, string CountyCode, string RegType, string StartDate, string EndDate, string IsZip, object userState) {
            if ((this.getPersonInfoStream_IncOperationCompleted == null)) {
                this.getPersonInfoStream_IncOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonInfoStream_IncOperationCompleted);
            }
            this.InvokeAsync("getPersonInfoStream_Inc", new object[] {
                        UserID,
                        CityCode,
                        CountyCode,
                        RegType,
                        StartDate,
                        EndDate,
                        IsZip}, this.getPersonInfoStream_IncOperationCompleted, userState);
        }
        
        private void OngetPersonInfoStream_IncOperationCompleted(object arg) {
            if ((this.getPersonInfoStream_IncCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPersonInfoStream_IncCompleted(this, new getPersonInfoStream_IncCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getPersonJobCertStream_Packet", RequestNamespace="http://webservice.datecenter.jscedc", ResponseNamespace="http://webservice.datecenter.jscedc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", DataType="base64Binary", IsNullable=true)]
        public byte[] getPersonJobCertStream_Packet([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CityCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CountyCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CertType, int PacketNo, [System.Xml.Serialization.XmlIgnoreAttribute()] bool PacketNoSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IsZip) {
            object[] results = this.Invoke("getPersonJobCertStream_Packet", new object[] {
                        UserID,
                        CityCode,
                        CountyCode,
                        CertType,
                        PacketNo,
                        PacketNoSpecified,
                        IsZip});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getPersonJobCertStream_PacketAsync(string UserID, string CityCode, string CountyCode, string CertType, int PacketNo, bool PacketNoSpecified, string IsZip) {
            this.getPersonJobCertStream_PacketAsync(UserID, CityCode, CountyCode, CertType, PacketNo, PacketNoSpecified, IsZip, null);
        }
        
        /// <remarks/>
        public void getPersonJobCertStream_PacketAsync(string UserID, string CityCode, string CountyCode, string CertType, int PacketNo, bool PacketNoSpecified, string IsZip, object userState) {
            if ((this.getPersonJobCertStream_PacketOperationCompleted == null)) {
                this.getPersonJobCertStream_PacketOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonJobCertStream_PacketOperationCompleted);
            }
            this.InvokeAsync("getPersonJobCertStream_Packet", new object[] {
                        UserID,
                        CityCode,
                        CountyCode,
                        CertType,
                        PacketNo,
                        PacketNoSpecified,
                        IsZip}, this.getPersonJobCertStream_PacketOperationCompleted, userState);
        }
        
        private void OngetPersonJobCertStream_PacketOperationCompleted(object arg) {
            if ((this.getPersonJobCertStream_PacketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPersonJobCertStream_PacketCompleted(this, new getPersonJobCertStream_PacketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getPersonInfoStream_Corp", RequestNamespace="http://webservice.datecenter.jscedc", ResponseNamespace="http://webservice.datecenter.jscedc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", DataType="base64Binary", IsNullable=true)]
        public byte[] getPersonInfoStream_Corp([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CorpCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RegType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IsZip) {
            object[] results = this.Invoke("getPersonInfoStream_Corp", new object[] {
                        UserID,
                        CorpCode,
                        RegType,
                        IsZip});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getPersonInfoStream_CorpAsync(string UserID, string CorpCode, string RegType, string IsZip) {
            this.getPersonInfoStream_CorpAsync(UserID, CorpCode, RegType, IsZip, null);
        }
        
        /// <remarks/>
        public void getPersonInfoStream_CorpAsync(string UserID, string CorpCode, string RegType, string IsZip, object userState) {
            if ((this.getPersonInfoStream_CorpOperationCompleted == null)) {
                this.getPersonInfoStream_CorpOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonInfoStream_CorpOperationCompleted);
            }
            this.InvokeAsync("getPersonInfoStream_Corp", new object[] {
                        UserID,
                        CorpCode,
                        RegType,
                        IsZip}, this.getPersonInfoStream_CorpOperationCompleted, userState);
        }
        
        private void OngetPersonInfoStream_CorpOperationCompleted(object arg) {
            if ((this.getPersonInfoStream_CorpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPersonInfoStream_CorpCompleted(this, new getPersonInfoStream_CorpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getCorpStatRptStream", RequestNamespace="http://webservice.datecenter.jscedc", ResponseNamespace="http://webservice.datecenter.jscedc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", DataType="base64Binary", IsNullable=true)]
        public byte[] getCorpStatRptStream([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CorpCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RptPeriod, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string StartDate) {
            object[] results = this.Invoke("getCorpStatRptStream", new object[] {
                        CorpCode,
                        RptPeriod,
                        StartDate});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getCorpStatRptStreamAsync(string CorpCode, string RptPeriod, string StartDate) {
            this.getCorpStatRptStreamAsync(CorpCode, RptPeriod, StartDate, null);
        }
        
        /// <remarks/>
        public void getCorpStatRptStreamAsync(string CorpCode, string RptPeriod, string StartDate, object userState) {
            if ((this.getCorpStatRptStreamOperationCompleted == null)) {
                this.getCorpStatRptStreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCorpStatRptStreamOperationCompleted);
            }
            this.InvokeAsync("getCorpStatRptStream", new object[] {
                        CorpCode,
                        RptPeriod,
                        StartDate}, this.getCorpStatRptStreamOperationCompleted, userState);
        }
        
        private void OngetCorpStatRptStreamOperationCompleted(object arg) {
            if ((this.getCorpStatRptStreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCorpStatRptStreamCompleted(this, new getCorpStatRptStreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getPersonJobCertStream", RequestNamespace="http://webservice.datecenter.jscedc", ResponseNamespace="http://webservice.datecenter.jscedc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", DataType="base64Binary", IsNullable=true)]
        public byte[] getPersonJobCertStream([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CityCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CountyCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CertType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IsZip) {
            object[] results = this.Invoke("getPersonJobCertStream", new object[] {
                        UserID,
                        CityCode,
                        CountyCode,
                        CertType,
                        IsZip});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getPersonJobCertStreamAsync(string UserID, string CityCode, string CountyCode, string CertType, string IsZip) {
            this.getPersonJobCertStreamAsync(UserID, CityCode, CountyCode, CertType, IsZip, null);
        }
        
        /// <remarks/>
        public void getPersonJobCertStreamAsync(string UserID, string CityCode, string CountyCode, string CertType, string IsZip, object userState) {
            if ((this.getPersonJobCertStreamOperationCompleted == null)) {
                this.getPersonJobCertStreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonJobCertStreamOperationCompleted);
            }
            this.InvokeAsync("getPersonJobCertStream", new object[] {
                        UserID,
                        CityCode,
                        CountyCode,
                        CertType,
                        IsZip}, this.getPersonJobCertStreamOperationCompleted, userState);
        }
        
        private void OngetPersonJobCertStreamOperationCompleted(object arg) {
            if ((this.getPersonJobCertStreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPersonJobCertStreamCompleted(this, new getPersonJobCertStreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getCorpInfoStream_Single", RequestNamespace="http://webservice.datecenter.jscedc", ResponseNamespace="http://webservice.datecenter.jscedc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", DataType="base64Binary", IsNullable=true)]
        public byte[] getCorpInfoStream_Single([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CorpCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IsZip) {
            object[] results = this.Invoke("getCorpInfoStream_Single", new object[] {
                        UserID,
                        CorpCode,
                        IsZip});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getCorpInfoStream_SingleAsync(string UserID, string CorpCode, string IsZip) {
            this.getCorpInfoStream_SingleAsync(UserID, CorpCode, IsZip, null);
        }
        
        /// <remarks/>
        public void getCorpInfoStream_SingleAsync(string UserID, string CorpCode, string IsZip, object userState) {
            if ((this.getCorpInfoStream_SingleOperationCompleted == null)) {
                this.getCorpInfoStream_SingleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCorpInfoStream_SingleOperationCompleted);
            }
            this.InvokeAsync("getCorpInfoStream_Single", new object[] {
                        UserID,
                        CorpCode,
                        IsZip}, this.getCorpInfoStream_SingleOperationCompleted, userState);
        }
        
        private void OngetCorpInfoStream_SingleOperationCompleted(object arg) {
            if ((this.getCorpInfoStream_SingleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCorpInfoStream_SingleCompleted(this, new getCorpInfoStream_SingleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getPersonInfoStream_Single", RequestNamespace="http://webservice.datecenter.jscedc", ResponseNamespace="http://webservice.datecenter.jscedc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", DataType="base64Binary", IsNullable=true)]
        public byte[] getPersonInfoStream_Single([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IDCardNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RegType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IsZip) {
            object[] results = this.Invoke("getPersonInfoStream_Single", new object[] {
                        UserID,
                        IDCardNo,
                        RegType,
                        IsZip});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getPersonInfoStream_SingleAsync(string UserID, string IDCardNo, string RegType, string IsZip) {
            this.getPersonInfoStream_SingleAsync(UserID, IDCardNo, RegType, IsZip, null);
        }
        
        /// <remarks/>
        public void getPersonInfoStream_SingleAsync(string UserID, string IDCardNo, string RegType, string IsZip, object userState) {
            if ((this.getPersonInfoStream_SingleOperationCompleted == null)) {
                this.getPersonInfoStream_SingleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonInfoStream_SingleOperationCompleted);
            }
            this.InvokeAsync("getPersonInfoStream_Single", new object[] {
                        UserID,
                        IDCardNo,
                        RegType,
                        IsZip}, this.getPersonInfoStream_SingleOperationCompleted, userState);
        }
        
        private void OngetPersonInfoStream_SingleOperationCompleted(object arg) {
            if ((this.getPersonInfoStream_SingleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPersonInfoStream_SingleCompleted(this, new getPersonInfoStream_SingleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getPersonRegCertStream_Single", RequestNamespace="http://webservice.datecenter.jscedc", ResponseNamespace="http://webservice.datecenter.jscedc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", DataType="base64Binary", IsNullable=true)]
        public byte[] getPersonRegCertStream_Single([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IDCardNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string RegType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IsZip) {
            object[] results = this.Invoke("getPersonRegCertStream_Single", new object[] {
                        UserID,
                        IDCardNo,
                        RegType,
                        IsZip});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getPersonRegCertStream_SingleAsync(string UserID, string IDCardNo, string RegType, string IsZip) {
            this.getPersonRegCertStream_SingleAsync(UserID, IDCardNo, RegType, IsZip, null);
        }
        
        /// <remarks/>
        public void getPersonRegCertStream_SingleAsync(string UserID, string IDCardNo, string RegType, string IsZip, object userState) {
            if ((this.getPersonRegCertStream_SingleOperationCompleted == null)) {
                this.getPersonRegCertStream_SingleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonRegCertStream_SingleOperationCompleted);
            }
            this.InvokeAsync("getPersonRegCertStream_Single", new object[] {
                        UserID,
                        IDCardNo,
                        RegType,
                        IsZip}, this.getPersonRegCertStream_SingleOperationCompleted, userState);
        }
        
        private void OngetPersonRegCertStream_SingleOperationCompleted(object arg) {
            if ((this.getPersonRegCertStream_SingleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPersonRegCertStream_SingleCompleted(this, new getPersonRegCertStream_SingleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getPersonJobCertStream_Inc", RequestNamespace="http://webservice.datecenter.jscedc", ResponseNamespace="http://webservice.datecenter.jscedc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", DataType="base64Binary", IsNullable=true)]
        public byte[] getPersonJobCertStream_Inc([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CityCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CountyCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CertType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string StartDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string EndDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IsZip) {
            object[] results = this.Invoke("getPersonJobCertStream_Inc", new object[] {
                        UserID,
                        CityCode,
                        CountyCode,
                        CertType,
                        StartDate,
                        EndDate,
                        IsZip});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getPersonJobCertStream_IncAsync(string UserID, string CityCode, string CountyCode, string CertType, string StartDate, string EndDate, string IsZip) {
            this.getPersonJobCertStream_IncAsync(UserID, CityCode, CountyCode, CertType, StartDate, EndDate, IsZip, null);
        }
        
        /// <remarks/>
        public void getPersonJobCertStream_IncAsync(string UserID, string CityCode, string CountyCode, string CertType, string StartDate, string EndDate, string IsZip, object userState) {
            if ((this.getPersonJobCertStream_IncOperationCompleted == null)) {
                this.getPersonJobCertStream_IncOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonJobCertStream_IncOperationCompleted);
            }
            this.InvokeAsync("getPersonJobCertStream_Inc", new object[] {
                        UserID,
                        CityCode,
                        CountyCode,
                        CertType,
                        StartDate,
                        EndDate,
                        IsZip}, this.getPersonJobCertStream_IncOperationCompleted, userState);
        }
        
        private void OngetPersonJobCertStream_IncOperationCompleted(object arg) {
            if ((this.getPersonJobCertStream_IncCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPersonJobCertStream_IncCompleted(this, new getPersonJobCertStream_IncCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getPersonJobCertStream_Single", RequestNamespace="http://webservice.datecenter.jscedc", ResponseNamespace="http://webservice.datecenter.jscedc", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", DataType="base64Binary", IsNullable=true)]
        public byte[] getPersonJobCertStream_Single([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string UserID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IDCardNo, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CertType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string IsZip) {
            object[] results = this.Invoke("getPersonJobCertStream_Single", new object[] {
                        UserID,
                        IDCardNo,
                        CertType,
                        IsZip});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void getPersonJobCertStream_SingleAsync(string UserID, string IDCardNo, string CertType, string IsZip) {
            this.getPersonJobCertStream_SingleAsync(UserID, IDCardNo, CertType, IsZip, null);
        }
        
        /// <remarks/>
        public void getPersonJobCertStream_SingleAsync(string UserID, string IDCardNo, string CertType, string IsZip, object userState) {
            if ((this.getPersonJobCertStream_SingleOperationCompleted == null)) {
                this.getPersonJobCertStream_SingleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonJobCertStream_SingleOperationCompleted);
            }
            this.InvokeAsync("getPersonJobCertStream_Single", new object[] {
                        UserID,
                        IDCardNo,
                        CertType,
                        IsZip}, this.getPersonJobCertStream_SingleOperationCompleted, userState);
        }
        
        private void OngetPersonJobCertStream_SingleOperationCompleted(object arg) {
            if ((this.getPersonJobCertStream_SingleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPersonJobCertStream_SingleCompleted(this, new getPersonJobCertStream_SingleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.8009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://data.datecenter.jscedc/xsd")]
    public partial class TDataServiceUser {
        
        private string citycodeField;
        
        private string conditionField;
        
        private string countycodeField;
        
        private string endtimeField;
        
        private string newuseridField;
        
        private string starttimeField;
        
        private string statusField;
        
        private string useridField;
        
        private string usernameField;
        
        private string usertypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string citycode {
            get {
                return this.citycodeField;
            }
            set {
                this.citycodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string condition {
            get {
                return this.conditionField;
            }
            set {
                this.conditionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string countycode {
            get {
                return this.countycodeField;
            }
            set {
                this.countycodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string endtime {
            get {
                return this.endtimeField;
            }
            set {
                this.endtimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string newuserid {
            get {
                return this.newuseridField;
            }
            set {
                this.newuseridField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string starttime {
            get {
                return this.starttimeField;
            }
            set {
                this.starttimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                this.useridField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string usertype {
            get {
                return this.usertypeField;
            }
            set {
                this.usertypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.8009")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://webservice.datecenter.jscedc")]
    public partial class getClientIpAxisResponse {
        
        private string returnField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string @return {
            get {
                return this.returnField;
            }
            set {
                this.returnField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    public delegate void getPersonInfoStreamCompletedEventHandler(object sender, getPersonInfoStreamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPersonInfoStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPersonInfoStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    public delegate void getPersonRegCertStream_PacketCompletedEventHandler(object sender, getPersonRegCertStream_PacketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPersonRegCertStream_PacketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPersonRegCertStream_PacketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    public delegate void getCorpInfoStreamCompletedEventHandler(object sender, getCorpInfoStreamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCorpInfoStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCorpInfoStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    public delegate void getDataUserCompletedEventHandler(object sender, getDataUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDataUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDataUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TDataServiceUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TDataServiceUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    public delegate void getPersonRegMajorStream_IncCompletedEventHandler(object sender, getPersonRegMajorStream_IncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPersonRegMajorStream_IncCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPersonRegMajorStream_IncCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    public delegate void getPersonRegCertStreamCompletedEventHandler(object sender, getPersonRegCertStreamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPersonRegCertStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPersonRegCertStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    public delegate void getPersonJobCertStream_CorpCompletedEventHandler(object sender, getPersonJobCertStream_CorpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPersonJobCertStream_CorpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPersonJobCertStream_CorpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    public delegate void getClientIpAxisCompletedEventHandler(object sender, getClientIpAxisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getClientIpAxisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getClientIpAxisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public getClientIpAxisResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((getClientIpAxisResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    public delegate void getPersonInfoStream_PacketCompletedEventHandler(object sender, getPersonInfoStream_PacketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPersonInfoStream_PacketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPersonInfoStream_PacketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    public delegate void getPersonRegCertStream_IncCompletedEventHandler(object sender, getPersonRegCertStream_IncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPersonRegCertStream_IncCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPersonRegCertStream_IncCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    public delegate void getPersonRegCertStream_CorpCompletedEventHandler(object sender, getPersonRegCertStream_CorpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPersonRegCertStream_CorpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPersonRegCertStream_CorpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    public delegate void getCorpInfoStream_PacketCompletedEventHandler(object sender, getCorpInfoStream_PacketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCorpInfoStream_PacketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCorpInfoStream_PacketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    public delegate void getCorpInfoStream_IncCompletedEventHandler(object sender, getCorpInfoStream_IncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCorpInfoStream_IncCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCorpInfoStream_IncCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    public delegate void getPersonInfoStream_IncCompletedEventHandler(object sender, getPersonInfoStream_IncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPersonInfoStream_IncCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPersonInfoStream_IncCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    public delegate void getPersonJobCertStream_PacketCompletedEventHandler(object sender, getPersonJobCertStream_PacketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPersonJobCertStream_PacketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPersonJobCertStream_PacketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    public delegate void getPersonInfoStream_CorpCompletedEventHandler(object sender, getPersonInfoStream_CorpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPersonInfoStream_CorpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPersonInfoStream_CorpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    public delegate void getCorpStatRptStreamCompletedEventHandler(object sender, getCorpStatRptStreamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCorpStatRptStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCorpStatRptStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    public delegate void getPersonJobCertStreamCompletedEventHandler(object sender, getPersonJobCertStreamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPersonJobCertStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPersonJobCertStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    public delegate void getCorpInfoStream_SingleCompletedEventHandler(object sender, getCorpInfoStream_SingleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCorpInfoStream_SingleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCorpInfoStream_SingleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    public delegate void getPersonInfoStream_SingleCompletedEventHandler(object sender, getPersonInfoStream_SingleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPersonInfoStream_SingleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPersonInfoStream_SingleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    public delegate void getPersonRegCertStream_SingleCompletedEventHandler(object sender, getPersonRegCertStream_SingleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPersonRegCertStream_SingleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPersonRegCertStream_SingleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    public delegate void getPersonJobCertStream_IncCompletedEventHandler(object sender, getPersonJobCertStream_IncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPersonJobCertStream_IncCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPersonJobCertStream_IncCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    public delegate void getPersonJobCertStream_SingleCompletedEventHandler(object sender, getPersonJobCertStream_SingleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.7905")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPersonJobCertStream_SingleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPersonJobCertStream_SingleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591