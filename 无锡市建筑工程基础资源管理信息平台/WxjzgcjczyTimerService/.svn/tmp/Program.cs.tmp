using System;
using System.Collections.Generic;
using System.Linq;
using System.ServiceProcess;
using System.Text;
using WxsjzxTimerService;
using WxsjzxTimerService.Common;
using System.Data;
using WxjzgcjczyTimerService.model;
using Bigdesk8;
using Bigdesk8.Data;
using System.Diagnostics;
using System.Net;
using System.IO;

namespace WxjzgcjczyTimerService
{
    static class Program
    {
        /// <summary>
        /// 应用程序的主入口点。
        /// </summary>
        static void Main()
        {

            //ServiceBase[] ServicesToRun;
            //ServicesToRun = new ServiceBase[] 
            //{ 
            //    new Service1() ,
            //    new Service2() 
            //};
            //ServiceBase.Run(ServicesToRun);


            //YourTask_PullDataFromSxxzx_Jsdw();
<<<<<<< .mine
            YourTask_PullDataFromSxxzx_Swqyxx("222");
           // YourTask_PullDataFromSxxzx_Swryxx("111");
=======
           YourTask_PullDataFromSxxzx_Swqyxx("222");
             //YourTask_PullDataFromSxxzx_Swryxx("111");
>>>>>>> .r207
        }

        /// <summary>
        /// 从江苏建设公共基础数据平台获取建设单位信息
        /// </summary>
       static void YourTask_PullDataFromSxxzx_Jsdw()
        {
            Public.WriteLog("执行YourTask_PullDataFromSxxzx_Jsdw方法：");

            string tag = Tag.江苏建设公共基础数据平台.ToString();
            string userID = "wxszjj01";
            DataService dataService = new DataService();
            DataTable dt_xzqhdm = dataService.Get_tbXzqdmDic();
            XmlHelper helper = new XmlHelper();

            //往数据监控日志表项添加一条记录
            int allCount_qyxx = 0, success_count_qyxx = 0;
          
            NewDataService.NewDataService newDataService = new NewDataService.NewDataService();
            DataRow row;

            try
            {
                foreach (DataRow row_xzqdm in dt_xzqhdm.Rows)
                {
                    string xzqdm = row_xzqdm["Code"].ToString2();

                    byte[] bytes = newDataService.getCorpInfo(userID, "320200", xzqdm, "13", "0");

                    string result = System.Text.Encoding.UTF8.GetString(bytes, 0, bytes.Length);

                

                    var index = result.IndexOf("<ReturnInfo>");
                    if (index >= 0)
                    {
                        string returnResult = result.Substring(index, result.LastIndexOf("</ReturnInfo>") - index + 13);
                        if (string.IsNullOrEmpty(returnResult))
                        {
                            continue;
                        }

                        ReturnInfo returnInfo = helper.DeserializeXML<ReturnInfo>(returnResult);
                        if (!returnInfo.Status)
                        {
                            continue;
                        }

                    }
                    index = result.IndexOf("<CorpBasicInfo>");
                    if (index >= 0)
                    {
                        string corpBasicInfoString = result.Substring(index, result.LastIndexOf("</CorpBasicInfo>") - index + 16);
                        CorpBasicInfoBody corpBasicInfoBody = helper.DeserializeXML<CorpBasicInfoBody>("<CorpBasicInfoBody><CorpBasicInfoArray>" + corpBasicInfoString + "</CorpBasicInfoArray></CorpBasicInfoBody>");
                        if (corpBasicInfoBody != null)
                        {
                            //CorpChiefPersonBody corpChiefPersonArr = new CorpChiefPersonBody();
                            //int corpChiefPersonIndex = result.IndexOf("<CorpChiefPerson>");
                            //if (corpChiefPersonIndex >= 0)
                            //{
                            //    string corpChiefPersonString = result.Substring(corpChiefPersonIndex, result.LastIndexOf("</CorpChiefPerson>") - corpChiefPersonIndex + 18);
                            //    corpChiefPersonArr = helper.DeserializeXML<CorpChiefPersonBody>(
                            //      "<CorpChiefPersonBody><CorpChiefPersonArray>" + corpChiefPersonString + "</CorpChiefPersonArray></CorpChiefPersonBody>");
                            //}

                            CorpCertInfoBody corpCertInfoArr = new CorpCertInfoBody();
                            int CorpCertInfoIndex = result.IndexOf("<CorpCertInfo>");
                            if (CorpCertInfoIndex >= 0)
                            {
                                string corpCertInfoString = result.Substring(CorpCertInfoIndex, result.LastIndexOf("</CorpCertInfo>") - CorpCertInfoIndex + 15);
                                corpCertInfoArr = helper.DeserializeXML<CorpCertInfoBody>(
                                    "<CorpCertInfoBody><CorpCertInfoArray>" + corpCertInfoString + "</CorpCertInfoArray></CorpCertInfoBody>");
                            }

                            CorpCertQualBody corpCertQualArr = new CorpCertQualBody();
                            int CorpCertQualIndex = result.IndexOf("<CorpCertQual>");

                            if (CorpCertQualIndex >= 0)
                            {
                                string corpCertQualString = result.Substring(CorpCertQualIndex, result.LastIndexOf("</CorpCertQual>") - CorpCertQualIndex + 15);
                                corpCertQualArr = helper.DeserializeXML<CorpCertQualBody>(
                                    "<CorpCertQualBody><CorpCertQualArray>" + corpCertQualString + "</CorpCertQualArray></CorpCertQualBody>");
                            }

                            foreach (CorpBasicInfo corpBasicInfo in corpBasicInfoBody.array)
                            {
                                try
                                {
                                    #region  更新企业基本信息

                                    DataTable dt = dataService.Get_uepp_jsdw(corpBasicInfo.CorpCode);

                                    if (dt.Rows.Count == 0)
                                    {
                                        if (corpBasicInfo.CorpCode.Length == 9)
                                        {
                                            corpBasicInfo.CorpCode = corpBasicInfo.CorpCode.Substring(0, 8) + '-' + corpBasicInfo.CorpCode.Substring(8, 1);
                                        }
                                        //检查该企业是否存在社会信用代码，若存在，则转化为社会信用代码
                                        if (corpBasicInfo.CorpCode.Length == 10)
                                        {
                                            string qyShxydm = dataService.Get_UEPP_Jsdw_Shxydm(corpBasicInfo.CorpCode);
                                            if (!string.IsNullOrEmpty(qyShxydm))
                                            {
                                                corpBasicInfo.CorpCode = qyShxydm;
                                            }
                                        }

                                        row = dt.NewRow();
                                        dt.Rows.Add(row);
                                        row["jsdwID"] = corpBasicInfo.CorpCode;
                                    }
                                    else
                                    {
                                        row = dt.Rows[0];
                                        if (!string.IsNullOrEmpty(corpBasicInfo.UpdateDate))
                                        {
                                            if (DateTime.Parse(row["xgrqsj"].ToString2()).ToString("yyyy-MM-dd") == DateTime.Parse(corpBasicInfo.UpdateDate).ToString("yyyy-MM-dd"))
                                            {
                                                continue;
                                            }
                                        }
                                    }
                                    row["tag"] = tag;

                                    row["zzjgdm"] = corpBasicInfo.CorpCode;
                                    row["jsdw"] = corpBasicInfo.CorpName;
                                    row["dwflID"] = "1";
                                    row["dwfl"] = "房地产开发企业";
                                    row["yb"] = corpBasicInfo.PostCode;
                                    row["dwdz"] = corpBasicInfo.CorpAddress;
                                    row["fddbr"] = corpBasicInfo.LegalMan;
                                    row["yyzz"] = corpBasicInfo.LicenseNo;
                                    row["fax"] = corpBasicInfo.Fax;
                                    row["lxdh"] = corpBasicInfo.LinkPhone;
                                    if (!string.IsNullOrEmpty(corpBasicInfo.UpdateDate))
                                        row["xgrqsj"] = corpBasicInfo.UpdateDate;
                                    else
                                        row["xgrqsj"] = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");

                                    row["OperateDate"] = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss");
                                    row["DataState"] = 0;
                                    allCount_qyxx++;
                                    if (!dataService.Submit_uepp_jsdw(dt))
                                    {
                                        Public.WriteLog("建设单位：" + corpBasicInfo.CorpName + "," + corpBasicInfo.CorpCode + "，基本信息保存失败！");
                                       
                                    }
                                    else
                                    {
                                        success_count_qyxx++;
                                    }
                                    #endregion

                                }
                                catch (Exception ex)
                                {
                                   
                                }
                            }
                        }
                    }
                }
            }
            catch (Exception ex)
            {
               
            }
        }



       static void YourTask_PullDataFromSxxzx_Swqyxx(string DataJkLogID)
       {
           Public.WriteLog("执行YourTask_PullDataFromSxxzx_qyxx方法：");
           string tag = Tag.江苏建设公共基础数据平台.ToString();
           string userID = "wxszjj01";
           DataService dataService = new DataService();
           DataTable dt_xzqhdm = dataService.Get_tbXzqdmDic();
           XmlHelper helper = new XmlHelper();

           DataDownService.dataDownService dataDownService = new DataDownService.dataDownService();
           DataRow row;

           //往数据监控日志表项添加一条记录
           DataTable dt_DataJkDataDetail_qyxx = dataService.GetSchema_DataJkDataDetail();
           long Id_DataJkDataDetail_qyxx = dataService.Get_DataJkDataDetailNewID().ToInt64();

           int allCount_qyxx = 0, success_count_qyxx = 0;
           DataRow row_DataJkDataDetail_qyxx = dt_DataJkDataDetail_qyxx.NewRow();
           dt_DataJkDataDetail_qyxx.Rows.Add(row_DataJkDataDetail_qyxx);

           row_DataJkDataDetail_qyxx["ID"] = Id_DataJkDataDetail_qyxx++;
           row_DataJkDataDetail_qyxx["DataJkLogID"] = DataJkLogID;
           row_DataJkDataDetail_qyxx["tableName"] = "UEPP_Qyjbxx";
           row_DataJkDataDetail_qyxx["MethodName"] = "getOutCorpInfo_Inc";
           row_DataJkDataDetail_qyxx["bz"] = "从江苏建设公共基础数据平台拉取省外企业信息";
           try
           {
               DataTable dt_SaveDataLog = dataService.GetSchema_SaveDataLog();

               NewDataService.NewDataService newDataService = new WxjzgcjczyTimerService.NewDataService.NewDataService();

               string beginDate = "2016-03-11";
               string endDate = DateTime.Now.ToString("yyyy-MM-dd");

               byte[] bytes;
               int index;
               string result;
               #region  获取指定日期范围内发生变化的省外企业信息
               bytes = newDataService.getOutCorpInfo_Inc(userID, beginDate, endDate, "0");
               result = System.Text.Encoding.UTF8.GetString(bytes, 0, bytes.Length);
               //Public.WriteLog("省外企业信息.txt" , result);
               index = result.IndexOf("<ReturnInfo>");

               if (index >= 0)
               {
                   string returnResult = result.Substring(index, result.LastIndexOf("</ReturnInfo>") - index + 13);
                   if (string.IsNullOrEmpty(returnResult))
                   {
                       return;
                   }
                   ReturnInfo returnInfo = helper.DeserializeXML<ReturnInfo>(returnResult);
                   if (!returnInfo.Status)
                   {
                       return;
                   }
               }

               index = result.IndexOf("<OutCorpBasicInfo>");
               if (index >= 0)
               {
                   string corpBasicInfoString = result.Substring(index, result.LastIndexOf("</OutCorpBasicInfo>") - index + 19);
                   OutCorpBasicInfoBody outCorpBasicInfoBody = helper.DeserializeXML<OutCorpBasicInfoBody>("<OutCorpBasicInfoBody><OutCorpBasicInfoArray>" + corpBasicInfoString + "</OutCorpBasicInfoArray></OutCorpBasicInfoBody>");
                   if (outCorpBasicInfoBody != null)
                   {
                       foreach (OutCorpBasicInfo corpBasicInfo in outCorpBasicInfoBody.array)
                       {

                           if (corpBasicInfo.CorpCode.Length == 9)
                           {
                               corpBasicInfo.CorpCode = corpBasicInfo.CorpCode.Substring(0, 8) + '-' + corpBasicInfo.CorpCode.Substring(8, 1);
                           }
                           //检查该企业是否存在社会信用代码，若存在，则转化为社会信用代码
                           if (corpBasicInfo.CorpCode.Length == 10)
                           {
                               string qyShxydm = dataService.Get_UEPP_Qyjbxx_Shxydm(corpBasicInfo.CorpCode);
                               if (!string.IsNullOrEmpty(qyShxydm))
                               {
                                   corpBasicInfo.CorpCode = qyShxydm;

                                   string sql = "update  UEPP_Qyzs set qyID=@qyIDNew where qyID=@qyID;update UEPP_Qyzzmx set qyID=@qyIDNew where qyID=@qyID;update  UEPP_Qycsyw set qyID=@qyIDNew where qyID=@qyID";
                                   SqlParameterCollection sp = dataService.CreateSqlParameterCollection();
                                   sp.Add("@qyID", corpBasicInfo.CorpCode);
                                   sp.Add("@qyIDNew", qyShxydm);
                                   dataService.ExecuteNonQuerySql2(sql, sp);
                               }
                           }

                           DataRow row_SaveDataLog = dt_SaveDataLog.NewRow();
                           row_SaveDataLog["DataJkDataDetailID"] = row_DataJkDataDetail_qyxx["ID"];
                           row_SaveDataLog["DataXml"] = "";
                           row_SaveDataLog["PKID"] = corpBasicInfo.CorpCode;
                           row_SaveDataLog["CreateDate"] = DateTime.Now.ToString("yyyy-MM-dd");
                           dt_SaveDataLog.Rows.Add(row_SaveDataLog);

                           try
                           {
                               #region  更新企业基本信息

                               DataTable dt = dataService.Get_uepp_Qyjbxx(corpBasicInfo.CorpCode);
                               if (dt.Rows.Count == 0)
                               {
                                   row = dt.NewRow();
                                   dt.Rows.Add(row);
                               }
                               else
                               {
                                   row = dt.Rows[0];
                                   if (!string.IsNullOrEmpty(corpBasicInfo.UpdateDate) && !string.IsNullOrEmpty(row["xgrqsj"].ToString2()))
                                       if (DateTime.Parse(row["xgrqsj"].ToString2()).ToString("yyyy-MM-dd") == DateTime.Parse(corpBasicInfo.UpdateDate).ToString("yyyy-MM-dd"))
                                       {
                                           continue;
                                       }
                               }
                               row["qyID"] = corpBasicInfo.CorpCode;
                               row["zzjgdm"] = corpBasicInfo.CorpCode;
                               row["tag"] = tag;

                               row["qymc"] = corpBasicInfo.CorpName;
                               row["yyzzzch"] = corpBasicInfo.LicenseNo;

                               if (!string.IsNullOrEmpty(corpBasicInfo.ProvinceCode.ToString2()))
                               {
                                   SqlParameterCollection sp = dataService.CreateSqlParameterCollection();

                                   row["Province"] = corpBasicInfo.ProvinceCode;
                                   sp.Add("@CodeInfo", corpBasicInfo.ProvinceCode.ToString2());
                                   string provinceCode = dataService.ExecuteSql("select top 1 Code from  UEPP_Code where CodeType='城市地区' and  CodeInfo=@CodeInfo", sp);
                                   if (!string.IsNullOrEmpty(provinceCode))
                                   {
                                       row["ProvinceID"] = provinceCode;
                                       sp.Clear();
                                       if (!string.IsNullOrEmpty(corpBasicInfo.CityCode.ToString2()))
                                       {
                                           row["City"] = corpBasicInfo.CityCode;

                                           sp.Add("@CodeInfo", corpBasicInfo.CityCode.ToString2());
                                           sp.Add("@parentCode", provinceCode);
                                           string cityCode = dataService.ExecuteSql("select top 1 Code from  UEPP_Code where CodeType='城市地区' and ParentCode=@parentCode and  CodeInfo=@CodeInfo", sp);
                                           if (!string.IsNullOrEmpty(cityCode))
                                           {
                                               row["CityID"] = cityCode;
                                           }

                                           sp.Clear();
                                           if (!string.IsNullOrEmpty(corpBasicInfo.CountyCode.ToString2()))
                                           {
                                               row["County"] = corpBasicInfo.CountyCode;

                                               sp.Add("@CodeInfo", corpBasicInfo.CountyCode.ToString2());
                                               sp.Add("@parentCode", cityCode);
                                               string countyCode = dataService.ExecuteSql("select top 1 Code from  UEPP_Code where CodeType='城市地区' and ParentCode=@parentCode and  CodeInfo=@CodeInfo", sp);
                                               if (!string.IsNullOrEmpty(countyCode))
                                               {
                                                   row["CountyID"] = countyCode;
                                               }

                                           }
                                       }
                                   }
                               }

                               row["zcdd"] = corpBasicInfo.RegAddress;
                               row["xxdd"] = corpBasicInfo.CorpAddress;
                               if (!string.IsNullOrEmpty(corpBasicInfo.FoundDate))
                                   row["clrq"] = corpBasicInfo.FoundDate;
                               row["jjxz"] = corpBasicInfo.CorpTypeDesc.ToString2().Trim();
                               if (!string.IsNullOrEmpty(corpBasicInfo.CorpTypeDesc))
                               {
                                   SqlParameterCollection sp = dataService.CreateSqlParameterCollection();
                                   sp.Add("@CodeInfo", corpBasicInfo.CorpTypeDesc.ToString2().Trim());
                                   string jjxzID = dataService.ExecuteSql("select * from  UEPP_Code where CodeType='企业经济性质' and  CodeInfo=@CodeInfo", sp);
                                   if (!string.IsNullOrEmpty(jjxzID))
                                   {
                                       row["jjxzID"] = jjxzID;
                                   }
                               }

                               row["zczb"] = corpBasicInfo.RegCapital;
                               row["cz"] = corpBasicInfo.Fax;
                               row["lxdh"] = corpBasicInfo.LinkPhone;
                               row["fddbr"] = corpBasicInfo.LegalMan;

                               if (!string.IsNullOrEmpty(corpBasicInfo.UpdateDate))
                                   row["xgrqsj"] = corpBasicInfo.UpdateDate;
                               else
                                   row["xgrqsj"] = DateTime.Now.ToString("yyyy-MM-dd");

                               row["DataState"] = 0;
                               allCount_qyxx++;
                               if (!dataService.Submit_uepp_qyjbxx(dt))
                               {
                                   row_SaveDataLog["SaveState"] = 0;
                                   row_SaveDataLog["Msg"] = "从江苏建设公共基础数据平台获取的单位：" + corpBasicInfo.CorpName + "," + corpBasicInfo.CorpCode + "，基本信息保存失败！";
                                   continue;
                               }
                               else
                               {
                                   success_count_qyxx++;
                                   row_SaveDataLog["SaveState"] = 1;
                                   row_SaveDataLog["Msg"] = "";
                               }
                               #endregion
                           }
                           catch (Exception ex)
                           {
                               row_SaveDataLog["SaveState"] = 0;
                               row_SaveDataLog["Msg"] = ex.Message;
                           }
                       }
                   }
               }
               #endregion

               //增量获取企业资质信息
               bytes = newDataService.getOutCorpQual_Inc(userID, beginDate, endDate, "0");

               result = System.Text.Encoding.UTF8.GetString(bytes, 0, bytes.Length);
               //Public.WriteLog("省外企业资质信息.txt",  result);

               index = result.IndexOf("<ReturnInfo>");

               if (index >= 0)
               {
                   string returnResult = result.Substring(index, result.LastIndexOf("</ReturnInfo>") - index + 13);
                   if (string.IsNullOrEmpty(returnResult))
                   {
                       return;
                   }
                   ReturnInfo returnInfo = helper.DeserializeXML<ReturnInfo>(returnResult);
                   if (!returnInfo.Status)
                   {
                       return;
                   }
               }

               index = result.IndexOf("<OutCorpCertQual>");
               if (index >= 0)
               {
                   string returnResult = result.Substring(index, result.LastIndexOf("</OutCorpCertQual>") - index + 18);
                   if (string.IsNullOrEmpty(returnResult))
                   {
                       return;
                   }
                   OutCorpCertQualBody outCorpCertQualBody = helper.DeserializeXML<OutCorpCertQualBody>("<OutCorpCertQualBody><OutCorpCertQualArray>" + returnResult + "</OutCorpCertQualArray></OutCorpCertQualBody>");

                   #region 更新企业资质(TCorpCertQual)
                   if (outCorpCertQualBody != null)
                   {
                       foreach (OutCorpCertQual corpCertQual in outCorpCertQualBody.array)
                       {
                           try
                           {
                               if (corpCertQual.CorpCode.Length == 9)
                               {
                                   corpCertQual.CorpCode = corpCertQual.CorpCode.Substring(0, 8) + '-' + corpCertQual.CorpCode.Substring(8, 1);
                               }
                               //检查该企业是否存在社会信用代码，若存在，则转化为社会信用代码
                               if (corpCertQual.CorpCode.Length == 10)
                               {
                                   string qyShxydm = dataService.Get_UEPP_Qyjbxx_Shxydm(corpCertQual.CorpCode);
                                   if (!string.IsNullOrEmpty(qyShxydm))
                                   {
                                       corpCertQual.CorpCode = qyShxydm;

                                       string sql = "update  UEPP_Qyzs set qyID=@qyIDNew where qyID=@qyID;update UEPP_Qyzzmx set qyID=@qyIDNew where qyID=@qyID;update  UEPP_Qycsyw set qyID=@qyIDNew where qyID=@qyID";
                                       SqlParameterCollection sp = dataService.CreateSqlParameterCollection();
                                       sp.Add("@qyID", corpCertQual.CorpCode);
                                       sp.Add("@qyIDNew", qyShxydm);
                                       dataService.ExecuteNonQuerySql2(sql, sp);
                                   }
                               }

                               string csywlxID = "", csywlx = "";
                               switch (corpCertQual.CertType)
                               {
                                   //施工
                                   case "建筑业":
                                       csywlxID = "1";
                                       csywlx = "建筑施工";
                                       break;
                                   case "城市园林绿化":
                                       csywlxID = "3";
                                       csywlx = "园林绿化";
                                       break;
                                   case "设计与施工一体化":
                                       csywlxID = "2";
                                       csywlx = "设计施工一体化";
                                       break;
                                   case "房屋拆迁":
                                       csywlxID = "13";
                                       csywlx = "房屋拆迁";
                                       break;
                                   case "安全生产许可证":
                                       csywlxID = "14";
                                       csywlx = "安全生产许可证";
                                       break;
                                   //勘察
                                   case "工程勘察":
                                       csywlxID = "5";
                                       csywlx = "工程勘察";
                                       break;
                                   //设计
                                   case "工程设计":
                                       csywlxID = "6";
                                       csywlx = "工程设计";
                                       break;
                                   case "城市规划":
                                       csywlxID = "18";
                                       csywlx = "城市规划";
                                       break;
                                   case "外商城市规划":
                                       csywlxID = "19";
                                       csywlx = "外商城市规划";
                                       break;

                                   //中介机构
                                   case "工程招标代理":
                                       csywlxID = "7";
                                       csywlx = "招标代理";
                                       break;
                                   case "工程监理":
                                       csywlxID = "4";
                                       csywlx = "工程监理";
                                       break;
                                   case "工程造价咨询":
                                       csywlxID = "8";
                                       csywlx = "造价咨询";
                                       break;
                                   case "工程质量检测":
                                       csywlxID = "9";
                                       csywlx = "工程检测";
                                       break;
                                   case "施工图审查":
                                       csywlxID = "15";
                                       csywlx = "施工图审查";
                                       break;
                                   case "房地产估价":
                                       csywlxID = "16";
                                       csywlx = "房地产估价";
                                       break;
                                   case "物业服务":
                                       csywlxID = "17";
                                       csywlx = "物业服务";
                                       break;
                                   default:
                                       break;
                               }
                               if (string.IsNullOrEmpty(csywlxID))
                                   continue;

                               #region 企业从事业务类型

                               DataTable dt_qycsyw = dataService.Get_uepp_Qycsyw_sjsgyth(corpCertQual.CorpCode, csywlxID);

                               DataRow tempRow_qycsyw;

                               if (dt_qycsyw.Rows.Count == 0)
                               {
                                   tempRow_qycsyw = dt_qycsyw.NewRow();
                                   dt_qycsyw.Rows.Add(tempRow_qycsyw);
                                   tempRow_qycsyw["qyID"] = corpCertQual.CorpCode;
                               }
                               else
                               {
                                   tempRow_qycsyw = dt_qycsyw.Rows[0];
                               }

                               tempRow_qycsyw["csywlxID"] = csywlxID;
                               tempRow_qycsyw["csywlx"] = csywlx;

                               tempRow_qycsyw["balxID"] = "1";
                               tempRow_qycsyw["balx"] = "长期备案";
                               tempRow_qycsyw["DataState"] = "0";
                               tempRow_qycsyw["tag"] = tag;

                               if (!string.IsNullOrEmpty(corpCertQual.UpdateDate))
                                   tempRow_qycsyw["xgrqsj"] = corpCertQual.UpdateDate;
                               else
                                   tempRow_qycsyw["xgrqsj"] = DateTime.Now.ToString("yyyy-MM-dd");

                               if (dt_qycsyw.Rows.Count > 0)
                               {
                                   dataService.Submit_uepp_qycsyw(dt_qycsyw);
                               }
                               #endregion

                               DataTable dt_jsdw_zzmx = dataService.Get_uepp_zzmxxx_qyxx(corpCertQual.CorpCode, csywlxID);

                               int rowIndex = -1;

                               for (int i = 0; i < dt_jsdw_zzmx.Rows.Count; i++)
                               {
                                   //if (dt_jsdw_zzmx.Rows[i].RowState == DataRowState.Deleted)
                                   //    continue;

                                   if (csywlxID == dt_jsdw_zzmx.Rows[i]["csywlxID"].ToString2()
                                       && (
                                        corpCertQual.TradeType == "工程勘察综合类" && dt_jsdw_zzmx.Rows[i]["zzxl"].ToString2() == "综合类"
                                        || corpCertQual.TradeType == "工程勘察专业类" && dt_jsdw_zzmx.Rows[i]["zzxl"].ToString2() == "专业类"
                                        || corpCertQual.TradeType == "工程勘察劳务类" && dt_jsdw_zzmx.Rows[i]["zzxl"].ToString2() == "劳务类"
                                        || corpCertQual.TradeType == dt_jsdw_zzmx.Rows[i]["zzxl"].ToString2()
                                       )
                                       && (dt_jsdw_zzmx.Rows[i]["zzlb"].ToString2() == "岩土工程勘察" && corpCertQual.MajorType == "岩土工程（勘察）"
                                       || dt_jsdw_zzmx.Rows[i]["zzlb"].ToString2() == "岩土工程设计" && corpCertQual.MajorType == "岩土工程（设计）"
                                         || dt_jsdw_zzmx.Rows[i]["zzlb"].ToString2() == "岩土工程测试、监测、检测" && corpCertQual.MajorType == "岩土工程（物探测试检测监测）"
                                         || dt_jsdw_zzmx.Rows[i]["zzlb"].ToString2() == "岩土工程咨询、监理" && corpCertQual.MajorType == "岩土工程（咨询监理）"

                                         || dt_jsdw_zzmx.Rows[i]["zzlb"].ToString2() == "建筑装修装饰" && corpCertQual.MajorType == "建筑装饰装修工程"
                                         || dt_jsdw_zzmx.Rows[i]["zzlb"].ToString2() == "模板作业" && corpCertQual.MajorType == "模板作业分包"
                                         || dt_jsdw_zzmx.Rows[i]["zzlb"].ToString2() == "脚手架搭设作业" && corpCertQual.MajorType == "脚手架作业分包"
                                         || dt_jsdw_zzmx.Rows[i]["zzlb"].ToString2() == corpCertQual.MajorType
                                       )
                                       )
                                   {
                                       rowIndex = i;
                                       break;
                                   }
                               }

                               if (rowIndex < 0)
                               {
                                   row = dt_jsdw_zzmx.NewRow();
                                   dt_jsdw_zzmx.Rows.Add(row);
                                   row["ID"] = dataService.Get_uepp_qyxxmx_NewID();
                                   row["qyID"] = corpCertQual.CorpCode;
                                   row["csywlx"] = csywlx;
                                   row["csywlxID"] = csywlxID;
                               }
                               else
                               {
                                   row = dt_jsdw_zzmx.Rows[rowIndex];
                                   if (!string.IsNullOrEmpty(corpCertQual.UpdateDate) && !string.IsNullOrEmpty(row["xgrqsj"].ToString2()))
                                       if (DateTime.Parse(row["xgrqsj"].ToString()).ToString("yyyy-MM-dd") == DateTime.Parse(corpCertQual.UpdateDate).ToString("yyyy-MM-dd"))
                                       {
                                           continue;
                                       }
                               }
                               if (corpCertQual.IsMaster == "主项")
                                   row["zzbz"] = "主项";
                               else
                                   row["zzbz"] = "增项";

                               if (corpCertQual.TradeType == "工程勘察综合类")
                               {
                                   row["zzxl"] = "综合类";
                                   row["zzxlID"] = "9";
                               }
                               else
                                   if (corpCertQual.TradeType == "工程勘察专业类")
                                   {
                                       row["zzxl"] = "专业类";
                                       row["zzxlID"] = "10";
                                   }
                                   else
                                       if (corpCertQual.TradeType == "工程勘察劳务类")
                                       {
                                           row["zzxl"] = "劳务类";
                                           row["zzxlID"] = "11";
                                       }
                                       else
                                           if (corpCertQual.TradeType == "工程设计综合")
                                           {
                                               row["zzxl"] = "综合资质";
                                               row["zzxlID"] = "12";
                                           }
                                           else
                                           {
                                               row["zzxl"] = corpCertQual.TradeType;
                                               if (!string.IsNullOrEmpty(csywlxID))
                                               {
                                                   string sql = @"select Code from UEPP_Code where  CodeType='企业资质序列' and ParentCodeType='企业从事业务类型'
 and ParentCode=@parentCode and CodeInfo=@CodeInfo ";
                                                   SqlParameterCollection sp = dataService.CreateSqlParameterCollection();
                                                   sp.Add("@CodeInfo", corpCertQual.TradeType);
                                                   sp.Add("@parentCode", csywlxID);
                                                   string zzxlID = dataService.ExecuteSql(sql, sp);
                                                   if (!string.IsNullOrEmpty(zzxlID))
                                                       row["zzxlID"] = zzxlID;
                                               }
                                           }

                               if (corpCertQual.MajorType == "岩土工程（勘察）")
                               {
                                   row["zzlb"] = "岩土工程勘察";
                                   row["zzlbID"] = "300";
                               }
                               else
                                   if (corpCertQual.MajorType == "岩土工程（设计）")
                                   {
                                       row["zzlb"] = "岩土工程设计";
                                       row["zzlbID"] = "301";
                                   }
                                   else
                                       if (corpCertQual.MajorType == "岩土工程（物探测试检测监测）")
                                       {
                                           row["zzlb"] = "岩土工程测试、监测、检测";
                                           row["zzlbID"] = "302";
                                       }
                                       else
                                           if (corpCertQual.MajorType == "岩土工程（咨询监理））")
                                           {
                                               row["zzlb"] = "岩土工程咨询、监理";
                                               row["zzlbID"] = "303";
                                           }
                                           else
                                               if (corpCertQual.TradeType == "建筑装饰装修工程")
                                               {
                                                   row["zzlb"] = "建筑装修装饰";
                                                   row["zzlbID"] = "33";
                                               }
                                               else if (corpCertQual.TradeType == "模板作业分包")
                                               {
                                                   row["zzlb"] = "模板作业";
                                                   row["zzlbID"] = "128";
                                               }
                                               else
                                                   if (corpCertQual.TradeType == "脚手架作业分包")
                                                   {
                                                       row["zzlb"] = "脚手架搭设作业";
                                                       row["zzlbID"] = "127";
                                                   }
                                                   else
                                                   {
                                                       row["zzlb"] = corpCertQual.MajorType;
                                                       if (!string.IsNullOrEmpty(row["zzxlID"].ToString2().Trim()))
                                                       {
                                                           string sql = @"select Code from UEPP_Code where  CodeType='企业资质类别' and  ParentCodeType='企业资质序列'
 and ParentCode=@parentCode and (CodeInfo=@CodeInfo or CodeInfo=@CodeInfo1) ";
                                                           SqlParameterCollection sp = dataService.CreateSqlParameterCollection();
                                                           sp.Add("@CodeInfo", corpCertQual.MajorType);
                                                           sp.Add("@parentCode", row["zzxlID"]);
                                                           sp.Add("@CodeInfo1", corpCertQual.MajorType.ToString2().Replace("分包", ""));
                                                           string zzlbID = dataService.ExecuteSql(sql, sp);
                                                           if (!string.IsNullOrEmpty(zzlbID))
                                                               row["zzlbID"] = zzlbID;
                                                       }
                                                   }




                               row["zzdj"] = corpCertQual.TitleLevel;

                               if (!string.IsNullOrEmpty(corpCertQual.TitleLevel))
                               {
                                   SqlParameterCollection sp = dataService.CreateSqlParameterCollection();
                                   sp.Add("@CodeInfo", corpCertQual.TitleLevel);

                                   string sql = "select Code from UEPP_Code  where  CodeType='企业资质等级' and ParentCodeType='企业资质序列' and CodeInfo=@CodeInfo ";
                                   string zzdjID = dataService.ExecuteSql(sql, sp);
                                   if (!string.IsNullOrEmpty(zzdjID))
                                       row["zzdjID"] = zzdjID;
                                   else
                                   {
                                       // 新增代码表
                                   }
                               }

                               if (corpCertQual.Status == "0")
                               {
                                   row["DataState"] = -1;
                               }
                               else
                               {
                                   row["DataState"] = 0;
                               }

                               row["tag"] = tag;
                               row["xgrqsj"] = corpCertQual.UpdateDate;

                               if (!dataService.Submit_uepp_qyzzmx(dt_jsdw_zzmx))
                               {
                                   Public.WriteLog("单位ID：" + corpCertQual.CorpCode + "，企业资质保存失败！");
                               }
                           }
                           catch (Exception ex)
                           {
                               Public.WriteLog("保存企业资质时出现异常：" + ex.Message);
                           }
                       }
                   }
                   #endregion
               }

               #region 更新企业资质证书信息(TCorpCertInfo)
               //if (corpCertInfoArr != null)
               //{
               //    foreach (CorpCertInfo corpCertInfo in corpCertInfoArr.array)
               //    {
               //        try
               //        {
               //            if (corpCertInfo.CorpCode.Length == 9)
               //            {
               //                corpCertInfo.CorpCode = corpCertInfo.CorpCode.Substring(0, 8) + '-' + corpCertInfo.CorpCode.Substring(8, 1);
               //            }
               //            //检查该企业是否存在社会信用代码，若存在，则转化为社会信用代码
               //            if (corpCertInfo.CorpCode.Length == 10)
               //            {
               //                string qyShxydm = dataService.Get_UEPP_Qyjbxx_Shxydm(corpCertInfo.CorpCode);
               //                if (!string.IsNullOrEmpty(qyShxydm))
               //                {
               //                    corpCertInfo.CorpCode = qyShxydm;
               //                }
               //            }

               //            int rowIndex = -1;
               //            string csywlxID = "", csywlx = "";
               //            switch (corpCertInfo.CertType)
               //            {
               //                //施工
               //                case "建筑业":
               //                    csywlxID = "1";
               //                    csywlx = "建筑施工";
               //                    break;
               //                case "城市园林绿化":
               //                    csywlxID = "3";
               //                    csywlx = "园林绿化";
               //                    break;
               //                case "设计与施工一体化":
               //                    csywlxID = "2";
               //                    csywlx = "设计施工一体化";
               //                    break;
               //                case "房屋拆迁":
               //                    csywlxID = "13";
               //                    csywlx = "房屋拆迁";
               //                    break;
               //                case "安全生产许可证":
               //                    csywlxID = "14";
               //                    csywlx = "安全生产许可证";
               //                    break;
               //                //勘察
               //                case "工程勘察":
               //                    csywlxID = "5";
               //                    csywlx = "工程勘察";
               //                    break;
               //                //设计
               //                case "工程设计":
               //                    csywlxID = "6";
               //                    csywlx = "工程设计";
               //                    break;
               //                case "城市规划":
               //                    csywlxID = "18";
               //                    csywlx = "城市规划";
               //                    break;
               //                case "外商城市规划":
               //                    csywlxID = "19";
               //                    csywlx = "外商城市规划";
               //                    break;

               //                //中介机构
               //                case "工程招标代理":
               //                    csywlxID = "7";
               //                    csywlx = "招标代理";
               //                    break;
               //                case "工程监理":
               //                    csywlxID = "4";
               //                    csywlx = "工程监理";
               //                    break;
               //                case "工程造价咨询":
               //                    csywlxID = "8";
               //                    csywlx = "造价咨询";
               //                    break;
               //                case "工程质量检测":
               //                    csywlxID = "9";
               //                    csywlx = "工程检测";
               //                    break;
               //                case "施工图审查":
               //                    csywlxID = "15";
               //                    csywlx = "施工图审查";
               //                    break;
               //                case "房地产估价":
               //                    csywlxID = "16";
               //                    csywlx = "房地产估价";
               //                    break;
               //                case "物业服务":
               //                    csywlxID = "17";
               //                    csywlx = "物业服务";
               //                    break;
               //                default:
               //                    break;
               //            }
               //            if (string.IsNullOrEmpty(csywlxID))
               //                continue;

               //            DataTable dt_qy_zzzs = dataService.Get_uepp_zzzsxx_qyxx(corpCertInfo.CorpCode);

               //            for (int i = 0; i < dt_qy_zzzs.Rows.Count; i++)
               //            {
               //                //if (dt_jsdw_zzzs.Rows[i].RowState == DataRowState.Deleted)
               //                //    continue;

               //                if (corpCertInfo.CertType == dt_qy_zzzs.Rows[i]["csywlx"].ToString2()
               //                    && dt_qy_zzzs.Rows[i]["zsbh"].ToString2() == corpCertInfo.CertCode
               //                    && dt_qy_zzzs.Rows[i]["csywlx"].ToString2() == corpCertInfo.CertType)
               //                {
               //                    rowIndex = i;
               //                    break;
               //                }
               //            }

               //            if (rowIndex < 0)
               //            {
               //                row = dt_qy_zzzs.NewRow();
               //                dt_qy_zzzs.Rows.Add(row);
               //                row["zsjlId"] = dataService.Get_uepp_qyQyzs_NewID();
               //            }
               //            else
               //            {
               //                row = dt_qy_zzzs.Rows[rowIndex];
               //                if (!string.IsNullOrEmpty(corpCertInfo.UpdateDate))
               //                    if (DateTime.Parse(row["xgrqsj"].ToString()).ToString("yyyy-MM-dd") == DateTime.Parse(corpCertInfo.UpdateDate).ToString("yyyy-MM-dd"))
               //                    {
               //                        continue;
               //                    }
               //            }
               //            row["qyID"] = corpCertInfo.CorpCode;
               //            row["csywlx"] = csywlx;
               //            row["csywlxID"] = csywlxID;

               //            //if (!string.IsNullOrEmpty(corpCertInfo.CertType))
               //            //{
               //            //    SqlParameterCollection sp = dataService.CreateSqlParameterCollection();
               //            //    sp.Add("@parentCode", csywlxID);
               //            //    sp.Add("@CodeInfo", corpCertInfo.CertType);

               //            //    string sql = @"select * from UEPP_Code  where  CodeType ='企业证书类型' and ParentCodeType='企业从事业务类型' and ParentCode=@parentCode and CodeInfo=@CodeInfo ";
               //            //    string zslxID = dataService.ExecuteSql(sql, sp);
               //            //    if (!string.IsNullOrEmpty(zslxID))
               //            //    {
               //            //        row["zslxID"] = zslxID;
               //            //    }
               //            //}
               //            //row["zslx"] = "开发企业资质证书";

               //            row["sfzzz"] = "1";
               //            string zslx = "", zslxID = "";
               //            switch (corpCertInfo.CertType)
               //            {
               //                //施工
               //                case "建筑业":
               //                    zslxID = "10";
               //                    zslx = "建筑业资质证";
               //                    break;
               //                case "城市园林绿化":
               //                    zslxID = "30";
               //                    zslx = "园林绿化资质证";
               //                    break;
               //                case "设计与施工一体化":
               //                    zslxID = "20";
               //                    zslx = "设计施工一体化资质证";
               //                    break;
               //                case "房屋拆迁":
               //                    zslxID = "130";
               //                    zslx = "房屋拆迁资质证";
               //                    break;
               //                case "安全生产许可证":
               //                    zslxID = "140";
               //                    zslx = "安全生产许可证";
               //                    break;
               //                //勘察
               //                case "工程勘察":
               //                    zslxID = "51";
               //                    csywlx = "省工程勘察资质证";
               //                    break;
               //                //设计
               //                case "工程设计":
               //                    zslxID = "61";
               //                    zslx = "省工程设计资质证";
               //                    break;
               //                case "城市规划":
               //                    zslxID = "18";
               //                    zslx = "城市规划资质证";
               //                    break;
               //                case "外商城市规划":
               //                    zslxID = "19";
               //                    zslx = "外商城市规划资质证";
               //                    break;

               //                //中介机构
               //                case "工程招标代理":
               //                    zslxID = "70";
               //                    zslx = "招标代理资质证";
               //                    break;
               //                case "工程监理":
               //                    zslxID = "40";
               //                    zslx = "工程监理资质证";
               //                    break;
               //                case "工程造价咨询":
               //                    zslxID = "80";
               //                    csywlx = "造价咨询资质证";
               //                    break;
               //                case "工程质量检测":
               //                    zslxID = "90";
               //                    zslx = "工程检测资质证";
               //                    break;
               //                case "施工图审查":
               //                    zslxID = "150";
               //                    csywlx = "施工图审查资质证";
               //                    break;
               //                case "房地产估价":
               //                    zslxID = "160";
               //                    zslx = "房地产估价资质证";
               //                    break;
               //                case "物业服务":
               //                    zslxID = "170";
               //                    zslx = "物业服务资质证";
               //                    break;
               //                default:
               //                    break;
               //            }
               //            row["zslxID"] = zslxID;
               //            row["zslx"] = zslx;
               //            row["zsbh"] = corpCertInfo.CertCode;
               //            if (!string.IsNullOrEmpty(corpCertInfo.ValidDate.Trim()))
               //                row["zsyxzrq"] = corpCertInfo.ValidDate;
               //            if (!string.IsNullOrEmpty(corpCertInfo.IssueDate.Trim()))
               //            {
               //                row["fzrq"] = corpCertInfo.IssueDate;
               //                row["zsyxqrq"] = corpCertInfo.IssueDate;
               //            }

               //            row["fzdw"] = corpCertInfo.IssueOrgan;
               //            row["xgrqsj"] = corpCertInfo.UpdateDate;
               //            row["xgr"] = "定时服务";
               //            row["tag"] = tag;
               //            row["DataState"] = 0;

               //            if (!dataService.Submit_uepp_qyzzzs(dt_qy_zzzs))
               //            {
               //                Public.WriteLog("单位ID：" + corpCertInfo.CorpCode + "，企业资质证书信息保存失败！");
               //            }

               //        }
               //        catch (Exception ex)
               //        {
               //            Public.WriteLog("保存企业资质证书信息时出现异常：" + ex.Message);
               //        }
               //    }
               //}
               #endregion

               if (dt_SaveDataLog.Rows.Count > 0)
                   dataService.Submit_SaveDataLog(dt_SaveDataLog);

               row_DataJkDataDetail_qyxx["allCount"] = allCount_qyxx;
               row_DataJkDataDetail_qyxx["successCount"] = success_count_qyxx;
               row_DataJkDataDetail_qyxx["IsOk"] = 1;
               row_DataJkDataDetail_qyxx["ErrorMsg"] = "";

               if (dt_DataJkDataDetail_qyxx.Rows.Count > 0)
                   dataService.Submit_DataJkDataDetail(dt_DataJkDataDetail_qyxx);
           }
           catch (Exception ex)
           {
               row_DataJkDataDetail_qyxx["allCount"] = allCount_qyxx;
               row_DataJkDataDetail_qyxx["successCount"] = success_count_qyxx;
               row_DataJkDataDetail_qyxx["IsOk"] = 0;
               row_DataJkDataDetail_qyxx["ErrorMsg"] = "从江苏建设公共基础数据平台获取省外企业信息时出现异常:" + ex.Message;

               if (dt_DataJkDataDetail_qyxx.Rows.Count > 0)
                   dataService.Submit_DataJkDataDetail(dt_DataJkDataDetail_qyxx);
           }

       }

       static void YourTask_PullDataFromSxxzx_Swryxx(string DataJkLogID)
       {
           int allCount_ryxx = 0, success_count_ryxx=0;
           string ryzyzglx = "", ryzyzglxID="";
           DataRow row;
           Public.WriteLog("执行YourTask_PullDataFromSxxzx_Swryxx方法：");
           string tag = Tag.江苏建设公共基础数据平台.ToString();
           string userID = "wxszjj01";
           DataService dataService = new DataService();
           XmlHelper helper = new XmlHelper();

           NewDataService.NewDataService newDataService = new WxjzgcjczyTimerService.NewDataService.NewDataService();
           byte[] bytes = newDataService.getOutPersonCert(userID, "0");

           string result = System.Text.Encoding.UTF8.GetString(bytes, 0, bytes.Length);
           Public.WriteLog("省外人员信息.txt");
           int index = result.IndexOf("<ReturnInfo>");
           if (index >= 0)
           {
               string returnResult = result.Substring(index, result.LastIndexOf("</ReturnInfo>") - index + 13);
               if (string.IsNullOrEmpty(returnResult))
               {
                   return;
               }

               ReturnInfo returnInfo = helper.DeserializeXML<ReturnInfo>(returnResult);
               if (!returnInfo.Status)
               {
                   return;
               }

           }
           else
           {
               return;
           }

           index = result.IndexOf("<PersonBasicInfo>");
           if (index >= 0)
           {
               string personBasicInfoString = result.Substring(index, result.LastIndexOf("</PersonBasicInfo>") - index + 18);
               PersonBasicInfoBody personBasicInfoBody = helper.DeserializeXML<PersonBasicInfoBody>("<PersonBasicInfoBody><PersonBasicInfoArray>" + personBasicInfoString + "</PersonBasicInfoArray></PersonBasicInfoBody>");

               PersonRegCertBody personRegCertBody = new PersonRegCertBody();
               PersonRegMajorBody personRegMajorBody = new PersonRegMajorBody();

               index = result.IndexOf("<PersonRegCert>");
               if (index >= 0)
               {

                   string personRegCertString = result.Substring(index, result.LastIndexOf("</PersonRegCert>") - index + 16);
                   personRegCertBody = helper.DeserializeXML<PersonRegCertBody>("<PersonRegCertBody><PersonRegCertArray>" + personRegCertString + "</PersonRegCertArray></PersonRegCertBody>");

               }

               index = result.IndexOf("<PersonRegMajor>");
               if (index >= 0)
               {
                   string personRegMajorString = result.Substring(index, result.LastIndexOf("</PersonRegMajor>") - index + 17);
                   personRegMajorBody = helper.DeserializeXML<PersonRegMajorBody>("<PersonRegMajorBody><PersonRegMajorArray>" + personRegMajorString + "</PersonRegMajorArray></PersonRegMajorBody>");

               }

               #region

               if (personBasicInfoBody != null)
               {
                   int rowIndex = -1;
                   DataTable dt_SaveDataLog = dataService.GetSchema_SaveDataLog();
                   //往数据监控日志表项添加一条记录
                   DataTable dt_DataJkDataDetail_qyxx = dataService.GetSchema_DataJkDataDetail();
                   long Id_DataJkDataDetail_qyxx = dataService.Get_DataJkDataDetailNewID().ToInt64();

                   int allCount_qyxx = 0, success_count_qyxx = 0;
                   DataRow row_DataJkDataDetail_qyxx = dt_DataJkDataDetail_qyxx.NewRow();
                   dt_DataJkDataDetail_qyxx.Rows.Add(row_DataJkDataDetail_qyxx);

                   row_DataJkDataDetail_qyxx["ID"] = Id_DataJkDataDetail_qyxx++;
                   row_DataJkDataDetail_qyxx["DataJkLogID"] = DataJkLogID;
                   row_DataJkDataDetail_qyxx["tableName"] = "UEPP_Ryjbxx";
                   row_DataJkDataDetail_qyxx["MethodName"] = "getOutCorpInfo";
                   row_DataJkDataDetail_qyxx["bz"] = "从江苏建设公共基础数据平台拉取省外人员信息";

                  
                   foreach (PersonBasicInfo personBasicInfo in personBasicInfoBody.array)
                   {
                       DataRow row_SaveDataLog = dt_SaveDataLog.NewRow();
                       row_SaveDataLog["DataJkDataDetailID"] = row_DataJkDataDetail_qyxx["ID"];
                       row_SaveDataLog["DataXml"] = "";
                       row_SaveDataLog["PKID"] = personBasicInfo.IDCardNo;
                       row_SaveDataLog["CreateDate"] = DateTime.Now.ToString("yyyy-MM-dd");

                       try
                       {
                           #region 人员基本信息
                           DataTable dt_ryxx = dataService.Get_UEPP_Ryjbxx(personBasicInfo.IDCardNo);
                           if (dt_ryxx.Rows.Count == 0)
                           {
                               row = dt_ryxx.NewRow();
                               dt_ryxx.Rows.Add(row);
                               row["ryID"] = personBasicInfo.IDCardNo;
                           }
                           else
                           {
                               row = dt_ryxx.Rows[0];
                               if (!string.IsNullOrEmpty(row["xgrqsj"].ToString2()) && !string.IsNullOrEmpty(personBasicInfo.UpdateDate))
                                   if (DateTime.Parse(row["xgrqsj"].ToString()).ToString("yyyy-MM-dd") == DateTime.Parse(personBasicInfo.UpdateDate).ToString("yyyy-MM-dd"))
                                   {
                                       continue;
                                   }
                           }
                           row["tag"] = tag;
                           row["xm"] = personBasicInfo.PersonName;
                           switch (personBasicInfo.IDCardType)
                           {
                               case "身份证":
                                   row["zjlxID"] = "1";
                                   break;
                               case "护照":
                                   row["zjlxID"] = "3";
                                   break;
                               case "军官证":
                                   row["zjlxID"] = "2";
                                   break;
                               case "台湾居民身份证":
                                   row["zjlxID"] = "4";
                                   break;
                               case "香港永久性居民身份证":
                                   row["zjlxID"] = "5";
                                   break;
                               case "警官证":
                                   row["zjlxID"] = "6";
                                   break;
                               case "其他":
                                   row["zjlxID"] = "9";
                                   break;
                           }

                           row["zjlx"] = personBasicInfo.IDCardType;
                           row["zjhm"] = personBasicInfo.IDCardNo;
                           row["xb"] = personBasicInfo.Sex;
                           if (!string.IsNullOrEmpty(personBasicInfo.Birthday))
                               row["csrq"] = personBasicInfo.Birthday;
                           row["mz"] = personBasicInfo.Nationality;
                           row["zc"] = personBasicInfo.ProTitle;
                           row["zw"] = personBasicInfo.DutyDesc;
                           if (string.IsNullOrEmpty(personBasicInfo.UpdateDate))
                               personBasicInfo.UpdateDate = DateTime.Now.ToString("yyyy-MM-dd");
                           row["xgrqsj"] = personBasicInfo.UpdateDate;

                           row["xgr"] = "定时服务";
                           row["DataState"] = 0;
                           row["AJ_EXISTINIDCARDS"] = "2";
                           row["AJ_IsRefuse"] = "0";

                           allCount_ryxx++;
                           if (!dataService.Submit_uepp_ryjbxx(dt_ryxx))
                           {
                               //Public.WriteLog("建设单位人员信息保存失败，ryID：" + personBasicInfo.IDCardNo);
                               row_SaveDataLog["SaveState"] = 0;
                               row_SaveDataLog["Msg"] = "建设单位人员信息保存失败，ryID：" + personBasicInfo.IDCardNo;
                           }
                           else
                           {
                               success_count_ryxx++;

                               row_SaveDataLog["SaveState"] = 1;
                               row_SaveDataLog["Msg"] = "";
                           }
                           #endregion

                           dt_SaveDataLog.Rows.Add(row_SaveDataLog);

                           #region 人员执业资格

                           DataTable dt_ryzyzg = dataService.Get_uepp_Ryzyzg(personBasicInfo.IDCardNo);
                           rowIndex = -1;
                           for (int i = 0; i < dt_ryzyzg.Rows.Count; i++)
                           {
                               if (dt_ryzyzg.Rows[i]["ryzyzglxid"].ToString2() == ryzyzglxID)
                               {
                                   rowIndex = i;
                                   break;
                               }
                           }
                           if (rowIndex < 0)
                           {
                               row = dt_ryzyzg.NewRow();
                               dt_ryzyzg.Rows.Add(row);
                               row["ryID"] = personBasicInfo.IDCardNo;
                               row["ryzyzglxID"] = ryzyzglxID;
                               row["ryzyzglx"] = "注册建筑师";

                               row["balxID"] = 1;
                               row["balx"] = "长期备案";

                               row["DataState"] = 0;
                               row["tag"] = tag;
                               row["xgr"] = "定时服务";
                               row["xgrqsj"] = personBasicInfo.UpdateDate;
                               dataService.Submit_uepp_Ryzyzg(dt_ryzyzg);
                           }

                           #endregion

                           #region 人员专业明细

                           //DataTable dt_ryzymx = dataService.Get_uepp_Ryzymx(personBasicInfo.IDCardNo);
                           //rowIndex = -1;
                           //for (int i = 0; i < dt_ryzymx.Rows.Count; i++)
                           //{
                           //    if (dt_ryzymx.Rows[i]["ryzyzglxID"].ToString2() == ryzyzglxID)
                           //    {
                           //        rowIndex = i;
                           //        break;
                           //    }
                           //}
                           //if (rowIndex < 0)
                           //{
                           //    row = dt_ryzymx.NewRow();
                           //    dt_ryzymx.Rows.Add(row);
                           //    row["ryID"] = personBasicInfo.IDCardNo;
                           //    row["ryzyzglxID"] = ryzyzglxID;
                           //    row["ryzyzglx"] = "注册建筑师";
                           //    row["zyzgdjID"] = 21;
                           //    row["zyzgdj"] = "壹级";
                           //    row["DataState"] = 0;
                           //    row["tag"] = tag;
                           //    row["xgr"] = "定时服务";
                           //    row["xgrqsj"] = personBasicInfo.UpdateDate;
                           //    dataService.Submit_uepp_Ryzymx(dt_ryzymx);
                           //}
                           #endregion
                       }
                       catch (Exception ex)
                       {
                           //Public.WriteLog("出现异常，ryID：" + personBasicInfo.IDCardNo + ",Exception:" + ex.Message);

                           row_SaveDataLog["SaveState"] = 0;
                           row_SaveDataLog["Msg"] = ex.Message;
                           dt_SaveDataLog.Rows.Add(row_SaveDataLog);
                       }

                   }
               }
               #endregion

               #region 人员证书

               if (personRegCertBody != null)
               {
                   foreach (PersonRegCert personRegCert in personRegCertBody.array)
                   {
                       try
                       {
                           if (string.IsNullOrEmpty(personRegCert.UpdateDate))
                               personRegCert.UpdateDate = DateTime.Now.ToString("yyyy-MM-dd");

                           #region 人员证书基本信息
                           DataTable dt_ryzs = dataService.Get_uepp_Ryzs(personRegCert.IDCardNo);
                           int rowIndex = -1;
                           for (int i = 0; i < dt_ryzs.Rows.Count; i++)
                           {
                               if (dt_ryzs.Rows[i]["ryzyzglxid"].ToString2() == ryzyzglxID)
                               {
                                   rowIndex = i;
                                   break;
                               }
                           }
                           if (rowIndex < 0)
                           {

                               row = dt_ryzs.NewRow();
                               dt_ryzs.Rows.Add(row);
                               row["zsjlId"] = dataService.Get_uepp_RyzsNewID();
                               row["ryID"] = personRegCert.IDCardNo;
                               row["ryzyzglxID"] = ryzyzglxID;
                               row["ryzyzglx"] = "注册建筑师";
                               row["ryzslxID"] = 151;
                               row["ryzslx"] = "注册建筑师资格证";

                           }
                           else
                           {
                               row = dt_ryzs.Rows[rowIndex];

                           }
                           row["sfzzz"] = 1;
                           row["zsbh"] = personRegCert.QualCertNo;
                           if (!string.IsNullOrEmpty(personRegCert.IssueDate))
                           {
                               row["fzrq"] = personRegCert.IssueDate;
                               row["zsyxqrq"] = personRegCert.IssueDate;
                           }
                           if (!string.IsNullOrEmpty(personRegCert.ValidDate))
                               row["zsyxzrq"] = personRegCert.ValidDate;

                           row["fzdw"] = personRegCert.IssueOrgan;

                           row["Status"] = personRegCert.Status;
                           if (!string.IsNullOrEmpty(personRegCert.QualIssueDate))
                               row["QualIssueDate"] = personRegCert.QualIssueDate;
                           row["StampNo"] = personRegCert.StampNo;
                           row["RegNo"] = personRegCert.RegNo;

                           row["DataState"] = 0;
                           row["tag"] = tag;
                           row["xgr"] = "定时服务";
                           row["xgrqsj"] = personRegCert.UpdateDate;
                           dataService.Submit_uepp_Ryzs(dt_ryzs);

                           #endregion

                           #region 企业人员关系表

                           DataTable dt_qyry = dataService.Get_uepp_Qyry(personRegCert.IDCardNo, personRegCert.CorpCode, ryzyzglxID);
                           if (dt_qyry.Rows.Count == 0)
                           {
                               if (personRegCert.Status.ToString2() != "2")
                               {
                                   row = dt_qyry.NewRow();
                                   dt_qyry.Rows.Add(row);
                                   row["ryID"] = personRegCert.IDCardNo;
                                   row["qyID"] = personRegCert.CorpCode;
                                   row["ryzyzglxID"] = ryzyzglxID;
                                   row["ryzyzglx"] = "注册建筑师";
                                   row["DataState"] = 0;
                                   row["tag"] = tag;
                                   row["xgr"] = "定时服务";
                                   row["xgrqsj"] = personRegCert.UpdateDate;
                                   dataService.Submit_uepp_qyry(dt_qyry);
                               }
                           }
                           else
                           {
                               if (personRegCert.Status.ToString2() == "2")
                               {
                                   foreach (DataRow item in dt_qyry.Rows)
                                   {
                                       item.Delete();
                                   }

                                   dataService.Submit_uepp_qyry(dt_qyry);
                               }
                           }
                           #endregion
                       }
                       catch (Exception ex)
                       {
                           Public.WriteLog("更新人员证书出现异常，ryID：" + personRegCert.IDCardNo + ",Exception:" + ex.Message);
                       }
                   }
               }

               #endregion

           }
       }
    }
}
