<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bigdesk8</name>
    </assembly>
    <members>
        <member name="T:Bigdesk8.Business.LogManager.LogManagerFactory">
            <summary>
            日志管理
            </summary>
        </member>
        <member name="M:Bigdesk8.Business.LogManager.LogManagerFactory.CreateLogManager(System.String)">
            <summary>
            获取日志管理器
            </summary>
            <param name="loggerName">loggerName</param>
            <returns>返回指定的日志管理器</returns>
        </member>
        <member name="T:Bigdesk8.Business.LogManager.DBLogManager">
            <summary>
            随着业务日志量的增加, 也许需要调整日志的增加和查询方式;
            例如, 根据业务名称的不同, 将日志放到不同的业务日志表, 查询也到不同的表中查询.
                  这时可以设置一个中间配置表A, 从中可以查出业务名称和具体日志表的对应关系,
                  由此将不同业务的日志放到不同的表中.
            这些调整将来就在BusinessLogger类内部完成, 不影响对外接口.
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.LogManager.ILogManager">
            <summary>
            日志管理接口
            </summary>
        </member>
        <member name="M:Bigdesk8.Business.LogManager.ILogManager.AppendLog(Bigdesk8.Business.LogManager.BusinessLog)">
            <summary>
            追加日志
            </summary>
            <param name="businessLog">日志内容</param>
        </member>
        <member name="M:Bigdesk8.Business.LogManager.ILogManager.GetLog(System.Int64)">
            <summary>
            获取日志
            </summary>
            <param name="logID">日志编号</param>
            <returns>返回日志</returns>
        </member>
        <member name="M:Bigdesk8.Business.LogManager.ILogManager.GetLog(System.String,System.String,System.String,System.String)">
            <summary>
            获取日志
            </summary>
            <param name="systemName">系统名称</param>
            <param name="moduleName">模块名称</param>
            <param name="keyString">关键信息</param>
            <param name="operation">操作</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.LogManager.ILogManager.GetLog(System.String,System.String,System.String,System.String[])">
            <summary>
            获取日志
            </summary>
            <param name="systemName">系统名称</param>
            <param name="moduleName">模块名称</param>
            <param name="keyString">关键信息</param>
            <param name="operation">操作</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.LogManager.ILogManager.GetLog(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.Int32,System.Int32,System.Int32@)">
            <summary>
            获取日志
            </summary>
            <param name="condition">搜索条件</param>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">页面索引</param>
            <param name="allRecordCount">总记录数</param>
            <returns></returns>
        </member>
        <member name="P:Bigdesk8.Business.LogManager.ILogManager.DB">
            <summary>
            数据库访问对象
            </summary>
        </member>
        <member name="M:Bigdesk8.Business.LogManager.DBLogManager.GetLog(System.Int64)">
            <summary>
            获取日志
            </summary>
            <param name="logID">日志编号</param>
            <returns>返回日志</returns>
        </member>
        <member name="P:Bigdesk8.Business.LogManager.DBLogManager.DB">
            <summary>
            数据库访问对象
            </summary>
        </member>
        <member name="T:Bigdesk8.Web.Controls.DBMemoBox">
            <summary>
            多行文本框控件，通常数据长度大于300字
            </summary>
        </member>
        <member name="T:Bigdesk8.Data.IDataItem">
            <summary>
            单一数据项接口，界面控件实现此接口，方便数据与界面挂接
            </summary>
        </member>
        <member name="T:Bigdesk8.Data.IShowDataItem">
            <summary>
            单一显示数据项接口，界面显示控件实现此接口，方便数据与界面挂接
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.IShowDataItem.ItemName">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.IShowDataItem.ItemType">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.IShowDataItem.ItemData">
            <summary>
            数据，注意：DBNull，null自动转换成string.Empty
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.IShowDataItem.ItemFormat">
            <summary>
            显示格式，注意：与数据类型有关系。格式字符串，如yyyy-MM-dd HH:mm:ss,日期和时间格式字符串,标准数字格式字符串
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.IDataItem.ItemCheck">
            <summary>
            检查类型是否匹配，长度是否超长，必填项是否已填，取值范围是否正确等等.....
            </summary>
            <returns>如果检查成功返回String.Empty，检查不成功返回错误信息</returns>
        </member>
        <member name="P:Bigdesk8.Data.IDataItem.ItemNameCN">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.IDataItem.ItemLength">
            <summary>
            最大长度。默认值为 0。
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.IDataItem.ItemIsRequired">
            <summary>
            是否为必填项。默认值为 false。
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.IDataItem.ItemRelation">
            <summary>
            与数据的关系
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.IDataItem.ItemDefaultData">
            <summary>
            默认数据，默认值为string.Empty
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBMemoBox.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:Bigdesk8.Web.Controls.DBMemoBox._ErrorMessage">
            <summary>
            错误信息，如果不为String.Empty,则有错误
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBMemoBox.ItemCheck">
            <summary>
            检查类型是否匹配，长度是否超长，必填项是否已填，取值范围是否正确等等.....
            </summary>
            <returns>检查成功返回true,不成功返回false</returns>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBMemoBox.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            将需要呈现的 HTML 属性和样式添加到指定的 <see cref="T:System.Web.UI.HtmlTextWriter"/> 实例中。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBMemoBox.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            处理 <see cref="T:Bigdesk8.Web.Controls.DBTextBox"/> 控件的回发数据。
            当 ReadOnly=True 时, 客户端JS对控件赋值, 服务器端可以接收到.
            </summary>
            <param name="postDataKey">已发送集合中引用要加载的内容的索引</param>
            <param name="postCollection">发送到服务器的集合</param>
            <returns>如果发送内容与上次的发送内容不同，则为 true；否则为 false。</returns>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBMemoBox.ItemName">
            <summary>
            数据项名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBMemoBox.ItemNameCN">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBMemoBox.ItemIsRequired">
            <summary>
            是否为必填项
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBMemoBox.ItemDefaultData">
            <summary>
            默认数据，默认值为string.Empty
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBMemoBox.MinLength">
            <summary>
            获取或设置文本框中最少的字符数。如果为0，则不检查长度。默认值为 0。
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBMemoBox.MaxLength">
            <summary>
            获取或设置文本框中最多允许的字符数。如果为0，则不检查长度。默认值为 0。
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBMemoBox.TextMode">
            <summary>
            获取文本框的单行模式
            </summary>
        </member>
        <member name="T:Bigdesk8.Web.Controls.DBBigFileUpload">
            <summary>
            统一文件管理控件，使用此控件不需要关心上传文件的存储、浏览等问题。
            
            此控件从 BigFileUpload 控件继承
            此控件依赖于 DBBigFileUpload_Service.svc 或 DBBigFileUpload_Service.ashx
            
            </summary>
        </member>
        <member name="T:Bigdesk8.Web.Controls.BigFileUpload">
            <summary>
            大文件上传控件
            
            此控件依赖于 Silverlight 3, Silverlight.js, jquery-1.4.2.min.js, jquery.Silverlight.bigfileupload.js
            
            功能：
            支持大文件上传,
            支持文件完整性校验,
            支持断点续传,
            支持文件类型、文件大小客户端校验,
            提示上传速度，上传进度，剩余时间
            
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.BigFileUpload.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.BigFileUpload.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            将需要呈现的 HTML 属性和样式添加到指定的 <see cref="T:System.Web.UI.HtmlTextWriterTag"/> 中。此方法主要由控件开发人员使用。
            </summary>
            <param name="writer">表示要在客户端呈现 HTML 内容的输出流</param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.BigFileUpload.OnPreRender(System.EventArgs)">
            <summary>
            在加载 Control 对象之后、呈现之前发生。
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.BigFileUpload.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            将控件的内容呈现到指定的编写器中。此方法主要由控件开发人员使用。
            </summary>
            <param name="writer">表示要在客户端呈现 HTML 内容的输出流。</param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.BigFileUpload.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            
            </summary>
            <param name="postDataKey"></param>
            <param name="postCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Web.Controls.BigFileUpload.RaisePostDataChangedEvent">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.BigFileUpload.ScriptRootUrl">
            <summary>
            脚本所在目录，结束不要加“/”，如：/scripts
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.BigFileUpload.UploadFileServiceUrl">
            <summary>
            上传服务的Url，这个地址是相对于xap文件的位置
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.BigFileUpload.FileUploaderType">
            <summary>
            文件上传服务方式，取值范围：WCF、HttpHandler。
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.BigFileUpload.MaxChunkSize">
            <summary>
            上传文件的最大块大小，默认值为int.MaxValue
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.BigFileUpload.MaxRetryCount">
            <summary>
            最大重试次数，默认值为0，0表示无限制
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.BigFileUpload.MaxFileSize">
            <summary>
            允许上传的最大文件大小，默认值为1GB
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.BigFileUpload.FileFilter">
            <summary>
            允许上传的文件类型
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.BigFileUpload.CustomParams">
            <summary>
            自定义参数, 例如CustomParams.Add("SystemName", "发承包子系统")
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.BigFileUpload.FileID">
            <summary>
            文件的唯一编号
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.BigFileUpload.FileName">
            <summary>
            文件的原始名称(包含扩展名)，不包含目录路径
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.BigFileUpload.FileSize">
            <summary>
            文件的大小（以字节为单位）
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.BigFileUpload.IsDebug">
            <summary>
            是否处于调试状态
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.BigFileUpload.IsLockPage">
            <summary>
            正在上传时是否锁定界面
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.BigFileUpload.EnableViewState">
            <summary>
            启用视图状态，该属性一直为true
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.BigFileUpload.BackColor">
            <summary>
            获取或设置背景色。
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.BigFileUpload.HasFile">
            <summary>
            是否有文件
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBBigFileUpload.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBBigFileUpload.OnPreRender(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBBigFileUpload.SystemID">
            <summary>
            文件所在的系统编号
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBBigFileUpload.BizModuleCode">
            <summary>
            文件所在的模块代码
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBBigFileUpload.CategoryCode">
            <summary>
            文件的种类代码
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBBigFileUpload.MasterID">
            <summary>
            业务关键字字串
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBBigFileUpload.ScriptRootUrl">
            <summary>
            脚本所在目录，结束不要加“/”，默认值为：/ClientResource
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBBigFileUpload.UploadFileServiceUrl">
            <summary>
            上传服务的Url，这个地址是相对于xap文件的位置，默认值为DBBigFileUpload_Service.ashx
            </summary>
        </member>
        <member name="T:Bigdesk8.MsReporting.WebAssistant">
            <summary>
            微软报表web运行模式下的功能实现助手
            </summary>
        </member>
        <member name="M:Bigdesk8.MsReporting.WebAssistant.ToNormalizedString(System.String,System.String)">
            <summary>
            将 参数名称和参数值 转换成 经过编码的、规范化的报表参数字符串, 以用于页面间的报表参数传递
            </summary>
            <param name="parameterName">参数名称</param>
            <param name="parameterValue">参数值</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.MsReporting.WebAssistant.ToNormalizedString(System.String,System.String,System.String,System.String)">
            <summary>
            将 两对参数名称和参数值 转换成 经过编码的、规范化的报表参数字符串, 以用于页面间的报表参数传递
            </summary>
            <param name="parameterName">参数名称</param>
            <param name="parameterValue">参数值</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.MsReporting.WebAssistant.GetParameters(System.Collections.Generic.List{Bigdesk8.Data.IDataItem})">
            <summary>
            将 IDataItem 集合转换成 ReportParameter 集合
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.MsReporting.WebAssistant.ReportParametersToNormalizedString(System.Collections.Generic.IEnumerable{Microsoft.Reporting.WebForms.ReportParameter})">
            <summary>
            将 ReportParameter 集合转换成 经过编码的、规范化的字符串
            </summary>
            <param name="reportParameters"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.MsReporting.WebAssistant.GetReportParameters(System.String)">
            <summary>
            将 经过编码的、规范化的字符串 转换成 ReportParameter 集合
            </summary>
            <param name="normalizedString">符合预定格式的字符串</param>
            <returns></returns>
        </member>
        <member name="T:Bigdesk8.Business.FileManager.IFileManager">
            <summary>
            文件管理接口
            </summary>
        </member>
        <member name="M:Bigdesk8.Business.FileManager.IFileManager.AddFile(System.Int32,System.String,System.String,System.String,System.String,System.String,System.Byte[],Bigdesk8.Business.FileManager.FileState)">
            <summary>
            添加文件，返回 FileModel
            </summary>
            <param name="systemID">系统编号，此参数不能为空</param>
            <param name="moduleCode">模块代码，此参数不能为空</param>
            <param name="categoryCode">文件种类代码，此参数不能为空</param>
            <param name="masterID">业务关键字字串，此参数不能为空</param>
            <param name="fileName">文件名称，不包含目录路径，包含扩展名，此参数不能为空</param>
            <param name="fileType">文件扩展名，如.doc，此参数不能为空</param>
            <param name="fileContent">文件内容，此参数不能为空</param>
            <param name="fileState">文件状态，此参数不能为空</param>
            <returns>返回 FileModel</returns>
        </member>
        <member name="M:Bigdesk8.Business.FileManager.IFileManager.GetSimpleFileModel(System.Int32)">
            <summary>
            获得指定的文件
            </summary>
            <param name="fileID">文件唯一编号</param>
            <returns>返回指定文件</returns>
        </member>
        <member name="M:Bigdesk8.Business.FileManager.IFileManager.GetSimpleFileModel(System.Int32,Bigdesk8.Business.FileManager.FileState[])">
            <summary>
            获得指定的文件
            </summary>
            <param name="fileID">文件唯一编号</param>
            <param name="fileStates">文件状态</param>
            <returns>返回指定文件</returns>
        </member>
        <member name="M:Bigdesk8.Business.FileManager.IFileManager.GetSimpleFileModel(System.Int32[])">
            <summary>
            获得指定的多个文件
            </summary>
            <param name="fileIDs">文件唯一编号</param>
            <returns>返回多个文件</returns>
        </member>
        <member name="M:Bigdesk8.Business.FileManager.IFileManager.GetSimpleFileModel(System.Int32[],Bigdesk8.Business.FileManager.FileState[])">
            <summary>
            获得指定的多个文件
            </summary>
            <param name="fileIDs">文件唯一编号</param>
            <param name="fileStates">文件状态</param>
            <returns>返回多个文件</returns>
        </member>
        <member name="M:Bigdesk8.Business.FileManager.IFileManager.GetFileContent(System.Int32)">
            <summary>
            获取文件内容
            </summary>
            <param name="fileID">文件编号</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.FileManager.IFileManager.DeleteFile(System.Int32)">
            <summary>
            删除指定的文件
            </summary>
            <param name="fileID">文件唯一编号</param>
        </member>
        <member name="M:Bigdesk8.Business.FileManager.IFileManager.DeleteFile(System.Int32[])">
            <summary>
            删除指定的文件
            </summary>
            <param name="fileIDs">文件唯一编号</param>
        </member>
        <member name="M:Bigdesk8.Business.FileManager.IFileManager.SaveFile(System.Int32)">
            <summary>
            保存指定的文件
            </summary>
            <param name="fileID">文件唯一编号</param>
        </member>
        <member name="M:Bigdesk8.Business.FileManager.IFileManager.SaveFile(System.Int32[])">
            <summary>
            保存指定的文件
            </summary>
            <param name="fileIDs">文件唯一编号</param>
        </member>
        <member name="M:Bigdesk8.Business.FileManager.IFileManager.CleanupFile(System.Int32)">
            <summary>
            清理垃圾文件，未与业务关联的文件并且上传时间超过 n 天
            </summary>
            <param name="day">超过多少天</param>
        </member>
        <member name="M:Bigdesk8.Business.FileManager.IFileManager.GetSimpleFileModel(System.Int32,System.String,System.String,System.String)">
            <summary>
            获得文件
            </summary>
            <param name="systemID">系统编号</param>
            <param name="moduleCode">模块代码</param>
            <param name="categoryCode">种类代码</param>
            <param name="masterID">业务标识</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.FileManager.IFileManager.GetSimpleFileModel(System.Int32,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            获得文件
            </summary>
            <param name="systemID">系统编号</param>
            <param name="moduleCode">模块代码</param>
            <param name="masterID">业务标识</param>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">页面索引</param>
            <param name="allRecordCount">总记录数</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.FileManager.IFileManager.GetSimpleFileModel(System.Int32,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            获得文件
            </summary>
            <param name="systemID">系统编号</param>
            <param name="moduleCode">模块代码</param>
            <param name="categoryCode">种类代码</param>
            <param name="masterID">业务标识</param>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">页面索引</param>
            <param name="allRecordCount">总记录数</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.FileManager.IFileManager.GetSimpleFileModel(System.Int32,System.String,System.String,System.String,Bigdesk8.Business.FileManager.FileState[])">
            <summary>
            获得文件
            </summary>
            <param name="systemID">系统编号</param>
            <param name="moduleCode">模块代码</param>
            <param name="categoryCode">种类代码</param>
            <param name="masterID">业务标识</param>
            <param name="fileStates">文件状态</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.FileManager.IFileManager.GetSimpleFileModel(System.Int32,System.String,System.String,Bigdesk8.Business.FileManager.FileState[],System.Int32,System.Int32,System.Int32@)">
            <summary>
            获得文件
            </summary>
            <param name="systemID">系统编号</param>
            <param name="moduleCode">模块代码</param>
            <param name="masterID">业务标识</param>
            <param name="fileStates">文件状态</param>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">页面索引</param>
            <param name="allRecordCount">总记录数</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.FileManager.IFileManager.GetSimpleFileModel(System.Int32,System.String,System.String,System.String,Bigdesk8.Business.FileManager.FileState[],System.Int32,System.Int32,System.Int32@)">
            <summary>
            获得文件
            </summary>
            <param name="systemID">系统编号</param>
            <param name="moduleCode">模块代码</param>
            <param name="categoryCode">种类代码</param>
            <param name="masterID">业务标识</param>
            <param name="fileStates">文件状态</param>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">页面索引</param>
            <param name="allRecordCount">总记录数</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.FileManager.IFileManager.GetSimpleFileModel(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.Int32,System.Int32,System.Int32@)">
            <summary>
            获得文件列表
            </summary>
            <param name="condition">搜索条件</param>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">页面索引</param>
            <param name="allRecordCount">总记录数</param>
            <returns></returns>
        </member>
        <member name="P:Bigdesk8.Business.FileManager.IFileManager.DB">
            <summary>
            数据库访问对象
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.FileManager.IFileManager.IsUseInnerTransaction">
            <summary>
            是否使用内部事务
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.FileManager.SimpleFileModel">
            <summary>
            简单的文件模型，不包含文件内容等
            </summary>
        </member>
        <member name="M:Bigdesk8.Business.FileManager.SimpleFileModel.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.FileManager.SimpleFileModel.FileID">
            <summary>
            文件的唯一编号
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.FileManager.SimpleFileModel.SystemID">
            <summary>
            文件所在的系统编号
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.FileManager.SimpleFileModel.ModuleCode">
            <summary>
            文件所在的模块代码
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.FileManager.SimpleFileModel.CategoryCode">
            <summary>
            文件的种类代码
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.FileManager.SimpleFileModel.MasterID">
            <summary>
            业务关键字字串
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.FileManager.SimpleFileModel.FileName">
            <summary>
            文件的原始名称(包含扩展名)，不包含目录路径
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.FileManager.SimpleFileModel.FileType">
            <summary>
            文件的后缀名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.FileManager.SimpleFileModel.FileSize">
            <summary>
            文件的大小（以字节为单位）
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.FileManager.SimpleFileModel.FilePath">
            <summary>
            相对于上传文件统一管理根的完整相对路径
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.FileManager.SimpleFileModel.CreateDateTime">
            <summary>
            文件的创建日期时间
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.FileManager.SimpleFileModel.FileStatus">
            <summary>
            文件状态
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.FileManager.FileState">
            <summary>
            文件状态
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.FileManager.FileState.Deleted">
            <summary>
            已删除的
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.FileManager.FileState.NoSaved">
            <summary>
            未保存的
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.FileManager.FileState.Saved">
            <summary>
            已保存的
            </summary>
        </member>
        <member name="T:Bigdesk8.Web.Controls.UIUtility">
            <summary>
            UI 界面控件功能函数库
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.UIUtility.CheckControlValue(System.Web.UI.Control)">
            <summary>
            界面数据的检查(包括数据的类型,数据的长度,必填项的检查,取值范围检查),如果检查成功返回String.Empty，检查不成功返回错误信息
            </summary>
            <param name="control">控件或控件所在的父控件</param>
            <returns>如果检查成功返回String.Empty，检查不成功返回错误信息</returns>
        </member>
        <member name="M:Bigdesk8.Web.Controls.UIUtility.GetControlValue(System.Web.UI.Control)">
            <summary>
            获得界面控件上的数据，并存放入 <see cref="T:Bigdesk8.Data.IDataItem"/> 集合中
            </summary>
            <param name="control">控件或控件所在的父控件</param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.UIUtility.GetControlValue(System.Web.UI.Control,System.Boolean)">
            <summary>
            获得界面控件上的数据，并存放入 <see cref="T:Bigdesk8.Data.IDataItem"/> 集合中
            </summary>
            <param name="control">控件或控件所在的父控件</param>
            <param name="isRecursion">是否对子控件进行递归</param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.UIUtility.GetControlValue(System.Web.UI.Control,System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.Boolean,System.Boolean)">
            <summary>
            获得界面控件上的数据，并存放入 <see cref="T:Bigdesk8.Data.IDataItem"/> 集合中
            </summary>
            <param name="control">控件或控件所在的父控件</param>
            <param name="dataitem"><see cref="T:Bigdesk8.Data.IDataItem"/> 集合</param>
            <param name="overwrite">是否要覆盖现有数据</param>
            <param name="isRecursion">是否对子控件进行递归</param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.UIUtility.SetControlValue(System.Web.UI.Control,System.Collections.Generic.List{Bigdesk8.Data.IDataItem})">
            <summary>
            将 IDataItem 中的数据显示在界面控件上
            </summary>
            <param name="control">控件或控件所在的父控件</param>
            <param name="dataitem">所有数据项</param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.UIUtility.SetControlDefaultValue(System.Web.UI.Control,System.Boolean)">
            <summary>
            将 IDataItem 中的默认数据显示在界面控件上
            </summary>
            <param name="control">控件或控件所在的父控件</param>
            <param name="overwrite">是否要覆盖现有数据</param>
        </member>
        <!-- 对于成员“M:Bigdesk8.Web.Controls.UIUtility.GetDataItem(System.Web.UI.Control)”忽略有格式错误的 XML 注释 -->
        <member name="M:Bigdesk8.Web.Controls.UIUtility.ListControlDataBind(System.Web.UI.WebControls.ListControl,System.Collections.IEnumerable,System.Boolean)">
            <summary>
            将 IEnumerable 填充到 ListControl，以及从 <see cref="T:System.Web.UI.WebControls.ListControl"/> 控件的子控件，例如：listControl,CheckBoxList,RadioButtonList...
            IEnumerable 中匿名类型的第一个属性表示文本,第二个属性表示代码. data 中的元素至少要有一个属性.
            例子: var city1 = from a in db.d_city select new { a.NodeName, a.NodeID };
            或者  var city2 = from a in db.d_city select new { a.NodeName };
            </summary>
            <param name="listControl">控件，从 <see cref="T:System.Web.UI.WebControls.ListControl"/> 控件的子控件都可以绑定，例如：listControl,CheckBoxList,RadioButtonList...</param>
            <param name="data">数据</param>
            <param name="isAddSpaceItem">是否要加入一个空项</param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.UIUtility.ListControlDataBind(System.Web.UI.WebControls.ListControl,System.Data.DataTable,System.Boolean)">
            <summary>
            将 DataTable 填充到 ListControl，以及从 <see cref="T:System.Web.UI.WebControls.ListControl"/> 控件的子控件，例如：listControl,CheckBoxList,RadioButtonList...
            如果 DataTable 有两列，则第一列表示文本，第二列表示值.data 中的 DataRow 至少要有一个字段.
            </summary>
            <param name="listControl">控件，从 <see cref="T:System.Web.UI.WebControls.ListControl"/> 控件的子控件都可以绑定，例如：listControl,CheckBoxList,RadioButtonList...</param>
            <param name="data">数据</param>
            <param name="isAddSpaceItem">是否要加入一个空项</param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.UIUtility.ListControlDataBind(System.Web.UI.WebControls.ListControl,System.Collections.IDictionary,System.Boolean)">
            <summary>
            将 IDictionary 填充到 ListControl，以及从 <see cref="T:System.Web.UI.WebControls.ListControl"/> 控件的子控件，例如：listControl,CheckBoxList,RadioButtonList...
            IDictionary 的 Key 表示代码, value 表示文本
            例子: Hashtable ht = new Hashtable(); ht[key]=value;
            </summary>
            <param name="listControl">控件，从 <see cref="T:System.Web.UI.WebControls.ListControl"/> 控件的子控件都可以绑定，例如：listControl,CheckBoxList,RadioButtonList...</param>
            <param name="data">数据</param>
            <param name="isAddSpaceItem">是否要加入一个空项</param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.UIUtility.ListControlDataBind(System.Web.UI.WebControls.ListControl,System.Collections.Generic.List{System.Web.UI.WebControls.ListItem},System.Boolean)">
            <summary>
            将 ListItem 填充到 ListControl，以及从 <see cref="T:System.Web.UI.WebControls.ListControl"/> 控件的子控件，例如：listControl,CheckBoxList,RadioButtonList...
            </summary>
            <param name="listControl">控件，从 <see cref="T:System.Web.UI.WebControls.ListControl"/> 控件的子控件都可以绑定，例如：listControl,CheckBoxList,RadioButtonList...</param>
            <param name="data">数据</param>
            <param name="isAddSpaceItem">是否要加入一个空项</param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.UIUtility.SetControlReadOnly(System.Web.UI.Control,System.Boolean)">
            <summary>
            设置界面上控件的 Enabled=!isReadOnly 或者 ReadOnly=isReadOnly 或者 Disabled=isReadOnly
            </summary>
            <param name="control">控件或控件所在的父控件</param>
            <param name="isReadOnly">是否为只读</param>
        </member>
        <member name="T:Bigdesk8.Web.Controls.IUploadFileService">
            <summary>
            上传文件服务
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.IUploadFileService.UploadFile(System.String,System.String,System.Byte[],System.Boolean,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            上传文件
            </summary>
            <param name="fileID">文件标识</param>
            <param name="fileName">文件名称</param>
            <param name="data">数据</param>
            <param name="isFirstChunk">是否是第一个文件块</param>
            <param name="isLastChunk">是否是最后一个文件块</param>
            <param name="customParams">自定义参数</param>
            <returns>返回文件标识</returns>
            <returns>返回SHA1散列值</returns>
        </member>
        <member name="M:Bigdesk8.Web.Controls.IUploadFileService.CancelUpload(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            取消上传
            </summary>
            <param name="fileID">文件标识</param>
            <param name="customParams">自定义参数</param>
            <returns>取消是否成功</returns>
        </member>
        <member name="M:Bigdesk8.Web.Controls.IUploadFileService.DeleteFile(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            删除文件
            </summary>
            <param name="fileID">文件标识</param>
            <param name="customParams">自定义参数</param>
            <returns>删除是否成功</returns>
        </member>
        <member name="M:Bigdesk8.Web.Controls.IUploadFileService.GetViewFileUrl(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            获得查看文件地址
            </summary>
            <param name="fileID">文件标识</param>
            <param name="customParams">自定义参数</param>
            <returns></returns>
        </member>
        <member name="T:Bigdesk8.Web.Controls.UploadFileResult">
            <summary>
            上传文件时的返回结果
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.UploadFileResult.FileID">
            <summary>
            文件标识
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.UploadFileResult.SHA1">
            <summary>
            SHA1散列值
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.UploadFileResult.CustomParams">
            <summary>
            自定义参数
            </summary>
        </member>
        <member name="T:Bigdesk8.Web.Controls.DBDropDownList">
            <summary>
            只允许从中选择一项的下拉列表控件
            </summary>
        </member>
        <member name="T:Bigdesk8.Data.IValueTextItem">
            <summary>
            Value、Text 数据项接口，界面控件实现此接口，方便数据与界面挂接
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.IValueTextItem.ValueItem">
            <summary>
            Value 数据项
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.IValueTextItem.TextItem">
            <summary>
            Text 数据项
            </summary>
        </member>
        <member name="F:Bigdesk8.Web.Controls.DBDropDownList._ErrorMessage">
            <summary>
            错误信息，如果不为String.Empty,则有错误
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBDropDownList.ItemCheck">
            <summary>
            检查类型是否匹配，长度是否超长，必填项是否已填，取值范围是否正确等等.....
            </summary>
            <returns>检查成功返回true,不成功返回false</returns>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBDropDownList.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            将需要呈现的 HTML 属性和样式添加到指定的 <see cref="T:System.Web.UI.HtmlTextWriter"/> 实例中。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBDropDownList.ItemNameCN">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBDropDownList.ItemIsRequired">
            <summary>
            是否为必填项
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBDropDownList.ItemName">
            <summary>
            Value 数据项名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBDropDownList.ItemType">
            <summary>
            Value 数据类型
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBDropDownList.ItemRelation">
            <summary>
            Value 数据项与数据的关系
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBDropDownList.TextItemName">
            <summary>
            Text 数据项名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBDropDownList.TextItemType">
            <summary>
            Text 数据类型
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBDropDownList.TextItemRelation">
            <summary>
            Text 数据项与数据的关系
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBDropDownList.SelectedValue">
            <summary>
            获取列表控件中选定项的值，或选择列表控件中包含指定值的项。
            返回结果:
                列表控件中选定项的值。默认值为空字符串 ("")。
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBDropDownList.IsAutoAddItem">
            <summary>
            当列表中可选项不存在时，是否自动添加
            </summary>
        </member>
        <member name="T:Bigdesk8.Web.Controls.BigFileUploadDesigner">
            <summary>
            <see cref="T:Bigdesk8.Web.Controls.BigFileUploadDesigner"/> 服务器控件设计器。
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.BigFileUploadDesigner.#ctor">
            <summary>
            初始化 <see cref="T:Bigdesk8.Web.Controls.BigFileUploadDesigner"/> 的新实例
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.BigFileUploadDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            使设计器准备查看、编辑和设计指定的组件
            </summary>
            <param name="component">此设计器的组件</param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.BigFileUploadDesigner.GetDesignTimeHtml">
            <summary>
            获取用于在设计时表示关联控件的 HTML。
            </summary>
            <returns>用于在设计时表示控件的 HTML。</returns>
        </member>
        <member name="M:Bigdesk8.Web.Controls.BigFileUploadDesigner.GetErrorDesignTimeHtml(System.Exception)">
            <summary>
            获取在呈现控件时遇到错误后在设计时为指定的异常显示的 HTML。
            </summary>
            <param name="e">要为其显示错误信息的异常。</param>
            <returns>设计时为指定的异常显示的 HTML。</returns>
        </member>
        <member name="T:Bigdesk8.Data.OracleParameterCollection">
            <summary>
            SQL 参数集合
            </summary>
        </member>
        <member name="T:Bigdesk8.Data.SqlParameterCollection">
            <summary>
            SQL 参数集合
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.SqlParameterCollection.Add(System.String,System.Object)">
            <summary>
            在给定参数名称和参数值的情况下，将 <see cref="T:System.Data.Common.DbParameter"/> 添加到 <see cref="T:Bigdesk8.Data.SqlParameterCollection"/> 中。
            </summary>
            <param name="parameterName">参数名</param>
            <param name="value">要添加到集合中的 <see cref="T:System.Data.Common.DbParameter"/> 的 <see cref="T:System.Data.Common.DbParameter"/>.Value。</param>
            <returns>新 <see cref="T:System.Data.Common.DbParameter"/> 对象的索引。</returns>
        </member>
        <member name="M:Bigdesk8.Data.SqlParameterCollection.Add(System.String,System.Data.DbType,System.Object)">
            <summary>
            在给定参数名称、数据类型和参数值的情况下，将 <see cref="T:System.Data.Common.DbParameter"/> 添加到 <see cref="T:Bigdesk8.Data.SqlParameterCollection"/> 中。
            </summary>
            <param name="parameterName">参数名</param>
            <param name="dataType">数据类型</param>
            <param name="value">要添加到集合中的 <see cref="T:System.Data.Common.DbParameter"/> 的 <see cref="T:System.Data.Common.DbParameter"/>.Value。</param>
            <returns>新 <see cref="T:System.Data.Common.DbParameter"/> 对象的索引。</returns>
        </member>
        <member name="M:Bigdesk8.Data.SqlParameterCollection.Add(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            在给定参数名称、数据类型、参数值和列的长度的情况下，将 <see cref="T:System.Data.Common.DbParameter"/> 添加到 <see cref="T:Bigdesk8.Data.SqlParameterCollection"/> 中。
            </summary>
            <param name="parameterName">参数名</param>
            <param name="dataType">数据类型</param>
            <param name="size">列的长度</param>
            <param name="value">要添加到集合中的 <see cref="T:System.Data.Common.DbParameter"/> 的 <see cref="T:System.Data.Common.DbParameter"/>.Value。</param>
            <returns>新 <see cref="T:System.Data.Common.DbParameter"/> 对象的索引。</returns>
        </member>
        <member name="M:Bigdesk8.Data.OracleParameterCollection.Add(System.String,System.Object)">
            <summary>
            在给定参数名称和参数值的情况下，将 <see cref="T:System.Data.OracleClient.OracleParameter"/> 添加到 <see cref="T:Bigdesk8.Data.SqlParameterCollection"/> 中。
            </summary>
            <param name="parameterName">参数名</param>
            <param name="value">要添加到集合中的 <see cref="T:System.Data.OracleClient.OracleParameter"/> 的 <see cref="T:System.Data.OracleClient.OracleParameter"/>.Value。</param>
            <returns>新 <see cref="T:System.Data.OracleClient.OracleParameter"/> 对象的索引。</returns>
        </member>
        <member name="M:Bigdesk8.Data.OracleParameterCollection.Add(System.String,System.Data.DbType,System.Object)">
            <summary>
            在给定参数名称、数据类型和参数值的情况下，将 <see cref="T:System.Data.OracleClient.OracleParameter"/> 添加到 <see cref="T:Bigdesk8.Data.SqlParameterCollection"/> 中。
            </summary>
            <param name="parameterName">参数名</param>
            <param name="dataType">数据类型</param>
            <param name="value">要添加到集合中的 <see cref="T:System.Data.OracleClient.OracleParameter"/> 的 <see cref="T:System.Data.OracleClient.OracleParameter"/>.Value。</param>
            <returns>新 <see cref="T:System.Data.OracleClient.OracleParameter"/> 对象的索引。</returns>
        </member>
        <member name="M:Bigdesk8.Data.OracleParameterCollection.Add(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            在给定参数名称、数据类型、参数值和列的长度的情况下，将 <see cref="T:System.Data.OracleClient.OracleParameter"/> 添加到 <see cref="T:Bigdesk8.Data.SqlParameterCollection"/> 中。
            </summary>
            <param name="parameterName">参数名</param>
            <param name="dataType">数据类型</param>
            <param name="size">列的长度</param>
            <param name="value">要添加到集合中的 <see cref="T:System.Data.OracleClient.OracleParameter"/> 的 <see cref="T:System.Data.OracleClient.OracleParameter"/>.Value。</param>
            <returns>新 <see cref="T:System.Data.OracleClient.OracleParameter"/> 对象的索引。</returns>
        </member>
        <member name="T:Bigdesk8.Business.UserRightManager.UserRightManager">
            <summary>
            用户权限管理，主要对多个用户权限信息进行管理
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.UserRightManager.IUserRightManager">
            <summary>
            用户权限管理接口，主要对多个用户权限信息进行管理
            
            有三种返回数据的方法Read,Select,Search;
            Read：返回一个数据实体，采用关键编号作为条件，返回精确查询数据
            Select：返回一个数据集，采用关键编号作为条件，返回精确查询数据
            Search：返回一个数据集，采用数据信息作为条件，返回模糊查询数据
            </summary>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.CreateUser(Bigdesk8.Business.UserRightManager.UserModel)">
            <summary>
            增加一个用户
            </summary>
            <param name="model">用户信息</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.ReadUser(System.Int32)">
            <summary>
            读取一个用户
            </summary>
            <param name="userID">用户编号</param>
            <returns>返回用户信息</returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.SearchUserRight(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.Int32,System.Int32,System.Int32@)">
            <summary>
            查询用户权限数据，只查询有权限的数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">页面索引</param>
            <param name="allRecordCount">总记录数</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.UpdateUser(Bigdesk8.Business.UserRightManager.UserModel)">
            <summary>
            更新一个用户
            </summary>
            <param name="model">用户信息</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.DeleteUser(System.Int32)">
            <summary>
            删除一个用户
            </summary>
            <param name="userID">用户编号</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.UserExists(System.Int32)">
            <summary>
            判断用户是否存在
            </summary>
            <param name="userID">用户编号</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.UserExists(System.String)">
            <summary>
            判断用户是否存在
            </summary>
            <param name="loginName">登录名称</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.Login(System.String,System.String)">
            <summary>
            判断登录是否成功
            </summary>
            <param name="loginName">登录名称</param>
            <param name="LoginPassword">登录密码</param>
            <returns>返回登录是否成功</returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.ChangePassword(System.String,System.String)">
            <summary>
            修改密码
            </summary>
            <param name="loginName">登录名称</param>
            <param name="newLoginPassword">新密码</param>
            <returns>返回修改密码是否成功</returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.PasswordRecovery(System.String)">
            <summary>
            密码重置
            </summary>
            <param name="loginName">登录名称</param>
            <returns>返回新密码</returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.SearchUser(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.Int32,System.Int32,System.Int32@)">
            <summary>
            查询用户数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">页面索引</param>
            <param name="allRecordCount">总记录数</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.CreateRole(Bigdesk8.Business.UserRightManager.RoleModel)">
            <summary>
            增加一个角色
            </summary>
            <param name="model">角色信息</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.ReadRole(System.Int32)">
            <summary>
            读取一个角色
            </summary>
            <param name="roleID">角色编号</param>
            <returns>返回角色信息</returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.UpdateRole(Bigdesk8.Business.UserRightManager.RoleModel)">
            <summary>
            更新一个角色
            </summary>
            <param name="model">角色信息</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.DeleteRole(System.Int32)">
            <summary>
            删除一个角色
            </summary>
            <param name="roleID">角色编号</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.RoleExists(System.Int32)">
            <summary>
            判断角色是否存在
            </summary>
            <param name="roleID">角色编号</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.RoleExists(System.String)">
            <summary>
            判断角色是否存在
            </summary>
            <param name="roleName">角色名称</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.SearchRole(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.Int32,System.Int32,System.Int32@)">
            <summary>
            查询角色数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">页面索引</param>
            <param name="allRecordCount">总记录数</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.SaveUserRole(System.Int32,System.Int32)">
            <summary>
            保存用户角色关系
            </summary>
            <param name="userID">用户编号</param>
            <param name="roleID">角色编号</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.DeleteUserRole(System.Int32)">
            <summary>
            删除所有用户角色关系
            </summary>
            <param name="userID">用户编号</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.DeleteUserRole(System.Int32,System.Int32)">
            <summary>
            删除一个用户角色关系
            </summary>
            <param name="userID">用户编号</param>
            <param name="roleID">角色编号</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.UserRoleExists(System.Int32,System.Int32)">
            <summary>
            判断用户角色关系是否存在
            </summary>
            <param name="userID">用户编号</param>
            <param name="roleID">角色编号</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.SearchUserRole(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.Int32,System.Int32,System.Int32@)">
            <summary>
            查询用户角色数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">页面索引</param>
            <param name="allRecordCount">总记录数</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.SearchUserRole2(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.Int32,System.Int32,System.Int32@)">
            <summary>
            查询用户角色数据, 将没有建立关系的也显示出来
            </summary>
            <param name="condition">查询条件</param>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">页面索引</param>
            <param name="allRecordCount">总记录数</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.ReadSystem(System.Int32)">
            <summary>
            读取一个系统
            </summary>
            <param name="systemID">系统编号</param>
            <returns>返回系统信息</returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.SearchSystem(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.Int32,System.Int32,System.Int32@)">
            <summary>
            查询系统数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">页面索引</param>
            <param name="allRecordCount">总记录数</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.SelectModule(System.Int32)">
            <summary>
            查询模块数据
            </summary>
            <param name="systemID">系统编号</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.SelectOperate(System.Int32)">
            <summary>
            查询操作数据
            </summary>
            <param name="systemID">系统编号</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.SelectDataType(System.Int32)">
            <summary>
            查询业务数据分类数据
            </summary>
            <param name="systemID">系统编号</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.SaveRoleRight(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            保存角色权限关系
            </summary>
            <param name="roleID">角色编号</param>
            <param name="systemID">系统编号</param>
            <param name="moduleID">模块编号</param>
            <param name="operateID">操作编号</param>
            <param name="dataTypeID">业务数据分类编号</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.DeleteRoleRight(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            删除一个角色权限关系
            </summary>
            <param name="roleID">角色编号</param>
            <param name="systemID">系统编号</param>
            <param name="moduleID">模块编号</param>
            <param name="operateID">操作编号</param>
            <param name="dataTypeID">业务数据分类编号</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.SearchRoleRight(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.Int32,System.Int32,System.Int32@)">
            <summary>
            查询角色权限数据，不显示没有设置的权限
            </summary>
            <param name="condition">查询条件</param>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">页面索引</param>
            <param name="allRecordCount">总记录数</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.SearchRoleRight(System.Int32,System.Int32,System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.Int32,System.Int32,System.Int32@)">
            <summary>
            查询角色权限数据，将没有设置的权限写显示出来
            </summary>
            <param name="roleID">角色编号</param>
            <param name="systemID">系统编号</param>
            <param name="condition">查询条件</param>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">页面索引</param>
            <param name="allRecordCount">总记录数</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightManager.SearchRoleRight2(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.Int32,System.Int32,System.Int32@)">
            <summary>
            查询角色权限数据，将没有设置的权限也显示出来
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.IUserRightManager.DB">
            <summary>
            数据库访问对象
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.IUserRightManager.IsUseInnerTransaction">
            <summary>
            是否使用内部事务
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UserRightManager.UserRightManager.GuestUserID">
            <summary>
            匿名用户编号
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UserRightManager.UserRightManager.GuestLoginName">
            <summary>
            匿名用户名称
            </summary>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.CreateUser(Bigdesk8.Business.UserRightManager.UserModel)">
            <summary>
            增加一个用户
            </summary>
            <param name="model">用户信息</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.ReadUser(System.Int32)">
            <summary>
            读取一个用户
            </summary>
            <param name="userID">用户编号</param>
            <returns>返回用户信息</returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.SearchUserRight(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.Int32,System.Int32,System.Int32@)">
            <summary>
            查询用户权限数据，只查询有权限的数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">页面索引</param>
            <param name="allRecordCount">总记录数</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.UpdateUser(Bigdesk8.Business.UserRightManager.UserModel)">
            <summary>
            更新一个用户
            </summary>
            <param name="model">用户信息</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.DeleteUser(System.Int32)">
            <summary>
            删除一个用户
            </summary>
            <param name="userID">用户编号</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.UserExists(System.Int32)">
            <summary>
            判断用户名称是否存在
            </summary>
            <param name="userID">用户编号</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.UserExists(System.String)">
            <summary>
            判断用户名称是否存在
            </summary>
            <param name="loginName">登录名称</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.Login(System.String,System.String)">
            <summary>
            判断登录是否成功
            </summary>
            <param name="loginName">登录名称</param>
            <param name="LoginPassword">登录密码</param>
            <returns>返回登录是否成功</returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.ChangePassword(System.String,System.String)">
            <summary>
            修改密码
            </summary>
            <param name="loginName">登录名称</param>
            <param name="newLoginPassword">新密码</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.PasswordRecovery(System.String)">
            <summary>
            密码重置
            </summary>
            <param name="loginName">登录名称</param>
            <returns>返回新密码</returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.SearchUser(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.Int32,System.Int32,System.Int32@)">
            <summary>
            查询用户数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">页面索引</param>
            <param name="allRecordCount">总记录数</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.CreateRole(Bigdesk8.Business.UserRightManager.RoleModel)">
            <summary>
            增加一个角色
            </summary>
            <param name="model">角色信息</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.ReadRole(System.Int32)">
            <summary>
            读取一个角色
            </summary>
            <param name="roleID">角色编号</param>
            <returns>返回角色信息</returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.UpdateRole(Bigdesk8.Business.UserRightManager.RoleModel)">
            <summary>
            更新一个角色
            </summary>
            <param name="model">角色信息</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.DeleteRole(System.Int32)">
            <summary>
            删除一个角色
            </summary>
            <param name="roleID">角色编号</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.RoleExists(System.Int32)">
            <summary>
            判断角色是否存在
            </summary>
            <param name="roleID">角色编号</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.RoleExists(System.String)">
            <summary>
            判断角色是否存在
            </summary>
            <param name="roleName">角色名称</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.SearchRole(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.Int32,System.Int32,System.Int32@)">
            <summary>
            查询角色数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">页面索引</param>
            <param name="allRecordCount">总记录数</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.SaveUserRole(System.Int32,System.Int32)">
            <summary>
            保存用户角色关系
            </summary>
            <param name="userID">用户编号</param>
            <param name="roleID">角色编号</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.DeleteUserRole(System.Int32)">
            <summary>
            删除用户角色关系
            </summary>
            <param name="userID">用户编号</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.DeleteUserRole(System.Int32,System.Int32)">
            <summary>
            删除一个用户角色关系
            </summary>
            <param name="userID">用户编号</param>
            <param name="roleID">角色编号</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.UserRoleExists(System.Int32,System.Int32)">
            <summary>
            判断用户角色关系是否存在
            </summary>
            <param name="userID">用户编号</param>
            <param name="roleID">角色编号</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.SearchUserRole(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.Int32,System.Int32,System.Int32@)">
            <summary>
            查询用户角色数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">页面索引</param>
            <param name="allRecordCount">总记录数</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.SearchUserRole2(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.Int32,System.Int32,System.Int32@)">
            <summary>
            查询用户角色数据, 将没有建立关系的也显示出来
            </summary>
            <param name="condition">查询条件</param>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">页面索引</param>
            <param name="allRecordCount">总记录数</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.ReadSystem(System.Int32)">
            <summary>
            读取一个系统
            </summary>
            <param name="systemID">系统编号</param>
            <returns>返回系统信息</returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.SearchSystem(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.Int32,System.Int32,System.Int32@)">
            <summary>
            查询系统数据
            </summary>
            <param name="condition">查询条件</param>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">页面索引</param>
            <param name="allRecordCount">总记录数</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.SelectModule(System.Int32)">
            <summary>
            查询模块数据
            </summary>
            <param name="systemID">系统编号</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.SelectOperate(System.Int32)">
            <summary>
            查询操作数据
            </summary>
            <param name="systemID">系统编号</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.SelectDataType(System.Int32)">
            <summary>
            查询业务数据分类数据
            </summary>
            <param name="systemID">系统编号</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.SaveRoleRight(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            保存角色权限关系
            </summary>
            <param name="roleID">角色编号</param>
            <param name="systemID">系统编号</param>
            <param name="moduleID">模块编号</param>
            <param name="operateID">操作编号</param>
            <param name="dataTypeID">业务数据分类编号</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.DeleteRoleRight(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            删除一个角色权限关系
            </summary>
            <param name="roleID">角色编号</param>
            <param name="systemID">系统编号</param>
            <param name="moduleID">模块编号</param>
            <param name="operateID">操作编号</param>
            <param name="dataTypeID">业务数据分类编号</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.SearchRoleRight(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.Int32,System.Int32,System.Int32@)">
            <summary>
            查询角色权限数据，不显示没有设置的权限
            </summary>
            <param name="condition">查询条件</param>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">页面索引</param>
            <param name="allRecordCount">总记录数</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.SearchRoleRight(System.Int32,System.Int32,System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.Int32,System.Int32,System.Int32@)">
            <summary>
            查询角色权限数据，将没有设置的权限也显示出来
            </summary>
            <param name="roleID">角色编号</param>
            <param name="systemID">系统编号</param>
            <param name="condition">查询条件</param>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">页面索引</param>
            <param name="allRecordCount">总记录数</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightManager.SearchRoleRight2(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.Int32,System.Int32,System.Int32@)">
            <summary>
            查询角色权限数据，将没有设置的权限也显示出来
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.UserRightManager.DB">
            <summary>
            数据库访问对象
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.UserRightManager.IsUseInnerTransaction">
            <summary>
            是否使用内部事务
            </summary>
        </member>
        <member name="T:Bigdesk8.FunctionResult">
            <summary>
            功能、处理过程等的返回结果
            用于不关注返回结果的功能处理函数
            </summary>
        </member>
        <member name="M:Bigdesk8.FunctionResult.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Bigdesk8.FunctionResult.#ctor(Bigdesk8.FunctionResultStatus)">
            <summary>
            构造函数
            </summary>
            <param name="status">功能函数在执行过程当中，出现的各种异常情况</param>
        </member>
        <member name="M:Bigdesk8.FunctionResult.#ctor(Bigdesk8.FunctionResultStatus,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="status">功能函数在执行过程当中，出现的各种异常情况</param>
            <param name="message">异常情况的信息，提示、警告、错误信息都记录在这个属性上</param>
        </member>
        <member name="M:Bigdesk8.FunctionResult.#ctor(Bigdesk8.FunctionResultStatus,System.Exception)">
            <summary>
            构造函数
            </summary>
            <param name="status">功能函数在执行过程当中，出现的各种异常情况</param>
            <param name="exception">异常情况的信息，提示、警告、错误信息都记录在这个属性上</param>
        </member>
        <member name="P:Bigdesk8.FunctionResult.Status">
            <summary>
            功能函数在执行过程当中，出现的各种异常情况
            </summary>
        </member>
        <member name="P:Bigdesk8.FunctionResult.Message">
            <summary>
            异常情况的信息，提示、警告、错误信息都记录在这个属性上
            </summary>
        </member>
        <member name="T:Bigdesk8.FunctionResultException">
            <summary>
            功能、处理过程等的返回结果
            用于不关注返回结果的功能处理函数
            </summary>
        </member>
        <member name="M:Bigdesk8.FunctionResultException.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Bigdesk8.FunctionResultException.#ctor(Bigdesk8.FunctionResultStatus)">
            <summary>
            构造函数
            </summary>
            <param name="status">功能函数在执行过程当中，出现的各种异常情况</param>
        </member>
        <member name="M:Bigdesk8.FunctionResultException.#ctor(Bigdesk8.FunctionResultStatus,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="status">功能函数在执行过程当中，出现的各种异常情况</param>
            <param name="message">异常情况的信息，提示、警告、错误信息都记录在这个属性上</param>
        </member>
        <member name="M:Bigdesk8.FunctionResultException.#ctor(Bigdesk8.FunctionResultStatus,System.Exception)">
            <summary>
            构造函数
            </summary>
            <param name="status">功能函数在执行过程当中，出现的各种异常情况</param>
            <param name="exception">异常情况的信息，提示、警告、错误信息都记录在这个属性上</param>
        </member>
        <member name="M:Bigdesk8.FunctionResultException.#ctor(Bigdesk8.FunctionResult)">
            <summary>
            构造函数
            </summary>
            <param name="result">功能函数返回结果</param>
        </member>
        <member name="P:Bigdesk8.FunctionResultException.Result">
            <summary>
            执行结果
            </summary>
        </member>
        <member name="T:Bigdesk8.FunctionResult`1">
            <summary>
            功能、处理过程等的返回结果
            用于关注返回结果的功能处理函数
            </summary>
            <typeparam name="T">返回结果的类型</typeparam>
        </member>
        <member name="M:Bigdesk8.FunctionResult`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Bigdesk8.FunctionResult`1.#ctor(Bigdesk8.FunctionResultStatus)">
            <summary>
            构造函数
            </summary>
            <param name="status">功能函数在执行过程当中，出现的各种异常情况</param>
        </member>
        <member name="M:Bigdesk8.FunctionResult`1.#ctor(Bigdesk8.FunctionResultStatus,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="status">功能函数在执行过程当中，出现的各种异常情况</param>
            <param name="message">异常情况的信息，提示、警告、错误信息都记录在这个属性上</param>
        </member>
        <member name="M:Bigdesk8.FunctionResult`1.#ctor(Bigdesk8.FunctionResultStatus,System.Exception)">
            <summary>
            构造函数
            </summary>
            <param name="status">功能函数在执行过程当中，出现的各种异常情况</param>
            <param name="exception">异常情况的信息，提示、警告、错误信息都记录在这个属性上</param>
        </member>
        <member name="M:Bigdesk8.FunctionResult`1.#ctor(Bigdesk8.FunctionResultStatus,System.String,`0)">
            <summary>
            构造函数
            </summary>
            <param name="status">功能函数在执行过程当中，出现的各种异常情况</param>
            <param name="message">异常情况的信息，提示、警告、错误信息都记录在这个属性上</param>
            <param name="result">函数返回结果</param>
        </member>
        <member name="M:Bigdesk8.FunctionResult`1.#ctor(Bigdesk8.FunctionResultStatus,System.Exception,`0)">
            <summary>
            构造函数
            </summary>
            <param name="status">功能函数在执行过程当中，出现的各种异常情况</param>
            <param name="exception">异常情况的信息，提示、警告、错误信息都记录在这个属性上</param>
            <param name="result">函数返回结果</param>
        </member>
        <member name="P:Bigdesk8.FunctionResult`1.Result">
            <summary>
            函数返回结果
            </summary>
        </member>
        <member name="P:Bigdesk8.FunctionResult`1.Status">
            <summary>
            功能函数在执行过程当中，出现的各种异常情况
            </summary>
        </member>
        <member name="P:Bigdesk8.FunctionResult`1.Message">
            <summary>
            异常情况的信息，提示、警告、错误信息都记录在这个属性上
            </summary>
        </member>
        <member name="T:Bigdesk8.FunctionResultException`1">
            <summary>
            功能、处理过程等的返回结果
            用于关注返回结果的功能处理函数
            </summary>
            <typeparam name="T">返回结果的类型</typeparam>
        </member>
        <member name="M:Bigdesk8.FunctionResultException`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Bigdesk8.FunctionResultException`1.#ctor(Bigdesk8.FunctionResultStatus)">
            <summary>
            构造函数
            </summary>
            <param name="status">功能函数在执行过程当中，出现的各种异常情况</param>
        </member>
        <member name="M:Bigdesk8.FunctionResultException`1.#ctor(Bigdesk8.FunctionResultStatus,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="status">功能函数在执行过程当中，出现的各种异常情况</param>
            <param name="message">异常情况的信息，提示、警告、错误信息都记录在这个属性上</param>
        </member>
        <member name="M:Bigdesk8.FunctionResultException`1.#ctor(Bigdesk8.FunctionResultStatus,System.Exception)">
            <summary>
            构造函数
            </summary>
            <param name="status">功能函数在执行过程当中，出现的各种异常情况</param>
            <param name="exception">异常情况的信息，提示、警告、错误信息都记录在这个属性上</param>
        </member>
        <member name="M:Bigdesk8.FunctionResultException`1.#ctor(Bigdesk8.FunctionResultStatus,System.String,`0)">
            <summary>
            构造函数
            </summary>
            <param name="status">功能函数在执行过程当中，出现的各种异常情况</param>
            <param name="message">异常情况的信息，提示、警告、错误信息都记录在这个属性上</param>
            <param name="result">函数返回结果</param>
        </member>
        <member name="M:Bigdesk8.FunctionResultException`1.#ctor(Bigdesk8.FunctionResultStatus,System.Exception,`0)">
            <summary>
            构造函数
            </summary>
            <param name="status">功能函数在执行过程当中，出现的各种异常情况</param>
            <param name="exception">异常情况的信息，提示、警告、错误信息都记录在这个属性上</param>
            <param name="result">函数返回结果</param>
        </member>
        <member name="M:Bigdesk8.FunctionResultException`1.#ctor(Bigdesk8.FunctionResult{`0})">
            <summary>
            构造函数
            </summary>
            <param name="result">功能函数返回结果</param>
        </member>
        <member name="P:Bigdesk8.FunctionResultException`1.Result">
            <summary>
            执行结果
            </summary>
        </member>
        <member name="T:Bigdesk8.FunctionResultStatus">
            <summary>
            功能、处理过程等的结果状态
            功能函数在执行过程当中，出现的各种异常情况
            </summary>
        </member>
        <member name="F:Bigdesk8.FunctionResultStatus.None">
            <summary>
            无，无异常情况，程序可以继续往下执行
            </summary>
        </member>
        <member name="F:Bigdesk8.FunctionResultStatus.Info">
            <summary>
            消息，有异常情况，需要提示用户，提示之后，程序可以继续往下执行
            例如：保存成功后，提示用户保存已成功完成，适用此项。
            </summary>
        </member>
        <member name="F:Bigdesk8.FunctionResultStatus.Warn">
            <summary>
            警告，有异常情况，需要警告用户，并阻止程序继续往下执行
            例如：有些必填项用户未填写，适用此项。
            </summary>
        </member>
        <member name="F:Bigdesk8.FunctionResultStatus.Error">
            <summary>
            错误，有异常情况，需要错误用户，并阻止程序继续往下执行
            例如：用户无权限，立即跳转到错误消息页面，并阻止程序执行。
            </summary>
        </member>
        <member name="T:Bigdesk8.SimpleResult">
            <summary>
            简明版的功能、处理过程等的返回结果
            </summary>
            特别，因为Web函数返回时，Exception不能序列化，故不能用FunctionResult作返回值
        </member>
        <member name="T:Bigdesk8.SimpleResult`1">
            <summary>
            简明版的功能、处理过程等的返回结果
            </summary>
            特别，因为Web函数返回时，Exception不能序列化，故不能用FunctionResult作返回值
        </member>
        <member name="P:Bigdesk8.SimpleResult`1.ResultCode">
            <summary>
            结果状态
            </summary>
        </member>
        <member name="P:Bigdesk8.SimpleResult`1.ResultMessage">
            <summary>
            结果信息
            </summary>
        </member>
        <member name="P:Bigdesk8.SimpleResult`1.ResultObject">
            <summary>
            结果对象
            </summary>
        </member>
        <member name="T:Bigdesk8.Xml.XmlOperator">
            <summary>
            Xml 操作类
            Xml操作类其中包含的函数:
            1.创建XML的根节点
            2.获取指定XPath表达式的节点对象
            3.获取指定XPath表达式节点的值
            4.获取指定XPath表达式节点的属性值
            5.新增节点
            6.删除节点
            7.保存XML文件
            8.创建根节点对象【静态方法】
            9.获取指定XPath表达式节点的值【静态方法】
            10.获取指定XPath表达式节点的属性值【静态方法】
            </summary>
        </member>
        <member name="F:Bigdesk8.Xml.XmlOperator._filePath">
            <summary>
            XML文件的物理路径
            </summary>
        </member>
        <member name="F:Bigdesk8.Xml.XmlOperator._xml">
            <summary>
            Xml文档
            </summary>
        </member>
        <member name="F:Bigdesk8.Xml.XmlOperator._element">
            <summary>
            XML的根节点
            </summary>
        </member>
        <member name="M:Bigdesk8.Xml.XmlOperator.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="xmlFilePath">Xml文件的绝对路径</param>
        </member>
        <member name="M:Bigdesk8.Xml.XmlOperator.CreateXMLElement">
            <summary>
            创建XML的根节点
            </summary>
        </member>
        <member name="M:Bigdesk8.Xml.XmlOperator.GetNode(System.String)">
            <summary>
            获取指定XPath表达式的节点对象
            </summary>        
            <param name="xPath">XPath表达式,
            范例1: @"Skill/First/SkillItem", 等效于 @"//Skill/First/SkillItem"
            范例2: @"Table[USERNAME='a']" , []表示筛选,USERNAME是Table下的一个子节点.
            范例3: @"ApplyPost/Item[@itemName='岗位编号']",@itemName是Item节点的属性.
            </param>
        </member>
        <member name="M:Bigdesk8.Xml.XmlOperator.GetValue(System.String)">
            <summary>
            获取指定XPath表达式节点的值
            </summary>
            <param name="xPath">XPath表达式,
            范例1: @"Skill/First/SkillItem", 等效于 @"//Skill/First/SkillItem"
            范例2: @"Table[USERNAME='a']" , []表示筛选,USERNAME是Table下的一个子节点.
            范例3: @"ApplyPost/Item[@itemName='岗位编号']",@itemName是Item节点的属性.
            </param>
        </member>
        <member name="M:Bigdesk8.Xml.XmlOperator.GetAttributeValue(System.String,System.String)">
            <summary>
            获取指定XPath表达式节点的属性值
            </summary>
            <param name="xPath">XPath表达式,
            范例1: @"Skill/First/SkillItem", 等效于 @"//Skill/First/SkillItem"
            范例2: @"Table[USERNAME='a']" , []表示筛选,USERNAME是Table下的一个子节点.
            范例3: @"ApplyPost/Item[@itemName='岗位编号']",@itemName是Item节点的属性.
            </param>
            <param name="attributeName">属性名</param>
        </member>
        <member name="M:Bigdesk8.Xml.XmlOperator.AppendNode(System.Xml.XmlNode)">
            <summary>
            1. 功能：新增节点。
            2. 使用条件：将任意节点插入到当前Xml文件中。
            </summary>        
            <param name="xmlNode">要插入的Xml节点</param>
        </member>
        <member name="M:Bigdesk8.Xml.XmlOperator.AppendNode(System.Data.DataSet)">
            <summary>
            1. 功能：新增节点。
            2. 使用条件：将DataSet中的第一条记录插入Xml文件中。
            </summary>        
            <param name="ds">DataSet的实例，该DataSet中应该只有一条记录</param>
        </member>
        <member name="M:Bigdesk8.Xml.XmlOperator.RemoveNode(System.String)">
            <summary>
            删除指定XPath表达式的节点
            </summary>        
            <param name="xPath">XPath表达式,
            范例1: @"Skill/First/SkillItem", 等效于 @"//Skill/First/SkillItem"
            范例2: @"Table[USERNAME='a']" , []表示筛选,USERNAME是Table下的一个子节点.
            范例3: @"ApplyPost/Item[@itemName='岗位编号']",@itemName是Item节点的属性.
            </param>
        </member>
        <member name="M:Bigdesk8.Xml.XmlOperator.Save">
            <summary>
            保存XML文件
            </summary>        
        </member>
        <member name="M:Bigdesk8.Xml.XmlOperator.CreateRootElement(System.String)">
            <summary>
            创建根节点对象
            </summary>
            <param name="xmlFilePath">Xml文件的绝对路径</param>        
        </member>
        <member name="M:Bigdesk8.Xml.XmlOperator.GetValue(System.String,System.String)">
            <summary>
            获取指定XPath表达式节点的值
            </summary>
            <param name="xmlFilePath">Xml文件的绝对路径</param>
            <param name="xPath">XPath表达式,
            范例1: @"Skill/First/SkillItem", 等效于 @"//Skill/First/SkillItem"
            范例2: @"Table[USERNAME='a']" , []表示筛选,USERNAME是Table下的一个子节点.
            范例3: @"ApplyPost/Item[@itemName='岗位编号']",@itemName是Item节点的属性.
            </param>
        </member>
        <member name="M:Bigdesk8.Xml.XmlOperator.GetAttributeValue(System.String,System.String,System.String)">
            <summary>
            获取指定XPath表达式节点的属性值
            </summary>
            <param name="xmlFilePath">Xml文件的绝对路径</param>
            <param name="xPath">XPath表达式,
            范例1: @"Skill/First/SkillItem", 等效于 @"//Skill/First/SkillItem"
            范例2: @"Table[USERNAME='a']" , []表示筛选,USERNAME是Table下的一个子节点.
            范例3: @"ApplyPost/Item[@itemName='岗位编号']",@itemName是Item节点的属性.
            </param>
            <param name="attributeName">属性名</param>
        </member>
        <member name="T:Bigdesk8.Windows.Controls.DBMemoBox">
            <summary>
            多行文本框控件，通常数据长度大于300字
            </summary>
        </member>
        <member name="M:Bigdesk8.Windows.Controls.DBMemoBox.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:Bigdesk8.Windows.Controls.DBMemoBox._ErrorMessage">
            <summary>
            错误信息，如果不为String.Empty,则有错误
            </summary>
        </member>
        <member name="M:Bigdesk8.Windows.Controls.DBMemoBox.ItemCheck">
            <summary>
            检查类型是否匹配，长度是否超长，必填项是否已填，取值范围是否正确等等.....
            </summary>
            <returns>检查成功返回true,不成功返回false</returns>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBMemoBox.ItemName">
            <summary>
            数据项名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBMemoBox.ItemNameCN">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBMemoBox.ItemIsRequired">
            <summary>
            是否为必填项
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBMemoBox.ItemDefaultData">
            <summary>
            默认数据，默认值为string.Empty
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBMemoBox.MinLength">
            <summary>
            获取或设置文本框中最少的字符数。如果为0，则不检查长度。默认值为 0。
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBMemoBox.MaxLength">
            <summary>
            获取或设置文本框中最多允许的字符数。如果为0，则不检查长度。默认值为 0。
            </summary>
        </member>
        <member name="T:Bigdesk8.Web.Controls.TextControl">
            <summary>
            普通文本格式控件
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.TextControl.#ctor">
            <summary>
            初始化表示 Span HTML 标记的 <see cref="T:Bigdesk8.Web.Controls.TextControl"/> 类的新实例。
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.TextControl.#ctor(System.Web.UI.HtmlTextWriterTag)">
            <summary>
            初始化表示 Span HTML 标记的 <see cref="T:Bigdesk8.Web.Controls.TextControl"/> 类的新实例。
            </summary>
            <param name="tag"><see cref="T:System.Web.UI.HtmlTextWriterTag"/> 值之一。</param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.TextControl.#ctor(System.String)">
            <summary>
            初始化表示 Span HTML 标记的 <see cref="T:Bigdesk8.Web.Controls.TextControl"/> 类的新实例。
            </summary>
            <param name="tag">HTML 标记</param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.TextControl.AddParsedSubObject(System.Object)">
            <summary>
            通知控件某元素已经过分析，并将该元素添加到 <see cref="T:Bigdesk8.Web.Controls.TextControl"/> 控件。
            </summary>
            <param name="obj">表示已分析元素的对象。</param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.TextControl.LoadViewState(System.Object)">
            <summary>
            加载以前保存的控件的状态。
            </summary>
            <param name="savedState">包含控件的保存的视图状态值的对象。</param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.TextControl.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            将 <see cref="T:Bigdesk8.Web.Controls.TextControl"/> 的内容呈现到指定的编写器中。
            </summary>
            <param name="writer">向客户端呈现 HTML 内容的输出流。</param>
        </member>
        <member name="P:Bigdesk8.Web.Controls.TextControl.Text">
            <summary>
            获取或设置 <see cref="T:Bigdesk8.Web.Controls.TextControl"/> 控件的文本内容。返回控件的文本内容。默认值为 String.Empty。
            </summary>
        </member>
        <member name="T:Bigdesk8.Web.Controls.PowerDataPager">
            <summary>
            <see cref="T:Bigdesk8.Web.Controls.PowerDataPager"/> 数据分页控件
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.PowerDataPager.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.PowerDataPager.CreateChildControls">
            <summary>
            由 ASP.NET 页面框架调用，以通知使用基于合成的实现的服务器控件创建它们包含的任何子控件，以便为回发或呈现做准备。
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.PowerDataPager.OnPreRender(System.EventArgs)">
            <summary>
            在加载 Control 对象之后、呈现之前发生。
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.PowerDataPager.OnPageIndexChanged(System.EventArgs)">
            <summary>
            引发 <see cref="E:Bigdesk8.Web.Controls.PowerDataPager.PageIndexChanged"/> 事件
            </summary>
            <param name="e">事件数据</param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.PowerDataPager.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)">
            <summary>
            引发 <see cref="E:Bigdesk8.Web.Controls.PowerDataPager.PageIndexChanging"/> 事件
            </summary>
            <param name="e">事件数据</param>
        </member>
        <member name="P:Bigdesk8.Web.Controls.PowerDataPager.PagedData">
            <summary>
            分页数据
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.PowerDataPager.PageSize">
            <summary>
            每页显示记录数
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.PowerDataPager.RecordCount">
            <summary>
            记录总数
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.PowerDataPager.PageIndex">
            <summary>
            当前页索引
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.PowerDataPager.PagerSettings">
            <summary>
            页导航属性
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.PowerDataPager.PagerStyle">
            <summary>
            获取或设置页导航行的外观。
            </summary>
        </member>
        <member name="E:Bigdesk8.Web.Controls.PowerDataPager.PageIndexChanged">
            <summary>
            在单击某一页导航按钮时，但在控件处理分页操作之后发生。
            </summary>
        </member>
        <member name="E:Bigdesk8.Web.Controls.PowerDataPager.PageIndexChanging">
            <summary>
            在单击某一页导航按钮时，但在控件处理分页操作之前发生。
            </summary>
        </member>
        <member name="T:Bigdesk8.Web.Controls.DBText">
            <summary>
            普通文本格式，换行符不做特殊处理
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBText.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            将 <see cref="T:Bigdesk8.Web.Controls.DBMemo"/> 的内容呈现到指定的编写器中。
            </summary>
            <param name="writer">向客户端呈现 HTML 内容的输出流。</param> 
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBText.ItemName">
            <summary>
            数据项名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBText.ItemType">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBText.ItemFormat">
            <summary>
            显示格式，注意：与数据类型有关系。格式字符串，如yyyy-MM-dd HH:mm:ss,标准数字格式字符串,日期和时间格式字符串
            </summary>
        </member>
        <member name="T:Bigdesk8.Data.OleDbOperator">
            <summary>
            OleDb 数据库访问类	
            </summary>
        </member>
        <member name="T:Bigdesk8.Data.DBOperator">
            <summary>
            通用数据库访问抽象类
            <![CDATA[
            
            客户端代码示例：
            
            ConnectionStringSettings connectionStringSettings = new ConnectionStringSettings();
            connectionStringSettings.ProviderName = "sqlserver2005";
            connectionStringSettings.ConnectionString = "Provider=SQLOLEDB;Data Source=(local);Integrated Security=SSPI";
            
            DBOperator db = DBOperatorFactory.GetDBOperator(connectionStringSettings);
            db.BeginTransaction();
            try
            {
                string sql1 = string.Empty;
                SqlParameterCollection spc1 = db.CreateSqlParameterCollection();
                spc1.Add("parameterName1", 1);
                spc1.Add("parameterName2", 2);
                spc1.Add("parameterName3", 2);
                db.ExecuteNonQuerySql(sql1, spc1);
            
                string sql2 = string.Empty;
                SqlParameterCollection spc2 = db.CreateSqlParameterCollection();
                spc2.Add("parameterName1", "a");
                spc2.Add("parameterName4", "b");
                spc2.Add("parameterName5", "c");
                DataTable dataTable = new DataTable();
                db.Update(sql2, spc2, dataTable);
            
                db.CommitTransaction();
            }
            catch (Exception ex)
            {
                db.RollbackTransaction();
            
                throw ex;
             }
             
            ]]>
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.#ctor(System.Configuration.ConnectionStringSettings)">
            <summary>
            构造函数
            </summary>
            <param name="connectionStringSetting">连接字符串</param>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.CreateSqlParameterCollection">
            <summary>
            SQL 参数集合
            </summary>
            <returns>一个 <see cref="T:Bigdesk8.Data.SqlParameterCollection"/> 对象。</returns>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.CreateDbParameter">
            <summary>
            创建 <see cref="T:System.Data.Common.DbParameter"/> 对象的新实例。
            </summary>
            <returns>一个 <see cref="T:System.Data.Common.DbParameter"/> 对象。</returns>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.BeginTransaction">
            <summary>
            开始数据库事务
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            以指定的隔离级别启动数据库事务。
            </summary>
            <param name="isolationLevel">指定事务的隔离级别。</param>
            <returns>表示新事务的对象。</returns>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.CommitTransaction">
            <summary>
            提交数据库事务
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.RollbackTransaction">
            <summary>
            回滚数据库事务
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.ExeSqlForDataTable(System.String,Bigdesk8.Data.SqlParameterCollection,System.String)">
            <summary>
            执行 SELECT SQL 语句，返回 DataTable
            </summary>
            <param name="selectSQL">执行的 Select SQL 语句</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <param name="dataTableName">数据表名，不必与数据库的一致</param>
            <returns>生成数据集</returns>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.ExeSqlForDataSet(System.String,Bigdesk8.Data.SqlParameterCollection,System.String)">
            <summary>
            执行 SELECT SQL 语句，返回 DataSet
            </summary>
            <param name="selectSQL">生成数据集的 Select SQL</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <param name="dataTableName">数据表名，不必与数据库的一致</param>
            <returns>生成数据集</returns>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.ExeSqlForDataSetWithMultiDataTable(System.String,Bigdesk8.Data.SqlParameterCollection)">
            <summary>
            执行 SELECT SQL 语句，返回 DataSet，其中可以同时包含多个DataTable
            </summary>
            <param name="selectSQL">生成数据集的 Select SQL</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <returns>生成数据集</returns>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.AddTableToDataSet(System.String,Bigdesk8.Data.SqlParameterCollection,System.String,System.Data.DataSet)">
            <summary>
            执行 SELECT SQL 语句，将新数据表加入到 DataSet 中.
            </summary>
            <param name="selectSQL">生成数据集的 Select SQL</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <param name="dataTableName">数据表名，不必与数据库中的一致</param>
            <param name="dataSet">目标数据集</param>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.ExeSqlForObject(System.String,Bigdesk8.Data.SqlParameterCollection)">
            <summary>
            执行 SELECT SQL 语句，得到一个 object 类型的值
            </summary>
            <param name="selectSQL">执行的 Select SQL 语句</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <returns>得到一个 object 类型的值</returns>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.ExeSqlForString(System.String,Bigdesk8.Data.SqlParameterCollection)">
            <summary>
            执行 SELECT SQL 语句，得到一个字符串值
            </summary>
            <param name="selectSQL">执行的 Select SQL 语句</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <returns>得到一个字符串值</returns>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.ExeSqlForStringArray(System.String,Bigdesk8.Data.SqlParameterCollection)">
            <summary>
            执行 SELECT SQL 语句，得到一个 string 类型的数组
            </summary>
            <param name="selectSQL">执行的 Select SQL 语句</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <returns>得到一个字符串数组</returns>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.ExeSqlForArrayList(System.String,Bigdesk8.Data.SqlParameterCollection)">
            <summary>
            执行 SELECT SQL 语句，得到一个 ArrayList 类型的数组
            </summary>
            <param name="selectSQL">执行的 Select SQL 语句</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <returns>得到一个 ArrayList</returns>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.ExecuteNonQuerySql(System.String,Bigdesk8.Data.SqlParameterCollection)">
            <summary>
            执行 INSERT/DELETE/UPDATE SQL 语句, 返回受影响的行数,当前为 SELECT SQL 语句时，返回 -1
            </summary>
            <param name="commandSQL">INSERT/DELETE/UPDATE SQL 语句</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <returns>返回受影响的行数</returns>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.ExecuteNonQuerySql2(System.String,Bigdesk8.Data.SqlParameterCollection)">
            <summary>
            注意，本函数不对commandSQL进行安全处理，以允许批量执行sql语句
            </summary>
            <param name="commandSQL"></param>
            <param name="sqlParameterCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.Update(System.String,Bigdesk8.Data.SqlParameterCollection,System.Data.DataTable)">
            <summary>
            更新数据表
            </summary>
            <param name="selectSQL">生成数据集的 SELECT SQL 语句</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <param name="dataTable">需要更新的数据集</param>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.Update(System.String,Bigdesk8.Data.SqlParameterCollection,System.Data.DataTable,System.Int32)">
            <summary>
            更新数据表
            </summary>
            <param name="selectSQL">生成数据集的 SELECT SQL 语句</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <param name="dataTable">需要更新的数据集</param>
            <param name="commandTimeout">数据库更新的超时时间,0或负数表示采用缺省设置,单位:秒</param>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.Update(System.String,Bigdesk8.Data.SqlParameterCollection,System.String,System.Data.DataSet)">
            <summary>
            更新数据集中的某数据表
            </summary>
            <param name="selectSQL">生成数据集的 SELECT SQL 语句</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <param name="dataTableName">数据表名，不必与数据库中的一致</param>
            <param name="dataSet">需要更新的数据集</param>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.Update(System.String,Bigdesk8.Data.SqlParameterCollection,System.String,System.Data.DataSet,System.Int32)">
            <summary>
            更新数据集中的某数据表
            </summary>
            <param name="selectSQL">生成数据集的 SELECT SQL 语句</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <param name="dataTableName">数据表名，不必与数据库中的一致</param>
            <param name="dataSet">需要更新的数据集</param>
            <param name="commandTimeout">数据库更新的超时时间,0或负数表示采用缺省设置</param>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.ExeSqlForDataTable(System.String,Bigdesk8.Data.SqlParameterCollection,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            执行 SELECT SQL 语句，分页提取数据，返回 DataTable
            </summary>
            <param name="selectSQL">执行的 Select SQL 语句，注意：不要带 order by 语句</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <param name="dataTableName">数据表名，不必与数据库的一致</param>
            <param name="orderby">排序字段，注意：不要带 order by 关键字，如: order1 desc,order2 asc</param>
            <param name="pageSize">每页最大记录数</param>
            <param name="pageIndex">提取第几页的数据，从 0 开始。</param>
            <returns>生成数据集</returns>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.ExeSqlForDataTable(System.String,Bigdesk8.Data.SqlParameterCollection,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            执行 SELECT SQL 语句，分页提取数据，返回 DataTable 和 allRecordCount
            </summary>
            <param name="selectSQL">执行的 Select SQL 语句，注意：不要带 order by 语句</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <param name="dataTableName">数据表名，不必与数据库的一致</param>
            <param name="orderby">排序字段，注意：不要带 order by 关键字，如: order1 desc,order2 asc</param>
            <param name="pageSize">每页最大记录数</param>
            <param name="pageIndex">提取第几页的数据，从 0 开始。</param>
            <param name="allRecordCount">所有符合条件的记录总数</param>
            <returns>生成数据集</returns>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.GetPagedQuerySQL(System.String,System.String,Bigdesk8.Data.PagedData)">
            <summary>
            SQL 分页查询 SQL 语句
            </summary>
            <param name="querySQL">SQL 语句，注意不带排序字段</param>
            <param name="orderby">排序字段，注意：不要带 order by 关键字，如: order1 desc,order2 asc</param>
            <param name="pageData">分页数据</param>
            <returns>返回整理过的分页 SQL 语句</returns>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.GetRowCountQuerySQL(System.String)">
            <summary>
            SQL 查询记录总数语句
            </summary>
            <param name="querySQL">SQL 语句，注意不带排序字段</param>
            <returns>返回记录总数 SQL 语句</returns>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.GetOrderbyDesc(System.String)">
            <summary>
            获得相反的排序字符串
            </summary>
            <param name="orderby">排序字符串</param>
            <returns>返回相反的排序字符串</returns>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.GetCurrentDateTime">
            <summary>
            返回数据库服务器端当前日期时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Data.DBOperator.GetDataReader(System.String,Bigdesk8.Data.SqlParameterCollection,System.Data.CommandBehavior)">
            <summary>
            返回一个DataReader，调用者自行负责转换成具体的DataReader
            </summary>
            <returns></returns>
        </member>
        <member name="P:Bigdesk8.Data.DBOperator.ConnectionStringSetting">
            <summary>
            数据库连接字符串设置
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.OleDbOperator._dbConnection">
            <summary>
            表示 OleDb 数据库的一个打开的连接
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.OleDbOperator._dbTransaction">
            <summary>
            SQL 事务
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.OleDbOperator._isTransacting">
            <summary>
            指示当前是否正处于事务中
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.OleDbOperator.#ctor(System.Configuration.ConnectionStringSettings)">
            <summary>
            构造函数
            </summary>
            <param name="connectionStringSetting">连接字符串</param>
        </member>
        <member name="M:Bigdesk8.Data.OleDbOperator.Open">
            <summary>
            打开数据库连接  
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.OleDbOperator.Close">
            <summary>
            关闭数据库连接
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.OleDbOperator.AddDbParameter(Bigdesk8.Data.SqlParameterCollection,System.Data.OleDb.OleDbParameterCollection)">
            <summary>
            将 <see cref="T:Bigdesk8.Data.SqlParameterCollection"/> 对象中的参数加入到 <see cref="T:Bigdesk8.Data.OleDbParameterCollection"/> 对象中。
            </summary>
            <param name="sqlParameterCollection"><see cref="T:Bigdesk8.Data.SqlParameterCollection"/> 对象</param>
            <param name="oleDbParameterCollection"><see cref="T:Bigdesk8.Data.OleDbParameterCollection"/> 对象</param>
        </member>
        <member name="M:Bigdesk8.Data.OleDbOperator.CreateSqlParameterCollection">
            <summary>
            SQL 参数集合
            </summary>
            <returns>一个 <see cref="T:Bigdesk8.Data.SqlParameterCollection"/> 对象。</returns>
        </member>
        <member name="M:Bigdesk8.Data.OleDbOperator.CreateDbParameter">
            <summary>
            创建 <see cref="T:System.Data.Common.DbParameter"/> 对象的新实例。
            </summary>
            <returns>一个 <see cref="T:System.Data.Common.DbParameter"/> 对象。</returns>
        </member>
        <member name="M:Bigdesk8.Data.OleDbOperator.BeginTransaction">
            <summary>
            开始数据库事务
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.OleDbOperator.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            以指定的隔离级别启动数据库事务。
            </summary>
            <param name="isolationLevel">指定事务的隔离级别。</param>
            <returns>表示新事务的对象。</returns>
        </member>
        <member name="M:Bigdesk8.Data.OleDbOperator.CommitTransaction">
            <summary>
            提交数据库事务
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.OleDbOperator.RollbackTransaction">
            <summary>
            回滚数据库事务
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.OleDbOperator.ExeSqlForDataTable(System.String,Bigdesk8.Data.SqlParameterCollection,System.String)">
            <summary>
            执行 SELECT SQL 语句，返回 DataTable
            </summary>
            <param name="selectSQL">执行的 Select SQL 语句</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <param name="dataTableName">数据表名，不必与数据库的一致</param>
            <returns>生成数据集</returns>
        </member>
        <member name="M:Bigdesk8.Data.OleDbOperator.ExeSqlForDataSet(System.String,Bigdesk8.Data.SqlParameterCollection,System.String)">
            <summary>
            执行 SELECT SQL 语句，返回 DataSet
            </summary>
            <param name="selectSQL">生成数据集的 Select SQL</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <param name="dataTableName">数据表名，不必与数据库的一致</param>
            <returns>生成数据集</returns>
        </member>
        <member name="M:Bigdesk8.Data.OleDbOperator.ExeSqlForDataSetWithMultiDataTable(System.String,Bigdesk8.Data.SqlParameterCollection)">
            <summary>
            执行 SELECT SQL 语句，返回 DataSet，其中可以同时包含多个DataTable
            </summary>
            <param name="selectSQL">生成数据集的 Select SQL</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <returns>生成数据集</returns>
        </member>
        <member name="M:Bigdesk8.Data.OleDbOperator.AddTableToDataSet(System.String,Bigdesk8.Data.SqlParameterCollection,System.String,System.Data.DataSet)">
            <summary>
            执行 SELECT SQL 语句，将新数据表加入到 DataSet 中.
            </summary>
            <param name="selectSQL">生成数据集的 Select SQL</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <param name="dataTableName">数据表名，不必与数据库中的一致</param>
            <param name="dataSet">目标数据集</param>
        </member>
        <member name="M:Bigdesk8.Data.OleDbOperator.ExecuteNonQuerySql(System.String,Bigdesk8.Data.SqlParameterCollection)">
            <summary>
            执行 INSERT/DELETE/UPDATE SQL 语句, 返回受影响的行数,当前为 SELECT SQL 语句时，返回 -1
            </summary>
            <param name="commandSQL">INSERT/DELETE/UPDATE SQL 语句</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <returns>返回受影响的行数</returns>
        </member>
        <member name="M:Bigdesk8.Data.OleDbOperator.ExecuteNonQuerySql2(System.String,Bigdesk8.Data.SqlParameterCollection)">
            <summary>
            注意，本函数不对commandSQL进行安全处理，以允许批量执行sql语句
            </summary>
            <param name="commandSQL"></param>
            <param name="sqlParameterCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Data.OleDbOperator.Update(System.String,Bigdesk8.Data.SqlParameterCollection,System.Data.DataTable,System.Int32)">
            <summary>
            更新数据表
            </summary>
            <param name="selectSQL">生成数据集的 SELECT SQL 语句</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <param name="dataTable">需要更新的数据集</param>
            <param name="commandTimeout">数据库更新的超时时间,0或负数表示采用缺省设置</param>
        </member>
        <member name="M:Bigdesk8.Data.OleDbOperator.Update(System.String,Bigdesk8.Data.SqlParameterCollection,System.String,System.Data.DataSet,System.Int32)">
            <summary>
            更新数据集中的某数据表
            </summary>
            <param name="selectSQL">生成数据集的 SELECT SQL 语句</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <param name="dataTableName">数据表名，不必与数据库中的一致</param>
            <param name="dataSet">需要更新的数据集</param>
            <param name="commandTimeout">数据库更新的超时时间,0或负数表示采用缺省设置</param>
        </member>
        <member name="M:Bigdesk8.Data.OleDbOperator.GetCurrentDateTime">
            <summary>
            返回数据库服务器端当前日期时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Data.OleDbOperator.GetDataReader(System.String,Bigdesk8.Data.SqlParameterCollection,System.Data.CommandBehavior)">
            <summary>
            未实现
            </summary>
            <returns></returns>
        </member>
        <member name="T:Bigdesk8.Data.DataUtility">
            <summary>
            数据处理功能函数
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.DataUtility.PreErrorMessage">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.DataUtility.GetErrorMessage_DataRequired(System.String)">
            <summary>
            必填项错误时的提示信息
            </summary>
            <param name="itemNameCN">必填项名称</param>
            <returns>提示信息</returns>
        </member>
        <member name="M:Bigdesk8.Data.DataUtility.GetErrorMessage_DataLengthRange(System.String,Bigdesk8.Data.DataType,System.Int32,System.Int32)">
            <summary>
            数据长度范围错误时的提示信息
            </summary>
            <param name="itemNameCN">必填项名称</param>
            <param name="dataType">数据类型</param>
            <param name="minLength">最小长度</param>
            <param name="maxLength">最大长度</param>
            <returns>提示信息</returns>
        </member>
        <member name="M:Bigdesk8.Data.DataUtility.GetErrorMessage_DataType(System.String,Bigdesk8.Data.DataType)">
            <summary>
            数据类型错误时的提示信息
            </summary>
            <param name="itemNameCN">必填项名称</param>
            <param name="dataType">数据类型</param>
            <returns>提示信息</returns>
        </member>
        <member name="M:Bigdesk8.Data.DataUtility.GetErrorMessage_DataFormat(System.String,Bigdesk8.Data.DataType,System.String)">
            <summary>
            数据格式错误时的提示信息
            </summary>
            <param name="itemNameCN">必填项名称</param>
            <param name="dataType">数据类型</param>
            <param name="format">数据格式</param>
            <returns>提示信息</returns>
        </member>
        <member name="M:Bigdesk8.Data.DataUtility.GetErrorMessage_DataRange(System.String,Bigdesk8.Data.DataType,System.Object,System.Object)">
            <summary>
            数据取值范围错误时的提示信息
            </summary>
            <param name="itemNameCN">必填项名称</param>
            <param name="dataType">数据类型</param>
            <param name="minData">最小值</param>
            <param name="maxData">最大值</param>
            <returns>提示信息</returns>
        </member>
        <member name="M:Bigdesk8.Data.DataUtility.ExistsDataItem(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.String)">
            <summary>
            判断集合中数据项是否已经存在
            </summary>
            <param name="dataitem">集合</param>
            <param name="itemname">数据项名称</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Data.DataUtility.GetDataItem(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.String)">
            <summary>
            获得匹配的数据项，存在返回数据项，不存在时返回null
            </summary>
            <param name="dataitem">集合</param>
            <param name="itemname">数据项名称</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Data.DataUtility.FindAllByItemName(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.Text.RegularExpressions.Regex)">
            <summary>
            搜索所有的名称(itemname)--区分大小写--符合正则表达式要求的dataitem
            </summary>
            <param name="dataItemList">集合</param>
            <param name="condition">搜索条件</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Data.DataUtility.CheckDataType(System.Object,Bigdesk8.Data.DataType)">
            <summary>
            根据数据类型进行相应的数据转换.如果转换失败，返回值为false;如果成功,true
            </summary>
            <param name="data">数据</param>
            <param name="datatype">数据类型</param>
            <returns>如果转换失败，返回值为false;如果成功,true</returns>
        </member>
        <member name="M:Bigdesk8.Data.DataUtility.FormatData(System.Object,Bigdesk8.Data.DataType,System.String)">
            <summary>
            根据数据格式进行相应的格式化.如果格式化失败，返回值为string.Empty;如果成功,返回格式化的结果
            </summary>
            <param name="data">数据</param>
            <param name="datatype">数据类型</param>
            <param name="format">格式</param>
            <returns>如果格式化失败，返回值为string.Empty;如果成功,返回格式化的结果</returns>
        </member>
        <member name="M:Bigdesk8.Data.DataUtility.CheckDataRange(System.Object,Bigdesk8.Data.DataType,System.Object,System.Object)">
            <summary>
            检查数据取值范围
            </summary>
            <param name="data">数据</param>
            <param name="datatype">数据类型</param>
            <param name="minData">最小值</param>
            <param name="maxData">最大值</param>
            <returns>数据在取值范围内，返回true</returns>
        </member>
        <member name="M:Bigdesk8.Data.DataUtility.ToDataItem(System.Data.DataRow)">
            <summary>
            将 DataRow 转换成 IDataItem
            </summary>
            <param name="datarow"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Data.DataUtility.DataRowToDataItem(System.Data.DataRow)">
            <summary>
            将 DataRow 转换成 DataItem 集合
            </summary>
            <param name="datarow"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Data.DataUtility.ToDataRow(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.Data.DataRow)">
            <summary>
            将 IDataItem 转换成 DataRow
            </summary>
            <param name="dataitem"></param>
            <param name="datarow"></param>
        </member>
        <member name="M:Bigdesk8.Data.DataUtility.ToDataRow(System.Collections.Generic.List{Bigdesk8.Data.DataItem},System.Data.DataRow)">
            <summary>
            将 DataItem 集合 转换成 DataRow
            </summary>
            <param name="listDataItem"></param>
            <param name="datarow"></param>
        </member>
        <member name="M:Bigdesk8.Data.DataUtility.ToDataRow(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.Data.DataRow,System.Boolean)">
            <summary>
            将 IDataItem 转换成 DataRow
            </summary>
            <param name="dataitem"></param>
            <param name="datarow"></param>
            <param name="isEmptyItemToNullColumn">是否将ItemData=""转化为相应的Null字段</param>
        </member>
        <member name="M:Bigdesk8.Data.DataUtility.ToDataItem``1(``0)">
            <summary>
            将 Object 转换成 IDataItem，注意：只读写公共属性
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="obj">对象</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Data.DataUtility.ToObject``1(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},``0)">
            <summary>
            将 IDataItem 转换成 Object，注意：只读写公共属性
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="dataitem">数据集合</param>
            <param name="obj">对象</param>
        </member>
        <member name="M:Bigdesk8.Data.DataUtility.ObjectToDataRow``1(``0,System.Data.DataRow)">
            <summary>
            将 Object 转换成 DataRow，注意：只读写公共属性
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="datarow">数据行</param>
            <param name="obj">对象</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Data.DataUtility.DataRowToObject``1(System.Data.DataRow,``0)">
            <summary>
            将 DataRow 转换成 Object，注意：只读写公共属性
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="datarow">数据行</param>
            <param name="obj">对象</param>
        </member>
        <member name="M:Bigdesk8.Data.DataUtility.ToDataRow(System.Data.DataRow,System.Data.DataRow)">
            <summary>
            从 from 拷贝 到 to 中，规则：列名相同
            </summary>
            <param name="from">从 <see cref="T:System.Data.DataRow"/></param>
            <param name="to">拷贝到 <see cref="T:System.Data.DataRow"/></param>
        </member>
        <member name="M:Bigdesk8.Data.DataUtility.GetSearchClause(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},Bigdesk8.Data.SqlParameterCollection,System.String@)">
            <summary>
            将 IDataItem 转换成 查询条件 SQL + SqlParameterCollection
            </summary>
            <param name="dataitem">数据项集合</param>
            <param name="spc">返回 SQL 参数的集合</param>
            <param name="searchSQL">返回查询条件 SQL 语句</param>
        </member>
        <member name="M:Bigdesk8.Data.DataUtility.GetSearchClause(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},Bigdesk8.Data.SqlParameterCollection,System.String@,System.Boolean,System.Boolean)">
            <summary>
            将 IDataItem 转换成 查询条件 SQL + SqlParameterCollection
            </summary>
            <param name="dataitem">数据项集合</param>
            <param name="spc">返回 SQL 参数的集合</param>
            <param name="searchSQL">返回查询条件 SQL 语句</param>
            <param name="isAndRelation">dataitem与dataitem之间是否是And关系.true表示And关系,false表示Or关系.</param>
            <param name="isAndRelation2">dataitem集合与其它集合之间是否是And关系.true表示And关系,false表示Or关系.</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Data.DataUtility.GetDataTable``1(System.Collections.Generic.IList{``0})">
            <summary> 
            Converts a Generic List into a DataTable 
            </summary> 
            <typeparam name="T"></typeparam>
            <param name="list"></param> 
            <returns></returns> 
        </member>
        <member name="T:Bigdesk8.Ext.ExcelHelper">
            <summary>
            该类专门用于解析Excel文件，提供对Excel的读取功能
            </summary>
        </member>
        <member name="M:Bigdesk8.Ext.ExcelHelper.#ctor(System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            构造函数，实例化类时初始化对象的成员变量
            </summary>
            <param name="fileName"></param>
            <param name="columnIndex"></param>
            <param name="columnCount"></param>
        </member>
        <member name="F:Bigdesk8.Ext.ExcelHelper.fileName">
            <summary>
            要读取的Excel文件名,完整的文件名称
            </summary>
        </member>
        <member name="F:Bigdesk8.Ext.ExcelHelper.dataCols">
            <summary>
            要读取的文件的数据列数
            </summary>
        </member>
        <member name="F:Bigdesk8.Ext.ExcelHelper.dataColsIndex">
            <summary>
            开始读取的数据列的开始列的索引，从"1"开始
            </summary>
        </member>
        <member name="F:Bigdesk8.Ext.ExcelHelper.app">
            <summary>
            office对象句柄
            </summary>
        </member>
        <member name="M:Bigdesk8.Ext.ExcelHelper.ParseExcel">
            <summary>
            将从指定Excel文件读取到的数据放到List数组中
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Ext.ExcelHelper.GetRowContent(System.Int32,System.Int32,System.Int32)">
            <summary>
            读取指定Excel表中指定行中指定开始列与列数的数据
            </summary>
        </member>
        <member name="M:Bigdesk8.Ext.ExcelHelper.GetWorksheet">
            <summary>
            根据指定的表单名称，取得对应表单对象;
            若未指定表单名称，则缺省只解析第一个表单;
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Ext.ExcelHelper.ReleaseRescorce">
            <summary>
            释放COM组件所占用的资源
            </summary>
        </member>
        <member name="P:Bigdesk8.Ext.ExcelHelper.FileName">
            <summary>
            要读的Excel文件名
            </summary>
        </member>
        <member name="P:Bigdesk8.Ext.ExcelHelper.DataCols">
            <summary>
            要读取的表单的列数
            </summary>
        </member>
        <member name="P:Bigdesk8.Ext.ExcelHelper.DataColsIndex">
            <summary>
            表单开始读的列的索引
            </summary>
        </member>
        <member name="P:Bigdesk8.Ext.ExcelHelper.DataRowsIndex">
            <summary>
            要读表单的行的起始索引
            </summary>
        </member>
        <member name="P:Bigdesk8.Ext.ExcelHelper.SheetName">
            <summary>
            对于本Excel文档，待解析的sheet名称，若为空，则缺省的只解析第一个表单的内容
            </summary>
        </member>
        <member name="T:Bigdesk8.Data.OracleOperator">
            <summary>
            Oracle 数据库访问类	
            </summary>
            基于微软的OracleClient实现，虽然在.net framework4.0中，微软不再对OracleClient提供更新支持(仍能继续使用),
            但因目前（2012-3-5）OracleClient安装使用方便(直接集成在.net framework中)，
            故仍采用基于OracleClient的实现。缪卫华
        </member>
        <member name="F:Bigdesk8.Data.OracleOperator._dbConnection">
            <summary>
            表示 Oracle 数据库的一个打开的连接
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.OracleOperator._dbTransaction">
            <summary>
            SQL 事务
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.OracleOperator._isTransacting">
            <summary>
            指示当前是否正处于事务中
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.OracleOperator.#ctor(System.Configuration.ConnectionStringSettings)">
            <summary>
            构造函数
            </summary>
            <param name="connectionStringSetting">连接字符串</param>
        </member>
        <member name="M:Bigdesk8.Data.OracleOperator.Open">
            <summary>
            打开数据库连接  
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.OracleOperator.Close">
            <summary>
            关闭数据库连接
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.OracleOperator.AddDbParameter(Bigdesk8.Data.SqlParameterCollection,System.Data.OracleClient.OracleParameterCollection)">
            <summary>
            将 <see cref="T:Bigdesk8.Data.SqlParameterCollection"/> 对象中的参数加入到 <see cref="T:Bigdesk8.Data.OracleParameterCollection"/> 对象中。
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.OracleOperator.CreateSqlParameterCollection">
            <summary>
            SQL 参数集合
            </summary>
            <returns>一个 <see cref="T:Bigdesk8.Data.SqlParameterCollection"/> 对象。</returns>
        </member>
        <member name="M:Bigdesk8.Data.OracleOperator.CreateDbParameter">
            <summary>
            创建 <see cref="T:System.Data.Common.DbParameter"/> 对象的新实例。
            </summary>
            <returns>一个 <see cref="T:System.Data.Common.DbParameter"/> 对象。</returns>
        </member>
        <member name="M:Bigdesk8.Data.OracleOperator.BeginTransaction">
            <summary>
            开始数据库事务
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.OracleOperator.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            以指定的隔离级别启动数据库事务。
            </summary>
            <param name="isolationLevel">指定事务的隔离级别。</param>
            <returns>表示新事务的对象。</returns>
        </member>
        <member name="M:Bigdesk8.Data.OracleOperator.CommitTransaction">
            <summary>
            提交数据库事务
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.OracleOperator.RollbackTransaction">
            <summary>
            回滚数据库事务
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.OracleOperator.ExeSqlForDataTable(System.String,Bigdesk8.Data.SqlParameterCollection,System.String)">
            <summary>
            执行 SELECT SQL 语句，返回 DataTable
            </summary>
            <param name="selectSQL">执行的 Select SQL 语句</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <param name="dataTableName">数据表名，不必与数据库的一致</param>
            <returns>生成数据集</returns>
        </member>
        <member name="M:Bigdesk8.Data.OracleOperator.ExeSqlForDataSet(System.String,Bigdesk8.Data.SqlParameterCollection,System.String)">
            <summary>
            执行 SELECT SQL 语句，返回 DataSet
            </summary>
            <param name="selectSQL">生成数据集的 Select SQL</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <param name="dataTableName">数据表名，不必与数据库的一致</param>
            <returns>生成数据集</returns>
        </member>
        <member name="M:Bigdesk8.Data.OracleOperator.ExeSqlForDataSetWithMultiDataTable(System.String,Bigdesk8.Data.SqlParameterCollection)">
            <summary>
            执行 SELECT SQL 语句，返回 DataSet，其中可以同时包含多个DataTable
            </summary>
            <param name="selectSQL">生成数据集的 Select SQL</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <returns>生成数据集</returns>
        </member>
        <member name="M:Bigdesk8.Data.OracleOperator.AddTableToDataSet(System.String,Bigdesk8.Data.SqlParameterCollection,System.String,System.Data.DataSet)">
            <summary>
            执行 SELECT SQL 语句，将新数据表加入到 DataSet 中.
            </summary>
            <param name="selectSQL">生成数据集的 Select SQL</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <param name="dataTableName">数据表名，不必与数据库中的一致</param>
            <param name="dataSet">目标数据集</param>
        </member>
        <member name="M:Bigdesk8.Data.OracleOperator.ExecuteNonQuerySql(System.String,Bigdesk8.Data.SqlParameterCollection)">
            <summary>
            执行 INSERT/DELETE/UPDATE SQL 语句, 返回受影响的行数,当前为 SELECT SQL 语句时，返回 -1
            </summary>
            <param name="commandSQL">INSERT/DELETE/UPDATE SQL 语句</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <returns>返回受影响的行数</returns>
        </member>
        <member name="M:Bigdesk8.Data.OracleOperator.ExecuteNonQuerySql2(System.String,Bigdesk8.Data.SqlParameterCollection)">
            <summary>
            注意，本函数不对commandSQL进行安全处理，以允许批量执行sql语句
            </summary>
            <param name="commandSQL"></param>
            <param name="sqlParameterCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Data.OracleOperator.Update(System.String,Bigdesk8.Data.SqlParameterCollection,System.Data.DataTable,System.Int32)">
            <summary>
            更新数据表
            </summary>
            <param name="selectSQL">生成数据集的 SELECT SQL 语句</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <param name="dataTable">需要更新的数据集</param>
            <param name="commandTimeout">数据库更新的超时时间,0或负数表示采用缺省设置</param>
        </member>
        <member name="M:Bigdesk8.Data.OracleOperator.Update(System.String,Bigdesk8.Data.SqlParameterCollection,System.String,System.Data.DataSet,System.Int32)">
            <summary>
            更新数据集中的某数据表
            </summary>
            <param name="selectSQL">生成数据集的 SELECT SQL 语句</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <param name="dataTableName">数据表名，不必与数据库中的一致</param>
            <param name="dataSet">需要更新的数据集</param>
            <param name="commandTimeout">数据库更新的超时时间,0或负数表示采用缺省设置</param>
        </member>
        <member name="M:Bigdesk8.Data.OracleOperator.GetCurrentDateTime">
            <summary>
            返回数据库服务器端当前日期时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Data.OracleOperator.GetDataReader(System.String,Bigdesk8.Data.SqlParameterCollection,System.Data.CommandBehavior)">
            <summary>
            未实现
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Data.OracleOperator.GetPagedQuerySQL(System.String,System.String,Bigdesk8.Data.PagedData)">
            <summary>
            SQL 分页查询 SQL 语句
            </summary>
            <param name="querySQL">SQL 语句，注意不带排序字段</param>
            <param name="orderby">排序字段，注意：不要带 order by 关键字，如: order1 desc,order2 asc</param>
            <param name="pageData">分页数据</param>
            <returns>返回整理过的分页 SQL 语句</returns>
        </member>
        <member name="M:Bigdesk8.Data.OracleOperator.GetRowCountQuerySQL(System.String)">
            <summary>
            SQL 查询记录总数语句
            </summary>
            <param name="querySQL">SQL 语句，注意不带排序字段</param>
            <returns>返回记录总数 SQL 语句</returns>
        </member>
        <member name="T:Bigdesk8.Business.UserRightManager.UserModel">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.UserModel.UserID">
            <summary>
            用户编号
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.UserModel.UserName">
            <summary>
            用户名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.UserModel.LoginName">
            <summary>
            登录名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.UserModel.LoginPassword">
            <summary>
            登录密码
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.UserModel.UserMobile">
            <summary>
            用户电话
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.UserModel.OrgName">
            <summary>
            所在单位
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.UserModel.UserType">
            <summary>
            用户类型
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.UserRightManager.RoleModel">
            <summary>
            角色信息
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.RoleModel.RoleID">
            <summary>
            角色编号
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.RoleModel.RoleName">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.RoleModel.RoleDesc">
            <summary>
            角色描述
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.RoleModel.Sort">
            <summary>
            排序
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.UserRightManager.SystemModel">
            <summary>
            系统信息
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.SystemModel.SystemID">
            <summary>
            系统编号
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.SystemModel.SystemName">
            <summary>
            系统名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.SystemModel.SystemDesc">
            <summary>
            系统描述
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.SystemModel.Sort">
            <summary>
            排序
            </summary>
        </member>
        <member name="T:Bigdesk8.Utilities">
            <summary>
            基本功能函数
            </summary>
        </member>
        <member name="M:Bigdesk8.Utilities.ToBase64String(System.Object)">
            <summary>
            将 UTF-8 字符串 进行 Base64 编码
            </summary>
            <param name="str">UTF-8 字符串</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.FromBase64String(System.Object)">
            <summary>
            将 UTF-8 字符串 进行 Base64 解码
            </summary>
            <param name="str">UTF-8 字符串</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToUnicodeString(System.Object)">
            <summary>
            将 UTF-8 字符串转换成十六进制数据编码，即转换成 Unicode 字符
            </summary>
            <param name="str">UTF-8 字符串</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.FromUnicodeString(System.Object)">
            <summary>
            将十六进制字符串(即 Unicode 字符)转换成 UTF-8 字符串
            </summary>
            <param name="str">十六进制字符串(即 Unicode 字符)</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToString(System.Object,System.String)">
            <summary>
            转换成 <see cref="T:System.String"/>，注意：null，DBNull，Trim()="" 将转换成 defaultData
            </summary>
            <param name="str"></param>
            <param name="defaultData"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToString2(System.Object)">
            <summary>
            转换成 <see cref="T:System.String"/>，注意：null,DBNull 将转换成 String.Empty
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.TrimString(System.Object)">
            <summary>
            去除字符串的前后字符，注意：null,DBNull 将转换成 String.Empty
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.LengthGB(System.Object)">
            <summary>
            获取字符串的长度（一个汉字长度为2）
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToInt32(System.Object)">
            <summary>
            转换成 <see cref="T:System.Int32"/>，转换失败将抛出异常
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToInt32(System.Object,System.Int32)">
            <summary>
            转换成 <see cref="T:System.Int32"/>，当前转换失败时返回指定的默认数据
            </summary>
            <param name="str"></param>
            <param name="defaultData"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToInt64(System.Object)">
            <summary>
            转换成 <see cref="T:System.Int64"/>，转换失败将抛出异常
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToInt64(System.Object,System.Int64)">
            <summary>
            转换成 <see cref="T:System.Int64"/>，当前转换失败时返回指定的默认数据
            </summary>
            <param name="str"></param>
            <param name="defaultData"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToByteString(System.Object)">
            <summary>
            将字节转成字符串
            </summary>
            <param name="int64"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToBoolean(System.Object)">
            <summary>
            转换成 <see cref="T:System.Boolean"/>，true,false,1,0，转换失败将抛出异常
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToBoolean(System.Object,System.Boolean)">
            <summary>
            转换成 <see cref="T:System.Boolean"/>，true,false,1,0，当前转换失败时返回指定的默认数据
            </summary>
            <param name="str"></param>
            <param name="defaultData"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToDouble(System.Object)">
            <summary>
            转换成 <see cref="T:System.Double"/>，转换失败将抛出异常
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToDouble(System.Object,System.Double)">
            <summary>
            转换成 <see cref="T:System.Double"/>，当前转换失败时返回指定的默认数据
            </summary>
            <param name="str"></param>
            <param name="defaultData"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToDecimal(System.Object)">
            <summary>
            转换成 <see cref="T:System.Decimal"/>，转换失败将抛出异常
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToDecimal(System.Object,System.Decimal)">
            <summary>
            转换成 <see cref="T:System.Decimal"/>，当前转换失败时返回指定的默认数据
            </summary>
            <param name="str"></param>
            <param name="defaultData"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToGuid(System.Object)">
            <summary>
            转换成 <see cref="T:System.Guid"/>，转换失败将抛出异常
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToGuid(System.Object,System.Guid)">
            <summary>
            转换成 <see cref="T:System.Guid"/>，当前转换失败时返回指定的默认数据
            </summary>
            <param name="str"></param>
            <param name="defaultData"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToDate(System.Object)">
            <summary>
            转换成 <see cref="T:System.DateTime"/>，只包含日期部分，时间部分固定为00:00:00，转换失败将抛出异常
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToDate(System.Object,System.DateTime)">
            <summary>
            转换成 <see cref="T:System.DateTime"/>，只包含日期部分，时间部分固定为00:00:00，当前转换失败时返回指定的默认数据
            </summary>
            <param name="str"></param>
            <param name="defaultData"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToDate2(System.Object)">
            <summary>
            将 DateTime 类型的字符串转换成 Date 类型的字符串，如：2010-01-01 10:10:00 转换成 2010-01-01
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToTime(System.Object)">
            <summary>
            转换成 <see cref="T:System.DateTime"/>，只包含时间部分，日期部分固定为2010-01-01，转换失败将抛出异常
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToTime(System.Object,System.DateTime)">
            <summary>
            转换成 <see cref="T:System.DateTime"/>，只包含时间部分，日期部分固定为2010-01-01，当前转换失败时返回指定的默认数据
            </summary>
            <param name="str"></param>
            <param name="defaultData"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToTime2(System.Object)">
            <summary>
            将 DateTime 或 Time 类型转换成 Time 类型的字符串，如：2010-01-01 10:10:00 转换成 10:10:00
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToTime2(System.Object,System.Boolean)">
            <summary>
            将 DateTime 或 Time 类型转换成 Time 类型的字符串，如：2010-01-01 10:10:00 转换成 10:10:00
            </summary>
            <param name="str"></param>
            <param name="isShowSecond"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToDateTime(System.Object)">
            <summary>
            转换成 <see cref="T:System.DateTime"/>，包含日期和时间两部分，转换失败将抛出异常
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToDateTime(System.Object,System.DateTime)">
            <summary>
            转换成 <see cref="T:System.DateTime"/>，包含日期和时间两部分，当前转换失败时返回指定的默认数据
            </summary>
            <param name="str"></param>
            <param name="defaultData"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToDateTime2(System.Object)">
            <summary>
            将 DateTime 类型的字符串转换成 DateTime 类型的字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ToDateTime2(System.Object,System.Boolean)">
            <summary>
            将 DateTime 类型的字符串转换成 DateTime 类型的字符串
            </summary>
            <param name="str"></param>
            <param name="isShowSecond"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.SplitToString(System.Object,System.String,System.StringSplitOptions)">
            <summary>
            返回的字符串数组包含此字符串中的子字符串（由指定字符串分隔）。参数指定是否返回空数组元素。
            </summary>
            <param name="str">数据类型为字符串</param>
            <param name="separator">分隔此字符串中子字符串的字符串</param>
            <param name="options">指定 RemoveEmptyEntries 以省略返回的数组中的空数组元素，或指定 None 以包含返回的数组中的空数组元素。</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.SplitToString(System.Object,System.String[],System.StringSplitOptions)">
            <summary>
            返回的字符串数组包含此字符串中的子字符串（由指定字符串数组的元素分隔）。参数指定是否返回空数组元素。
            </summary>
            <param name="str">数据类型为字符串</param>
            <param name="separator">分隔此字符串中子字符串的字符串数组、不包含分隔符的空数组或 null</param>
            <param name="options">指定 RemoveEmptyEntries 以省略返回的数组中的空数组元素，或指定 None 以包含返回的数组中的空数组元素。</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.SplitToInt32(System.Object,System.String,System.StringSplitOptions)">
            <summary>
            返回的整型数组包含此字符串中的子字符串（由指定字符串分隔）。参数指定是否返回空数组元素。
            </summary>
            <param name="str">数据类型为字符串</param>
            <param name="separator">分隔此字符串中子字符串的字符串</param>
            <param name="options">指定 RemoveEmptyEntries 以省略返回的数组中的空数组元素，或指定 None 以包含返回的数组中的空数组元素。</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.SplitToInt32(System.Object,System.String[],System.StringSplitOptions)">
            <summary>
            返回的整型数组包含此字符串中的子字符串（由指定字符串数组的元素分隔）。参数指定是否返回空数组元素。
            </summary>
            <param name="str">数据类型为字符串</param>
            <param name="separator">分隔此字符串中子字符串的字符串数组、不包含分隔符的空数组或 null</param>
            <param name="options">指定 RemoveEmptyEntries 以省略返回的数组中的空数组元素，或指定 None 以包含返回的数组中的空数组元素。</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.ArrayToString``1(``0[],System.String)">
            <summary>
            将数组转换成字符串
            </summary>
            <typeparam name="T">基本数据类型，如字符串，整型等</typeparam>
            <param name="array">数组</param>
            <param name="separator">分隔符</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.IsEmpty(System.Object)">
            <summary>
            判断字符串是否是空，（null，DBNull，Trim()=""，都被认为是空）
            </summary>
            <param name="str"></param>
            <returns>当为空时，返回true</returns>
        </member>
        <member name="M:Bigdesk8.Utilities.IsInt32(System.Object)">
            <summary>
            判断是否为Int32类型的数字
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.IsInt64(System.Object)">
            <summary>
            判断是否为Int64类型的数字
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.IsDouble(System.Object)">
            <summary>
            判断是否为Double类型的数字
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.IsDecimal(System.Object)">
            <summary>
            判断是否为Decimal类型的数字
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.IsDateTime(System.Object)">
            <summary>
            判断是否是日期时间格式，2010-01-01，2010-02-02 10:30:15
            </summary>
            <param name="str"></param>
            <returns>成功，返回true</returns>
        </member>
        <member name="M:Bigdesk8.Utilities.IsDate(System.Object)">
            <summary>
            判断是否是日期格式，2010-01-01
            </summary>
            <param name="str"></param>
            <returns>成功，返回true</returns>
        </member>
        <member name="M:Bigdesk8.Utilities.IsTime(System.Object)">
            <summary>
            判断是否是时间格式, 10:30:15
            </summary>
            <param name="str"></param>
            <returns>成功，返回true</returns>
        </member>
        <member name="M:Bigdesk8.Utilities.Equals2(System.Object,System.Object,System.Boolean)">
            <summary>
            判断两个指定的字符串是否相等
            </summary>
            <param name="strA">第一个字符串</param>
            <param name="strB">第二个字符串</param>
            <param name="ignoreCase">是否区分大小写。（true 表示不区分大小写。）</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.HasData(System.Data.DataSet)">
            <summary>
            DataSet是否有数据
            </summary>
        </member>
        <member name="M:Bigdesk8.Utilities.HasData(System.Data.DataTable)">
            <summary>
            DataTable是否有数据
            </summary>
        </member>
        <member name="M:Bigdesk8.Utilities.HasData(System.Data.DataRow)">
            <summary>
            DataRow是否有数据
            </summary>
        </member>
        <member name="M:Bigdesk8.Utilities.IsBase64String(System.Object)">
            <summary>
            判断是否为base64字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.IsGUID(System.Object)">
            <summary>
            判断是否是 Guid
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.IsNumber(System.Object)">
            <summary>
            判断是否是数字
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.IsSafeSqlString(System.Object)">
            <summary>
            检测是否有Sql危险字符
            </summary>
            <param name="str">要判断字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:Bigdesk8.Utilities.IsValidEmail(System.Object)">
            <summary>
            检测是否符合email格式
            </summary>
            <param name="strEmail">要判断的email字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:Bigdesk8.Utilities.IsValidDoEmail(System.Object)">
            <summary>
            检测是否符合email格式
            </summary>
            <param name="strEmail">要判断的email字符串</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:Bigdesk8.Utilities.IsValidName(System.Object)">
            <summary>
            验证姓名
            </summary>
            <param name="strName"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.IsValidCardNo(System.Object)">
            <summary>
            验证身份证号码
            </summary>
            <param name="strCardNo"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.IsURL(System.Object)">
            <summary>
            检测是否是正确的Url
            </summary>
            <param name="strUrl">要验证的Url</param>
            <returns>判断结果</returns>
        </member>
        <member name="M:Bigdesk8.Utilities.IsIP(System.Object)">
            <summary>
            是否为ip
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.IsIPSect(System.Object)">
            <summary>
            是否为ip
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.GetFunctionResultException(System.Exception)">
            <summary>
            获取返回结果异常
            </summary>
            <param name="exception">异常</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.GetFunctionResultException``1(System.Exception)">
            <summary>
            获取返回结果异常
            </summary>
            <param name="exception">异常</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Utilities.Replace(System.Object,System.Collections.Generic.Dictionary{System.String,System.String},System.Text.RegularExpressions.RegexOptions)">
            <summary>
            将一个字符串中的多个子字符串替换成新的多个子字符串
            </summary>
            <example>
            示例：
            key     value
            ab      11
            cd      22
            ef      33
            
            原始字符串：aabbccddeeff
            目标字符串：a11bc22de33f
            
            </example>
            <param name="str">要修改的字符串</param>
            <param name="old_new_Value">新旧字符串，key表示要替换的字符串，value表示要替换 key 的所有匹配项的字符串</param>
            <param name="options">枚举值的按位“或”组合</param>
            <returns>已修改的字符串。</returns>
        </member>
        <member name="T:Bigdesk8.CheckBoxValue">
            <summary>
            CheckBox 选中与不选中所代表的值
            </summary>
        </member>
        <member name="F:Bigdesk8.CheckBoxValue.XZ_1_BXZ_0">
            <summary>
            选中表示 1，不选中表示 0，默认情况
            </summary>
        </member>
        <member name="F:Bigdesk8.CheckBoxValue.XZ_1_BXZ_01">
            <summary>
            选中表示 1，不选中表示 0 和 1 两种情况		
            </summary>
        </member>
        <member name="F:Bigdesk8.CheckBoxValue.XZ_0_BXZ_O1">
            <summary>		
            选中表示 0，不选中表示 0 和 1 两种情况
            </summary>
        </member>
        <member name="F:Bigdesk8.CheckBoxValue.XZ_0_BXZ_1">
            <summary>
             选中表示 0 ，不选中表示 1
            </summary>
        </member>
        <member name="F:Bigdesk8.CheckBoxValue.XZ_01_BXZ_0">
            <summary>
            选中表示 0 和 1 两种情况,不选中表示 0
            </summary>
        </member>
        <member name="F:Bigdesk8.CheckBoxValue.XZ_O1_BXZ_1">
            <summary>
            选中表示 0 和 1 两种情况,不选中表示 1
            </summary>
        </member>
        <member name="T:Bigdesk8.UpperLowerCharCase">
            <summary>
            字符大写小写
            </summary>
        </member>
        <member name="F:Bigdesk8.UpperLowerCharCase.None">
            <summary>
            不设置选项
            </summary>
        </member>
        <member name="F:Bigdesk8.UpperLowerCharCase.ToUpper">
            <summary>
            将字符转换成大写字符
            </summary>
        </member>
        <member name="F:Bigdesk8.UpperLowerCharCase.ToLower">
            <summary>
            将字符转换成小写字符
            </summary>
        </member>
        <member name="T:Bigdesk8.FullHalfCharCase">
            <summary>
            字符全角半角
            </summary>
        </member>
        <member name="F:Bigdesk8.FullHalfCharCase.None">
            <summary>
            不设置选项
            </summary>
        </member>
        <member name="F:Bigdesk8.FullHalfCharCase.ToHalf">
            <summary>
            将字符转换成半角字符，包括数字、字母、小括号、大括号等
            </summary>
        </member>
        <member name="F:Bigdesk8.FullHalfCharCase.ToFull">
            <summary>
            将字符转换成全角字符，包括数字、字母、小括号、大括号等
            </summary>
        </member>
        <member name="T:Bigdesk8.Windows.Controls.UIUtility">
            <summary>
            UI 界面控件功能函数库
            </summary>
        </member>
        <member name="M:Bigdesk8.Windows.Controls.UIUtility.CheckControlValue(System.Windows.Forms.Control)">
            <summary>
            界面数据的检查(包括数据的类型,数据的长度,必填项的检查,取值范围检查),如果检查成功返回String.Empty，检查不成功返回错误信息
            </summary>
            <param name="control">控件或控件所在的父控件</param>
            <returns>如果检查成功返回String.Empty，检查不成功返回错误信息</returns>
        </member>
        <member name="M:Bigdesk8.Windows.Controls.UIUtility.GetControlValue(System.Windows.Forms.Control)">
            <summary>
            获得界面控件上的数据，并存放入 <see cref="T:Bigdesk8.Data.IDataItem"/> 集合中
            </summary>
            <param name="control">控件或控件所在的父控件</param>
        </member>
        <member name="M:Bigdesk8.Windows.Controls.UIUtility.GetControlValue(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            获得界面控件上的数据，并存放入 <see cref="T:Bigdesk8.Data.IDataItem"/> 集合中
            </summary>
            <param name="control">控件或控件所在的父控件</param>
            <param name="isRecursion">是否对子控件进行递归</param>
        </member>
        <member name="M:Bigdesk8.Windows.Controls.UIUtility.GetControlValue(System.Windows.Forms.Control,System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.Boolean,System.Boolean)">
            <summary>
            获得界面控件上的数据，并存放入 <see cref="T:Bigdesk8.Data.IDataItem"/> 集合中
            </summary>
            <param name="control">控件或控件所在的父控件</param>
            <param name="dataitem"><see cref="T:Bigdesk8.Data.IDataItem"/> 集合</param>
            <param name="overwrite">是否要覆盖现有数据</param>
            <param name="isRecursion">是否对子控件进行递归</param>
        </member>
        <member name="M:Bigdesk8.Windows.Controls.UIUtility.SetControlValue(System.Windows.Forms.Control,System.Collections.Generic.List{Bigdesk8.Data.IDataItem})">
            <summary>
            将 IDataItem 中的数据显示在界面控件上
            </summary>
            <param name="control">控件或控件所在的父控件</param>
            <param name="dataitem">所有数据项</param>
        </member>
        <member name="M:Bigdesk8.Windows.Controls.UIUtility.SetControlDefaultValue(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            将 IDataItem 中的默认数据显示在界面控件上
            </summary>
            <param name="control">控件或控件所在的父控件</param>
            <param name="overwrite">是否要覆盖现有数据</param>
        </member>
        <member name="M:Bigdesk8.Windows.Controls.UIUtility.ComboBoxDataBind(System.Windows.Forms.ComboBox,System.Data.DataTable,System.Boolean)">
            <summary>
            将 DataTable 填充到 ComboBox
            如果 DataTable 有两列，则第一列表示文本，第二列表示值.data 中的 DataRow 至少要有一个字段.
            </summary>
            <param name="comboBox">控件，</param>
            <param name="data">数据</param>
            <param name="isAddSpaceItem">是否要加入一个空项</param>
        </member>
        <member name="M:Bigdesk8.Windows.Controls.UIUtility.SetControlReadOnly(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            设置界面上控件的 Enabled=!isReadOnly 或者 ReadOnly=isReadOnly 或者 Disabled=isReadOnly
            </summary>
            <param name="control">控件或控件所在的父控件</param>
            <param name="isReadOnly">是否为只读</param>
        </member>
        <member name="T:Bigdesk8.Windows.Controls.DBDateTimePicker">
            <summary>
            日期控件
            </summary>
        </member>
        <member name="F:Bigdesk8.Windows.Controls.DBDateTimePicker._ErrorMessage">
            <summary>
            错误信息，如果不为String.Empty,则有错误
            </summary>
        </member>
        <member name="M:Bigdesk8.Windows.Controls.DBDateTimePicker.ItemCheck">
            <summary>
            检查类型是否匹配，长度是否超长，必填项是否已填，取值范围是否正确等等.....
            </summary>
            <returns>检查成功返回true,不成功返回false</returns>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBDateTimePicker.ItemName">
            <summary>
            数据项名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBDateTimePicker.ItemNameCN">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBDateTimePicker.ItemRelation">
            <summary>
            数据项与数据的关系
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBDateTimePicker.ItemIsRequired">
            <summary>
            是否为必填项
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBDateTimePicker.ItemDefaultData">
            <summary>
            默认数据，默认值为string.Empty
            </summary>
        </member>
        <member name="T:Bigdesk8.Web.ICacheStrategy">
            <summary>
            公共缓存策略接口
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.ICacheStrategy.AddObject(System.String,System.Object)">
            <summary>
            添加指定ID的对象
            </summary>
            <param name="objId"></param>
            <param name="o"></param>
        </member>
        <member name="M:Bigdesk8.Web.ICacheStrategy.AddObjectWithFileChange(System.String,System.Object,System.String[])">
            <summary>
            添加指定ID的对象(关联指定文件组)
            </summary>
            <param name="objId"></param>
            <param name="o"></param>
            <param name="files"></param>
        </member>
        <member name="M:Bigdesk8.Web.ICacheStrategy.AddObjectWithDepend(System.String,System.Object,System.String[])">
            <summary>
            添加指定ID的对象(关联指定键值组)
            </summary>
            <param name="objId"></param>
            <param name="o"></param>
            <param name="dependKey"></param>
        </member>
        <member name="M:Bigdesk8.Web.ICacheStrategy.RemoveObject(System.String)">
            <summary>
            移除指定ID的对象
            </summary>
            <param name="objId"></param>
        </member>
        <member name="M:Bigdesk8.Web.ICacheStrategy.RetrieveObject(System.String)">
            <summary>
            返回指定ID的对象
            </summary>
            <param name="objId"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Web.ICacheStrategy.Clear">
            <summary>
            移除所有的ID和对象
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.ICacheStrategy.GetObjIDs">
            <summary>
            获取所有的ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Web.ICacheStrategy.GetData">
            <summary>
            获取所有ID和对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:Bigdesk8.Web.ICacheStrategy.TimeOut">
            <summary>
            到期时间,单位：秒，当为0时，表示无限期
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.ICacheStrategy.Count">
            <summary>
            获取ID和对象的数目
            </summary>
        </member>
        <member name="T:Bigdesk8.Web.Controls.PowerDataGrid2">
            <summary>
            根据数据集判断记录总数，设置的 DataSource 值必须是所有查询的数据（包括当前页数据和非当前页数据）
            </summary>
        </member>
        <member name="T:Bigdesk8.Web.Controls.PowerDataGrid">
            <summary>
            <see cref="T:Bigdesk8.Web.Controls.PowerDataGrid"/> 对 <see cref="T:System.Web.UI.WebControls.GridView"/> 进行功能扩展，
            必须设置 RecordCount（记录总数），DataSource（当前页数据）。
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.PowerDataGrid.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.PowerDataGrid.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)">
            <summary>
            重写 <see cref="T:System.Web.UI.WebControls.GridView"/>.OnRowCreated 事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.PowerDataGrid.OnDataBound(System.EventArgs)">
            <summary>
            重写数据绑定
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.PowerDataGrid.FindDataControlField(System.String)">
            <summary>
            根据Column定义中的HeaderText属性查找索引最小的相符Column
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.PowerDataGrid.RecordCount">
            <summary>
            记录总数
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.PowerDataGrid.PageIndex">
            <summary>
            获取或设置当前显示页的索引。从 0 开始
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.PowerDataGrid.PageCount">
            <summary>
            页数
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.PowerDataGrid.IsOnePageShowPager">
            <summary>
            当只有一页数据时，是否显示Pager信息，默认值为true
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.PowerDataGrid2.OnDataBinding(System.EventArgs)">
            <summary>
            重写 <see cref="T:System.Web.UI.WebControls.GridView"/>.OnDataBinding 事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Bigdesk8.Web.Controls.PowerDataGrid2.RecordCount">
            <summary>
            记录总数
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.PowerDataGrid2.PageIndex">
            <summary>
            获取或设置当前显示页的索引。从 0 开始
            </summary>
        </member>
        <member name="T:Bigdesk8.Web.Controls.DBTextBox">
            <summary>
            单行文本框控件，通常数据长度在300字以下使用此控件，长度太长时，请使用DBMemoBox控件。
            </summary>
            <summary>
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBTextBox.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:Bigdesk8.Web.Controls.DBTextBox._ErrorMessage">
            <summary>
            错误信息，如果不为String.Empty,则有错误
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBTextBox.ItemCheck">
            <summary>
            检查类型是否匹配，长度是否超长，必填项是否已填，取值范围是否正确等等.....
            </summary>
            <returns>检查成功返回true,不成功返回false</returns>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBTextBox.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            将需要呈现的 HTML 属性和样式添加到指定的 <see cref="T:System.Web.UI.HtmlTextWriter"/> 实例中。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBTextBox.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            处理 <see cref="T:Bigdesk8.Web.Controls.DBTextBox"/> 控件的回发数据。
            当 ReadOnly=True 时, 客户端JS对控件赋值, 服务器端可以接收到.
            </summary>
            <param name="postDataKey">已发送集合中引用要加载的内容的索引</param>
            <param name="postCollection">发送到服务器的集合</param>
            <returns>如果发送内容与上次的发送内容不同，则为 true；否则为 false。</returns>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextBox.ItemName">
            <summary>
            数据项名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextBox.ItemNameCN">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextBox.ItemType">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextBox.ItemFormat">
            <summary>
            显示格式，注意：与数据类型有关系。格式字符串，如yyyy-MM-dd HH:mm:ss,日期和时间格式字符串,标准数字格式字符串
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextBox.ItemRelation">
            <summary>
            数据项与数据的关系
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextBox.ItemIsRequired">
            <summary>
            是否为必填项
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextBox.ItemDefaultData">
            <summary>
            默认数据，默认值为string.Empty
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextBox.MinLength">
            <summary>
            获取或设置文本框中最少的字符数。如果为0，则不检查长度。默认值为 0。
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextBox.MinData">
            <summary>
            最小值，注意：DBNull，string.Empty自动转换成null
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextBox.MaxData">
            <summary>
            最大值，注意：DBNull，string.Empty自动转换成null
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextBox.Validator">
            <summary>
            校验器名称，支持“电子邮箱”、“网址”
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextBox.FullHalfCase">
            <summary>
            指定将 Text 文本内容转换成全角或半角字符
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextBox.UpperLowerCase">
            <summary>
            指定将 Text 文本内容转换成大写或小写字符
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextBox.MaxLength">
            <summary>
            获取或设置文本框中最多允许的字符数。如果为0，则不检查长度。默认值为 0。
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextBox.TextMode">
            <summary>
            获取文本框的单行模式
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextBox.Text">
            <summary>
            获取或设置控件的文本内容
            </summary>
        </member>
        <member name="T:Bigdesk8.Web.Controls.DBDateTimePicker">
            <summary>
            日期控件
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBDateTimePicker.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:Bigdesk8.Web.Controls.DBDateTimePicker._ErrorMessage">
            <summary>
            错误信息，如果不为String.Empty,则有错误
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBDateTimePicker.ItemCheck">
            <summary>
            检查类型是否匹配，长度是否超长，必填项是否已填，取值范围是否正确等等.....
            </summary>
            <returns>检查成功返回true,不成功返回false</returns>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBDateTimePicker.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            将需要呈现的 HTML 属性和样式添加到指定的 <see cref="T:System.Web.UI.HtmlTextWriter"/> 实例中。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBDateTimePicker.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            处理 <see cref="T:Bigdesk8.Web.Controls.DBTextBox"/> 控件的回发数据。
            当 ReadOnly=True 时, 客户端JS对控件赋值, 服务器端可以接收到.
            </summary>
            <param name="postDataKey">已发送集合中引用要加载的内容的索引</param>
            <param name="postCollection">发送到服务器的集合</param>
            <returns>如果发送内容与上次的发送内容不同，则为 true；否则为 false。</returns>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBDateTimePicker.OnLoad(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBDateTimePicker.ItemName">
            <summary>
            数据项名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBDateTimePicker.ItemNameCN">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBDateTimePicker.ItemRelation">
            <summary>
            数据项与数据的关系
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBDateTimePicker.ItemIsRequired">
            <summary>
            是否为必填项
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBDateTimePicker.ItemDefaultData">
            <summary>
            默认数据，默认值为string.Empty
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBDateTimePicker.MinData">
            <summary>
            最小值，注意：DBNull，string.Empty自动转换成null
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBDateTimePicker.MaxData">
            <summary>
            最大值，注意：DBNull，string.Empty自动转换成null
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBDateTimePicker.MaxLength">
            <summary>
            获取或设置文本框中最多允许的字符数
            </summary>
        </member>
        <member name="T:Bigdesk8.MobileServiceChannel.JassonMASChannel">
            <summary>
            依赖Jassonsoft Mobile Agent Server而实现接口ILiteMobileService
            </summary>
        </member>
        <member name="T:Bigdesk8.MobileServiceChannel.ILiteMobileService">
            <summary>
            简化版移动服务接口
            </summary>
            Lite：adj. 简化的
        </member>
        <member name="M:Bigdesk8.MobileServiceChannel.ILiteMobileService.SendSms(System.Collections.Specialized.StringCollection,System.String)">
            <summary>
            发送短信
            </summary>
            <param name="receiveNumbers">收信号码组</param>
            <param name="content">短信内容</param>
            <returns>短信发送结果</returns>
        </member>
        <member name="M:Bigdesk8.MobileServiceChannel.JassonMASChannel.SendSms(System.Collections.Specialized.StringCollection,System.String)">
            <summary>
            发送短信
            </summary>
            <param name="receiveNumbers">收信号码组</param>
            <param name="content">短信内容</param>
            <returns>短信发送结果</returns>
        </member>
        <member name="T:Bigdesk8.Business.BizMsgManager.IBizMsgManager">
            <summary>
            业务消息管理接口
            </summary>
        </member>
        <member name="M:Bigdesk8.Business.BizMsgManager.IBizMsgManager.AppendBizMsg(Bigdesk8.Business.BizMsgManager.BusinessMsg)">
            <summary>
            追加业务消息
            </summary>
        </member>
        <member name="M:Bigdesk8.Business.BizMsgManager.IBizMsgManager.GetBizMsg(System.Int64)">
            <summary>
            获取业务消息
            </summary>
        </member>
        <member name="M:Bigdesk8.Business.BizMsgManager.IBizMsgManager.GetBizMsg(System.String)">
            <summary>
            获取业务消息
            </summary>
        </member>
        <member name="M:Bigdesk8.Business.BizMsgManager.IBizMsgManager.GetBizMsg(System.String,System.String,System.String)">
            <summary>
            获取业务消息
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.BizMsgManager.IBizMsgManager.DB">
            <summary>
            数据库访问对象
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.BizMsgManager.BusinessMsg">
            <summary>
            业务消息类，创建时，所有属性不能为NULL
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.BizMsgManager.BusinessMsg.MsgID">
            <summary>
            流水号
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.BizMsgManager.BusinessMsg.SystemName">
            <summary>
            系统名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.BizMsgManager.BusinessMsg.ModuleName">
            <summary>
            模块名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.BizMsgManager.BusinessMsg.KeyString">
            <summary>
            主键标识
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.BizMsgManager.BusinessMsg.MsgType">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.BizMsgManager.BusinessMsg.MsgInfo">
            <summary>
            消息内容，可以是xml格式
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.BizMsgManager.BusinessMsg.OperatorID">
            <summary>
            操作人LoginId
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.BizMsgManager.BusinessMsg.OperatorName">
            <summary>
            操作人名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.BizMsgManager.BusinessMsg.OperateDateTime">
            <summary>
            操作日期时间
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.WorkflowTemplateManager.WorkflowTemplateManagerFactory">
            <summary>
            工作流模板信息管理
            </summary>
        </member>
        <member name="M:Bigdesk8.Business.WorkflowTemplateManager.WorkflowTemplateManagerFactory.CreateWorkflowTemplateManager(System.String)">
            <summary>
            获取工作流模板信息管理器
            </summary>
            <param name="workflowTemplateName">workflowTemplateName</param>
            <returns>返回指定的工作流模板信息管理器</returns>
        </member>
        <member name="T:Bigdesk8.Business.WorkflowTemplateManager.DBWorkflowTemplateManager">
            <summary>
            工作流模板信息管理
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.WorkflowTemplateManager.IWorkflowTemplateManager">
            <summary>
            工作流模板信息管理接口
            </summary>
        </member>
        <member name="M:Bigdesk8.Business.WorkflowTemplateManager.IWorkflowTemplateManager.AddWorkflowTemplate(Bigdesk8.Business.WorkflowTemplateManager.BusinessWorkflowTemplate)">
            <summary>
            添加工作流模板信息
            </summary>
            <param name="workflowTemplate">工作流模板信息</param>
            <returns>返回工作流模板信息</returns>
        </member>
        <member name="M:Bigdesk8.Business.WorkflowTemplateManager.IWorkflowTemplateManager.UpdateWorkflowTemplate(Bigdesk8.Business.WorkflowTemplateManager.BusinessWorkflowTemplate)">
            <summary>
            更新工作流模板信息
            </summary>
            <param name="workflowTemplate">工作流模板信息</param>
        </member>
        <member name="M:Bigdesk8.Business.WorkflowTemplateManager.IWorkflowTemplateManager.GetWorkflowTemplate(System.Guid)">
            <summary>
            获得工作流模板信息
            </summary>
            <param name="templateID">工作流模板信息编号</param>
            <returns>返回工作流模板信息</returns>
        </member>
        <member name="M:Bigdesk8.Business.WorkflowTemplateManager.IWorkflowTemplateManager.GetWorkflowTemplate(System.String)">
            <summary>
            获得工作流模板信息
            </summary>
            <param name="templateID">工作流模板信息编号</param>
            <returns>返回工作流模板信息</returns>
        </member>
        <member name="P:Bigdesk8.Business.WorkflowTemplateManager.IWorkflowTemplateManager.DB">
            <summary>
            数据库访问对象
            </summary>
        </member>
        <member name="M:Bigdesk8.Business.WorkflowTemplateManager.DBWorkflowTemplateManager.AddWorkflowTemplate(Bigdesk8.Business.WorkflowTemplateManager.BusinessWorkflowTemplate)">
            <summary>
            添加工作流模板信息
            </summary>
            <param name="workflowTemplate">工作流模板信息</param>
            <returns>返回工作流模板信息</returns>
        </member>
        <member name="M:Bigdesk8.Business.WorkflowTemplateManager.DBWorkflowTemplateManager.UpdateWorkflowTemplate(Bigdesk8.Business.WorkflowTemplateManager.BusinessWorkflowTemplate)">
            <summary>
            更新工作流模板信息
            </summary>
            <param name="workflowTemplate">工作流模板信息</param>
        </member>
        <member name="M:Bigdesk8.Business.WorkflowTemplateManager.DBWorkflowTemplateManager.GetWorkflowTemplate(System.Guid)">
            <summary>
            获得工作流模板信息
            </summary>
            <param name="templateID">工作流模板信息编号</param>
            <returns>返回工作流模板信息</returns>
        </member>
        <member name="M:Bigdesk8.Business.WorkflowTemplateManager.DBWorkflowTemplateManager.GetWorkflowTemplate(System.String)">
            <summary>
            获得工作流模板信息
            </summary>
            <param name="templateID">工作流模板信息编号</param>
            <returns>返回工作流模板信息</returns>
        </member>
        <member name="P:Bigdesk8.Business.WorkflowTemplateManager.DBWorkflowTemplateManager.DB">
            <summary>
            数据库访问对象
            </summary>
        </member>
        <member name="T:Bigdesk8.Web.LoginManager">
            <summary>
            为web应用程序管理登录信息
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.LoginManager.InitScicLogin(Bigdesk8.Data.DBOperator,System.Int32)">
            <summary>
            初始化一个SCIC平台用户
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.LoginManager.InitBasicLogin(Bigdesk8.Data.DBOperator,System.Int32)">
            <summary>
            初始化一个应用系统用户
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.LoginManager.SetScicLoginInfo(Bigdesk8.Business.ScicLoginInfo)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.LoginManager.ClearScicLoginInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.LoginManager.SetBasicLoginInfo(Bigdesk8.Business.BasicLoginInfo)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.LoginManager.ClearBasicLoginInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.LoginManager.GetScicLoginInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.LoginManager.GetBasicLoginInfo">
            <summary>
            
            </summary>
        </member>
        <member name="T:Bigdesk8.Web.Controls.DBCheckBoxList">
            <summary>
            多项选择复选框组，多个值间以“;”分号分隔
            </summary>
        </member>
        <member name="F:Bigdesk8.Web.Controls.DBCheckBoxList._ErrorMessage">
            <summary>
            错误信息，如果不为String.Empty,则有错误
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBCheckBoxList.ItemCheck">
            <summary>
            检查类型是否匹配，长度是否超长，必填项是否已填，取值范围是否正确等等.....
            </summary>
            <returns>检查成功返回true,不成功返回false</returns>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBCheckBoxList.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            将需要呈现的 HTML 属性和样式添加到指定的 <see cref="T:System.Web.UI.HtmlTextWriter"/> 实例中。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBCheckBoxList.ItemNameCN">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBCheckBoxList.ItemIsRequired">
            <summary>
            是否为必填项
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBCheckBoxList.ItemName">
            <summary>
            Value 数据项名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBCheckBoxList.ItemType">
            <summary>
            Value 数据类型
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBCheckBoxList.ItemRelation">
            <summary>
            Value 数据项与数据的关系
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBCheckBoxList.TextItemName">
            <summary>
            Text 数据项名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBCheckBoxList.TextItemType">
            <summary>
            Text 数据类型
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBCheckBoxList.TextItemRelation">
            <summary>
            Text 数据项与数据的关系
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBCheckBoxList.SplitString">
            <summary>
            内容分隔符
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBCheckBoxList.SelectedValue">
            <summary>
            获取列表控件中选定项的值，或选择列表控件中包含指定值的项。
            返回结果:
                列表控件中选定项的值。默认值为空字符串 ("")。
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBCheckBoxList.IsAutoAddItem">
            <summary>
            当列表中可选项不存在时，是否自动添加
            </summary>
        </member>
        <member name="T:Bigdesk8.Security.SecurityUtility">
            <summary>
            数据安全功能函数
            </summary>
        </member>
        <member name="M:Bigdesk8.Security.SecurityUtility.SHA1(System.IO.Stream)">
            <summary>
            计算SHA1哈希值
            </summary>
            <param name="stream">要计算其哈希代码的数据流</param>
            <returns>返回SHA1哈希值</returns>
        </member>
        <member name="M:Bigdesk8.Security.SecurityUtility.SHA1(System.Byte[])">
            <summary>
            计算SHA1哈希值
            </summary>
            <param name="buffer">要计算其哈希代码的数组。</param>
            <returns>返回SHA1哈希值</returns>
        </member>
        <member name="M:Bigdesk8.Security.SecurityUtility.SHA1(System.Byte[],System.Int32,System.Int32)">
            <summary>
            计算SHA1哈希值
            </summary>
            <param name="buffer">要计算其哈希代码的数组。</param>
            <param name="offset">字节数组中的偏移量，从该位置开始使用数据。</param>
            <param name="count">数组中用作数据的字节数。</param>
            <returns>返回SHA1哈希值</returns>
        </member>
        <member name="M:Bigdesk8.Security.SecurityUtility.SHA1(System.String)">
            <summary>
            计算SHA1哈希值
            </summary>
            <param name="str">要计算其哈希代码的字符串</param>
            <returns>返回SHA1哈希值</returns>
        </member>
        <member name="M:Bigdesk8.Security.SecurityUtility.MD5(System.IO.Stream)">
            <summary>
            计算MD5哈希值
            </summary>
            <param name="stream">要计算其哈希代码的数据流</param>
            <returns>返回MD5哈希值</returns>
        </member>
        <member name="M:Bigdesk8.Security.SecurityUtility.MD5(System.Byte[])">
            <summary>
            计算MD5哈希值
            </summary>
            <param name="buffer">要计算其哈希代码的数组。</param>
            <returns>返回MD5哈希值</returns>
        </member>
        <member name="M:Bigdesk8.Security.SecurityUtility.MD5(System.Byte[],System.Int32,System.Int32)">
            <summary>
            计算MD5哈希值
            </summary>
            <param name="buffer">要计算其哈希代码的数组。</param>
            <param name="offset">字节数组中的偏移量，从该位置开始使用数据。</param>
            <param name="count">数组中用作数据的字节数。</param>
            <returns>返回MD5哈希值</returns>
        </member>
        <member name="M:Bigdesk8.Security.SecurityUtility.MD5(System.String)">
            <summary>
            计算MD5哈希值
            </summary>
            <param name="str">要计算其哈希代码的字符串</param>
            <returns>返回MD5哈希值</returns>
        </member>
        <member name="M:Bigdesk8.Security.SecurityUtility.SHA256(System.IO.Stream)">
            <summary>
            计算SHA256哈希值
            </summary>
            <param name="stream">要计算其哈希代码的数据流</param>
            <returns>返回SHA256哈希值</returns>
        </member>
        <member name="M:Bigdesk8.Security.SecurityUtility.SHA256(System.Byte[])">
            <summary>
            计算SHA256哈希值
            </summary>
            <param name="buffer">要计算其哈希代码的数组。</param>
            <returns>返回SHA256哈希值</returns>
        </member>
        <member name="M:Bigdesk8.Security.SecurityUtility.SHA256(System.Byte[],System.Int32,System.Int32)">
            <summary>
            计算SHA256哈希值
            </summary>
            <param name="buffer">要计算其哈希代码的数组。</param>
            <param name="offset">字节数组中的偏移量，从该位置开始使用数据。</param>
            <param name="count">数组中用作数据的字节数。</param>
            <returns>返回SHA256哈希值</returns>
        </member>
        <member name="M:Bigdesk8.Security.SecurityUtility.SHA256(System.String)">
            <summary>
            计算SHA256哈希值
            </summary>
            <param name="str">要计算其哈希代码的字符串</param>
            <returns>返回SHA256哈希值</returns>
        </member>
        <member name="T:Bigdesk8.Drawing.ImageWaterMark">
            <summary>
            图片添加水印
            </summary>
        </member>
        <member name="M:Bigdesk8.Drawing.ImageWaterMark.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Bigdesk8.Drawing.ImageWaterMark.ToThumbnailImage">
            <summary>
            生成缩略图
            </summary>
        </member>
        <member name="M:Bigdesk8.Drawing.ImageWaterMark.ToWaterMark">
            <summary>
            添加水印
            </summary>
        </member>
        <member name="M:Bigdesk8.Drawing.ImageWaterMark.CheckValidExt(System.String)">
            <summary>
            检查扩展名是否有效
            </summary>
            <param name="sExt">扩展名,如：.jpg</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Drawing.ImageWaterMark.GetWaterMarkXY(System.Int32@,System.Int32@,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            获得水印位置
            </summary>
            <param name="wm_x"></param>
            <param name="wm_y"></param>
            <param name="s_imagewidth"></param>
            <param name="s_imageheight"></param>
            <param name="wm_imagewidth"></param>
            <param name="wm_imageheight"></param>
        </member>
        <member name="M:Bigdesk8.Drawing.ImageWaterMark.SaveImage(System.Drawing.Image,System.String,System.Drawing.Imaging.ImageCodecInfo)">
            <summary>
            保存图片
            </summary>
            <param name="image">图片</param>
            <param name="savePath">保存路径</param>
            <param name="ici">图像编码信息</param>
        </member>
        <member name="M:Bigdesk8.Drawing.ImageWaterMark.GetCodecInfo(System.String)">
            <summary>
            根据 MIME 类型获取图像编码信息
            </summary>
            <param name="mimeType">MIME 类型</param>
            <returns></returns>
        </member>
        <member name="P:Bigdesk8.Drawing.ImageWaterMark.SaveWaterMarkImagePath">
            <summary>
            获取或设置保存水印图片路径，物理文件路径
            </summary>
        </member>
        <member name="P:Bigdesk8.Drawing.ImageWaterMark.WaterMarkImagePath">
            <summary>
            获取或设置水印图片路径，物理文件路径
            </summary>
        </member>
        <member name="P:Bigdesk8.Drawing.ImageWaterMark.SourceImagePath">
            <summary>
            获取或设置源图片路径，物理文件路径
            </summary>
        </member>
        <member name="P:Bigdesk8.Drawing.ImageWaterMark.ThumbnailImagePath">
            <summary>
            获取或设置缩略图路径，物理文件路径
            </summary>
        </member>
        <member name="P:Bigdesk8.Drawing.ImageWaterMark.ThumbnailImageWidth">
            <summary>
            获取或设置缩略图宽度，物理文件路径
            </summary>
        </member>
        <member name="P:Bigdesk8.Drawing.ImageWaterMark.WaterMarkText">
            <summary>
            获取或设置水印文本
            </summary>
        </member>
        <member name="P:Bigdesk8.Drawing.ImageWaterMark.WaterMarkAlign">
            <summary>
            获取或设置水印位置
            </summary>
        </member>
        <member name="T:Bigdesk8.Drawing.ImageAlign">
            <summary>
            图片位置
            </summary>
        </member>
        <member name="F:Bigdesk8.Drawing.ImageAlign.LeftTop">
            <summary>
            左边顶部
            </summary>
        </member>
        <member name="F:Bigdesk8.Drawing.ImageAlign.LeftBottom">
            <summary>
            左边底部
            </summary>
        </member>
        <member name="F:Bigdesk8.Drawing.ImageAlign.RightTop">
            <summary>
            右边顶部
            </summary>
        </member>
        <member name="F:Bigdesk8.Drawing.ImageAlign.RightBottom">
            <summary>
            右边底部
            </summary>
        </member>
        <member name="F:Bigdesk8.Drawing.ImageAlign.Center">
            <summary>
            居中
            </summary>
        </member>
        <member name="F:Bigdesk8.Drawing.ImageAlign.CenterBottom">
            <summary>
            居中底部
            </summary>
        </member>
        <member name="F:Bigdesk8.Drawing.ImageAlign.CenterTop">
            <summary>
            居中顶部
            </summary>
        </member>
        <member name="T:Bigdesk8.Data.SqlServerDbParameterCollection">
            <summary>
            SQL 参数集合
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbParameterCollection.Add(System.String,System.Object)">
            <summary>
            在给定参数名称和参数值的情况下，将 <see cref="T:System.Data.SqlClient.SqlParameter"/> 添加到 <see cref="T:Bigdesk8.Data.SqlParameterCollection"/> 中。
            </summary>
            <param name="parameterName">参数名</param>
            <param name="value">要添加到集合中的 <see cref="T:System.Data.SqlClient.SqlParameter"/> 的 <see cref="T:System.Data.SqlClient.SqlParameter"/>.Value。</param>
            <returns>新 <see cref="T:System.Data.SqlClient.SqlParameter"/> 对象的索引。</returns>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbParameterCollection.Add(System.String,System.Data.DbType,System.Object)">
            <summary>
            在给定参数名称、数据类型和参数值的情况下，将 <see cref="T:System.Data.SqlClient.SqlParameter"/> 添加到 <see cref="T:Bigdesk8.Data.SqlParameterCollection"/> 中。
            </summary>
            <param name="parameterName">参数名</param>
            <param name="dataType">数据类型</param>
            <param name="value">要添加到集合中的 <see cref="T:System.Data.SqlClient.SqlParameter"/> 的 <see cref="T:System.Data.SqlClient.SqlParameter"/>.Value。</param>
            <returns>新 <see cref="T:System.Data.SqlClient.SqlParameter"/> 对象的索引。</returns>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbParameterCollection.Add(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            在给定参数名称、数据类型、参数值和列的长度的情况下，将 <see cref="T:System.Data.SqlClient.SqlParameter"/> 添加到 <see cref="T:Bigdesk8.Data.SqlParameterCollection"/> 中。
            </summary>
            <param name="parameterName">参数名</param>
            <param name="dataType">数据类型</param>
            <param name="size">列的长度</param>
            <param name="value">要添加到集合中的 <see cref="T:System.Data.SqlClient.SqlParameter"/> 的 <see cref="T:System.Data.SqlClient.SqlParameter"/>.Value。</param>
            <returns>新 <see cref="T:System.Data.SqlClient.SqlParameter"/> 对象的索引。</returns>
        </member>
        <member name="T:Bigdesk8.Data.DataType">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.DataType.String">
            <summary>
            字符串，如 "hello"
            C#类型：String
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.DataType.Boolean">
            <summary>
            布尔型
            取值范围 true、false、0、1
            C#类型：Boolean
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.DataType.Int32">
            <summary>
            有符号 32 位整数
            取值范围：-2,147,483,648 到 2,147,483,647
            C#类型：Int32
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.DataType.Int64">
            <summary>
            有符号 64 位整数
            取值范围：-2^63 到 2^63-1
            C#类型：Int64
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.DataType.Double">
            <summary>
            浮点型，精度是 15 到 16 位
            取值范围：±5.0e-324 到 ±1.7e308
            C#类型：Double
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.DataType.Decimal">
            <summary>
            适合于财务和货币计算
            取值范围：28 到 29 位有效位
            C#类型：Decimal
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.DataType.Date">
            <summary>
            日期类型，如 2009-01-01，时间部分固定为00:00:00
            取值范围：0001-01-01 到 9999-12-31
            C#类型：DateTime
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.DataType.Time">
            <summary>
            时间类型，24时制，如 13:11:00，日期部分固定为2010-01-01
            取值范围：00:00:00 至 23:59:59
            C#类型：DateTime
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.DataType.DateTime">
            <summary>
            日期类型，如 2009-01-01 13:11:00
            取值范围：0001-01-01 00:00:00 至 9999-12-31 23:59:59
            C#类型：DateTime
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.DebugManager.IDebugManager">
            <summary>
            调试信息管理接口
            </summary>
        </member>
        <member name="M:Bigdesk8.Business.DebugManager.IDebugManager.AddDebug(Bigdesk8.Business.DebugManager.BusinessDebug)">
            <summary>
            添加调试信息
            </summary>
            <param name="businessDebug">调试信息</param>
            <returns>返回调试信息</returns>
        </member>
        <member name="M:Bigdesk8.Business.DebugManager.IDebugManager.GetDebug(System.Int64)">
            <summary>
            获得调试信息
            </summary>
            <param name="debugID">调试信息编号</param>
            <returns>返回调试信息</returns>
        </member>
        <member name="M:Bigdesk8.Business.DebugManager.IDebugManager.GetDebug(System.String,System.TimeSpan)">
            <summary>
            获得调试信息
            </summary>
            <param name="debugMessage">查询条件</param>
            <param name="timeSpan">最近多长时间</param>
            <returns>返回符合条件的调试信息</returns>
        </member>
        <member name="M:Bigdesk8.Business.DebugManager.IDebugManager.GetDebug(System.Collections.Generic.List{Bigdesk8.Data.IDataItem},System.Int32,System.Int32,System.Int32@)">
            <summary>
            获得调试信息
            </summary>
            <param name="condition">搜索条件</param>
            <param name="pageSize">页面大小</param>
            <param name="pageIndex">页面索引</param>
            <param name="allRecordCount">总记录数</param>
            <returns></returns>
        </member>
        <member name="P:Bigdesk8.Business.DebugManager.IDebugManager.DB">
            <summary>
            数据库访问对象
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.DebugManager.BusinessDebug">
            <summary>
            调试信息类，创建时，所有属性不能为NULL
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.DebugManager.BusinessDebug.DebugID">
            <summary>
            流水号
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.DebugManager.BusinessDebug.SystemName">
            <summary>
            系统名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.DebugManager.BusinessDebug.ModuleName">
            <summary>
            模块名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.DebugManager.BusinessDebug.CategoryName">
            <summary>
            种类名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.DebugManager.BusinessDebug.DebugMessage">
            <summary>
            调试消息
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.DebugManager.BusinessDebug.DebugText">
            <summary>
            调试详细信息
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.DebugManager.BusinessDebug.DebugDateTime">
            <summary>
            调试日期时间
            </summary>
        </member>
        <member name="T:Bigdesk8.Xml.XmlDataSet">
            <summary>
            XML 与 DataSet 相互转换
            </summary>
        </member>
        <member name="M:Bigdesk8.Xml.XmlDataSet.ConvertToXml(System.Data.DataSet,System.Boolean,System.Boolean)">
            <summary>
            将 DataSet 转换成 XML 字符串。
            </summary>
            <param name="dataSet">数据集</param>
            <param name="isShowNull">当数据为null时，是否显示XML元素</param>
            <param name="isShowXmlDeclaration">是否显示XML声明</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Xml.XmlDataSet.ConvertToXml(System.String,System.Data.DataSet,System.Boolean,System.Boolean)">
            <summary>
            将 DataSet 转换成 XML 字符串。
            </summary>
            <param name="encoding">文本编码</param>
            <param name="dataSet">数据集</param>
            <param name="isShowNull">当数据为null时，是否显示XML元素</param>
            <param name="isShowXmlDeclaration">是否显示XML声明</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Xml.XmlDataSet.ConvertToXml(System.Data.DataTable,System.Boolean,System.Boolean)">
            <summary>
            将 DataTable 转换成 XML 字符串。
            </summary>
            <param name="dataTable">数据集</param>
            <param name="isShowNull">当数据为null时，是否显示XML元素</param>
            <param name="isShowXmlDeclaration">是否显示XML声明</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Xml.XmlDataSet.ConvertToXml(System.String,System.Data.DataTable,System.Boolean,System.Boolean)">
            <summary>
            将 DataTable 转换成 XML 字符串。
            </summary>
            <param name="encoding">文本编码</param>
            <param name="dataTable">数据集</param>
            <param name="isShowNull">当数据为null时，是否显示XML元素</param>
            <param name="isShowXmlDeclaration">是否显示XML声明</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Xml.XmlDataSet.ConvertToXmlDocument(System.Data.DataSet,System.Boolean)">
            <summary>
            将 DataSet 转换成 XmlDocument
            </summary>
            <param name="dataSet">数据集</param>
            <param name="isShowNull">当数据为null时，是否显示XML元素</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Xml.XmlDataSet.ConvertToXmlDocument(System.String,System.String,System.String,System.Data.DataSet,System.Boolean)">
            <summary>
            将 DataSet 转换成 XmlDocument
            </summary>
            <param name="version">版本</param>
            <param name="encoding">编码</param>
            <param name="standalone">是否独立文件,值为yes,no</param>
            <param name="dataSet">数据集</param>
            <param name="isShowNull">当数据为null时，是否显示XML元素</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Xml.XmlDataSet.ConvertToXmlDocument(System.Data.DataTable,System.Boolean)">
            <summary>
            将 DataTable 转换成 XmlDocument
            </summary>
            <param name="dataTable">数据集</param>
            <param name="isShowNull">当数据为null时，是否显示XML元素</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Xml.XmlDataSet.ConvertToXmlDocument(System.String,System.String,System.String,System.Data.DataTable,System.Boolean)">
            <summary>
            将 DataTable 转换成 XmlDocument
            </summary>
            <param name="version">版本</param>
            <param name="encoding">编码</param>
            <param name="standalone">是否独立文件,值为yes,no</param>
            <param name="dataTable">数据集</param>
            <param name="isShowNull">当数据为null时，是否显示XML元素</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Xml.XmlDataSet.ConvertToXmlNode(System.Xml.XmlNode,System.Data.DataSet,System.Boolean)">
            <summary>
            将 DataSet 转换成 XmlNode
            </summary>
            <param name="parentXmlNode">父节点</param>
            <param name="dataSet">数据集</param>
            <param name="isShowNull">当数据为null时，是否显示XML元素</param>
        </member>
        <member name="M:Bigdesk8.Xml.XmlDataSet.ConvertToXmlNode(System.Xml.XmlNode,System.Data.DataTable,System.Boolean)">
            <summary>
            将 DataTable 转换成 XmlNode
            </summary>
            <param name="parentXmlNode">父节点</param>
            <param name="dataTable">数据集</param>
            <param name="isShowNull">当数据为null时，是否显示XML元素</param>
        </member>
        <member name="M:Bigdesk8.Xml.XmlDataSet.ConvertToDataSet(System.String)">
            <summary>
            将 XML 字符串转换成 DataSet
            </summary>
            <param name="xml">XML 字符串</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Xml.XmlDataSet.ConvertToDataSet(System.Xml.XmlDocument)">
            <summary>
            将 XmlDocument 转换成 DataSet
            </summary>
            <param name="doc">XmlDocument</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Xml.XmlDataSet.ConvertToDataTable(System.String)">
            <summary>
            将 XML 字符串转换成 DataTable
            </summary>
            <param name="xml">XML 字符串</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Xml.XmlDataSet.ConvertToDataTable(System.Xml.XmlDocument)">
            <summary>
            将 XmlDocument 转换成 DataTable
            </summary>
            <param name="doc">XmlDocument</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Xml.XmlDataSet.FilterControlCharacter(System.String)">
            <summary>
            过滤控制字符
            XML标准规定的无效字节为：
            /*
                0x00 - 0x08
                0x0b - 0x0c
                0x0e - 0x1f
            */
            </summary>
            <param name="xml">要过滤的内容</param>
            <returns>过滤后的内容</returns>
        </member>
        <member name="T:Bigdesk8.Windows.Controls.DBTextBox">
            <summary>
            单行文本框控件，通常数据长度在300字以下使用此控件，长度太长时，请使用DBMemoBox控件。
            </summary>
        </member>
        <member name="M:Bigdesk8.Windows.Controls.DBTextBox.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:Bigdesk8.Windows.Controls.DBTextBox._ErrorMessage">
            <summary>
            错误信息，如果不为String.Empty,则有错误
            </summary>
        </member>
        <member name="M:Bigdesk8.Windows.Controls.DBTextBox.ItemCheck">
            <summary>
            检查类型是否匹配，长度是否超长，必填项是否已填，取值范围是否正确等等.....
            </summary>
            <returns>检查成功返回true,不成功返回false</returns>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBTextBox.ItemName">
            <summary>
            数据项名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBTextBox.ItemNameCN">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBTextBox.ItemType">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBTextBox.ItemFormat">
            <summary>
            显示格式，注意：与数据类型有关系。格式字符串，如yyyy-MM-dd HH:mm:ss,日期和时间格式字符串,标准数字格式字符串
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBTextBox.ItemRelation">
            <summary>
            数据项与数据的关系
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBTextBox.ItemIsRequired">
            <summary>
            是否为必填项
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBTextBox.ItemDefaultData">
            <summary>
            默认数据，默认值为string.Empty
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBTextBox.MinLength">
            <summary>
            获取或设置文本框中最少的字符数。如果为0，则不检查长度。默认值为 0。
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBTextBox.MinData">
            <summary>
            最小值，注意：DBNull，string.Empty自动转换成null
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBTextBox.MaxData">
            <summary>
            最大值，注意：DBNull，string.Empty自动转换成null
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBTextBox.Validator">
            <summary>
            校验器名称，支持“电子邮箱”、“网址”
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBTextBox.FullHalfCase">
            <summary>
            指定将 Text 文本内容转换成全角或半角字符
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBTextBox.UpperLowerCase">
            <summary>
            指定将 Text 文本内容转换成大写或小写字符
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBTextBox.Text">
            <summary>
            获取或设置控件的文本内容
            </summary>
        </member>
        <member name="F:Bigdesk8.Web.NavigatorType.IE">
            <summary>
            低于11的ie
            </summary>
        </member>
        <member name="F:Bigdesk8.Web.NavigatorType.InternetExplorer">
            <summary>
            ie11及以上版本
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Waiter.IdentifyNavigator(System.Web.HttpRequest)">
            <summary>
            本函数用以识别各种浏览器，其功能的不足之处，请大家适时完善补充之。
            </summary>
            <param name="userAgent"></param>
            <returns></returns>
        </member>
        <member name="T:Bigdesk8.Web.Controls.DBTimePicker">
            <summary>
            时间控件
            </summary>
        </member>
        <member name="F:Bigdesk8.Web.Controls.DBTimePicker._ErrorMessage">
            <summary>
            错误信息，如果不为String.Empty,则有错误
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBTimePicker.ItemCheck">
            <summary>
            检查类型是否匹配，长度是否超长，必填项是否已填，取值范围是否正确等等.....
            </summary>
            <returns>检查成功返回true,不成功返回false</returns>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBTimePicker.OnPreRender(System.EventArgs)">
            <summary>
            在初始化之后，显示之前发生
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBTimePicker.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            将需要呈现的 HTML 属性和样式添加到指定的 <see cref="T:System.Web.UI.HtmlTextWriter"/> 实例中。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBTimePicker.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            处理 <see cref="T:Bigdesk8.Web.Controls.DBTextBox"/> 控件的回发数据。
            当 ReadOnly=True 时, 客户端JS对控件赋值, 服务器端可以接收到.
            </summary>
            <param name="postDataKey">已发送集合中引用要加载的内容的索引</param>
            <param name="postCollection">发送到服务器的集合</param>
            <returns>如果发送内容与上次的发送内容不同，则为 true；否则为 false。</returns>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTimePicker.ItemName">
            <summary>
            数据项名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTimePicker.ItemNameCN">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTimePicker.ItemRelation">
            <summary>
            数据项与数据的关系
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTimePicker.ItemIsRequired">
            <summary>
            是否为必填项
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTimePicker.ItemDefaultData">
            <summary>
            默认数据，默认值为string.Empty
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTimePicker.IsShowSecond">
            <summary>
            是否显示秒，如10:30,10:30:30
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTimePicker.MinData">
            <summary>
            最小值
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTimePicker.MaxData">
            <summary>
            最大值
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTimePicker.MaxLength">
            <summary>
            获取或设置文本框中最多允许的字符数
            </summary>
        </member>
        <member name="T:Bigdesk8.Singleton`1">
            <summary>
            Singleton 泛型类
            
            Threadsafe Singleton best practice design pattern template
            
            <![CDATA[
            Sample:
            
            public class Demo
            {
            	public static Form1 instance1
            	{
            		get
            		{
            			return Singleton<Form1>.Instance;
            		}
            	}
            }
             
            ]]>
            </summary>
            <typeparam name="T">Any class that implements default constructor</typeparam>
        </member>
        <member name="P:Bigdesk8.Singleton`1.Instance">
            <summary>
            获取实例
            </summary>
        </member>
        <member name="T:Bigdesk8.Xml.XmlDataTable">
            <summary>
            XML 和 DataTable 互相转换
            </summary>
        </member>
        <member name="M:Bigdesk8.Xml.XmlDataTable.ConvertToXml(System.Data.DataTable)">
            <summary>
            <see cref="T:System.Data.DataTable"/> 转换为 XML 字符串，XML 字符串格式：
            <![CDATA[
            <xmlroot>
                <datarow>
                    <列名1>列值1</列名1>
                    <列名2>列值2</列名2>
                </datarow>
                <datarow>
                    <列名1>列值3</列名1>
                    <列名2>列值4</列名2>
                </datarow>
            </xmlroot>
            ]]>
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Xml.XmlDataTable.ConvertToXml(System.Data.DataRow)">
            <summary>
            <see cref="T:System.Data.DataRow"/> 转换为 XML 字符串，XML 字符串格式：
            <![CDATA[
            <xmlroot>
                <datarow>
                    <列名1>列值1</列名1>
                    <列名2>列值2</列名2>
                </datarow>
            </xmlroot>
            ]]>
            </summary>
            <param name="dr"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Xml.XmlDataTable.ConvertToDataTable(System.String)">
            <summary>
            XML 字符串转换为 <see cref="T:System.Data.DataTable"/>，XML 字符串格式：
            <![CDATA[
            <xmlroot>
                <datarow>
                    <列名1>列值1</列名1>
                    <列名2>列值2</列名2>
                </datarow>
                <datarow>
                    <列名1>列值3</列名1>
                    <列名2>列值4</列名2>
                </datarow>
            </xmlroot>
            ]]>
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="T:Bigdesk8.Web.Controls.PagerSettings">
            <summary>
            表示支持分页的控件中的分页控件的属性。无法继承此类。
            </summary>
        </member>
        <member name="E:Bigdesk8.Web.Controls.PagerSettings.PropertyChanged">
            <summary>
            属性更改值时发生
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.PagerSettings.FirstPageImageUrl">
            <summary>
            获取或设置为第一页按钮显示的图像的 URL。为第一页按钮显示的图像的 URL。默认值为空字符串 ("")，表示尚未设置。
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.PagerSettings.FirstPageText">
            <summary>
            获取或设置为第一页按钮显示的文字。默认值为 首页
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.PagerSettings.FirstPageToolTipText">
            <summary>
            获取或设置当鼠标指针悬停在第一页按钮上时显示的文本。默认值为 转到第一页
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.PagerSettings.LastPageImageUrl">
            <summary>
            获取或设置为最后一页按钮显示的图像的 URL。为最后一页按钮显示的图像的 URL。默认值为空字符串 ("")，表示尚未设置。
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.PagerSettings.LastPageText">
            <summary>
            获取或设置为最后一页按钮显示的文字。默认值为 尾页
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.PagerSettings.LastPageToolTipText">
            <summary>
            获取或设置当鼠标指针悬停在最后一页按钮上时显示的文本。默认值为 转到最后一页
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.PagerSettings.NextPageImageUrl">
            <summary>
            获取或设置为下一页按钮显示的图像的 URL。为下一页按钮显示的图像的 URL。默认值为空字符串 ("")，表示尚未设置。
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.PagerSettings.NextPageText">
            <summary>
            获取或设置为下一页按钮显示的文字。默认值为 下页
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.PagerSettings.NextPageToolTipText">
            <summary>
            获取或设置当鼠标指针悬停在下一页按钮上时显示的文本。默认值为 转到下一页
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.PagerSettings.PreviousPageImageUrl">
            <summary>
            获取或设置为上一页按钮显示的图像的 URL。为上一页按钮显示的图像的 URL。默认值为空字符串 ("")，表示尚未设置。
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.PagerSettings.PreviousPageText">
            <summary>
            获取或设置为上一页按钮显示的文字。默认值为 上页
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.PagerSettings.PreviousPageToolTipText">
            <summary>
            获取或设置当鼠标指针悬停在上一页按钮上时显示的文本。默认值为 转到上一页
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.PagerSettings.PageButtonCount">
            <summary>
            获取或设置页导航中显示的页按钮的数量。默认值为 10
            </summary>
        </member>
        <member name="T:Bigdesk8.NukeString">
            <summary>
            功能强大的字符串处理类
            </summary>
        </member>
        <member name="M:Bigdesk8.NukeString.GetRandomString(System.Int32)">
            <summary>
            获取随机字符串
            </summary>
            <param name="length">随机字符串长度</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.NukeString.GetRandomString(System.Int32,System.Boolean)">
            <summary>
            获取随机字符串
            </summary>
            <param name="length">随机字符串长度</param>
            <param name="isAllNumeric">当为false时，返回字符串全部为字母；当为true时，返回字符串全部为数字</param>
            <returns></returns>
        </member>
        <member name="F:Bigdesk8.NukeString.pystr">
            <summary>
            拼音字符串数组
            </summary>
        </member>
        <member name="F:Bigdesk8.NukeString.pyvalue">
            <summary>
            拼音值数组
            </summary>
        </member>
        <member name="M:Bigdesk8.NukeString.GB2Spell(System.String)">
            <summary>
            获取汉字的拼音
            </summary>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.NukeString.ToSimplifiedChinese(System.String)">
            <summary>
            转换为简体中文
            </summary>
        </member>
        <member name="M:Bigdesk8.NukeString.ToTraditionalChinese(System.String)">
            <summary>
            转换为繁体中文
            </summary>
        </member>
        <member name="M:Bigdesk8.NukeString.ToSBCCase(System.String)">
            <summary>
            转换为全角字符
            </summary>
        </member>
        <member name="M:Bigdesk8.NukeString.ToDBCCase(System.String)">
            <summary>
            转换为半角字符
            </summary>
        </member>
        <member name="M:Bigdesk8.NukeString.ToProperCase(System.String)">
            <summary>
            将字符串中每个单词的首字母转换为大写
            </summary>
        </member>
        <member name="M:Bigdesk8.NukeString.ToChineseUpper(System.String)">
            <summary>
            将字符串中的数字转换成中文，如1转换成一，5转换成五。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.NukeString.ToChineseWord(System.String)">
            <summary>
            将字符串中的数字转换成汉字，如1转换成壹，5转换成伍。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.NukeString.MoneyToRMB(System.Double)">
            <summary>
            数字金额转换成大写汉字金额
            </summary>
            <param name="m">数字金额</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.NukeString.ToChineseUpper(System.Char)">
            <summary>
            将一个数字转换成中文，如1转换成一，5转换成五。
            </summary>
            <param name="num"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.NukeString.ToChineseWord(System.Char)">
            <summary>
            将一个数字转换成汉字，如1转换成壹，5转换成伍。
            </summary>
            <param name="num"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.NukeString.RY(System.String)">
            <summary>
            整数转换成大写汉字金额
            </summary>
            <param name="DX"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.NukeString.GetSubString(System.String,System.Int32,System.String)">
            <summary>
            字符串如果操过指定长度则将超出的部分用指定字符串代替
            </summary>
            <param name="p_SrcString">要检查的字符串</param>
            <param name="p_Length">指定长度</param>
            <param name="p_TailString">用于替换的字符串</param>
            <returns>截取后的字符串</returns>
        </member>
        <member name="M:Bigdesk8.NukeString.GetSubString(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            取指定长度的字符串
            </summary>
            <param name="p_SrcString">要检查的字符串</param>
            <param name="p_StartIndex">起始位置</param>
            <param name="p_Length">指定长度</param>
            <param name="p_TailString">用于替换的字符串</param>
            <returns>截取后的字符串</returns>
        </member>
        <member name="M:Bigdesk8.NukeString.GetUnicodeSubString(System.String,System.Int32,System.String)">
            <summary>
            字符串如果操过指定长度则将超出的部分用指定字符串代替
            </summary>
            <param name="str"></param>
            <param name="len"></param>
            <param name="p_TailString">用于替换的字符串</param>
            <returns></returns>
        </member>
        <member name="T:Bigdesk8.Data.SqlServerDbOperator">
            <summary>
            SqlServer 数据库访问类	
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.SqlServerDbOperator._dbConnection">
            <summary>
            表示 SqlServer 数据库的一个打开的连接
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.SqlServerDbOperator._dbTransaction">
            <summary>
            SQL 事务
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.SqlServerDbOperator._isTransacting">
            <summary>
            指示当前是否正处于事务中
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.SqlServerDbOperator._commandTimeout">
            <summary>
            sql命令超时时间
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbOperator.#ctor(System.Configuration.ConnectionStringSettings)">
            <summary>
            构造函数
            </summary>
            <param name="connectionStringSetting">连接字符串</param>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbOperator.#ctor(System.String,Bigdesk8.Data.DataBaseType)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <param name="dataBaseType"></param>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbOperator.#ctor(System.String,Bigdesk8.Data.DataBaseType,System.Int32)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <param name="dataBaseType"></param>
            <param name="commandTimeout"></param>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbOperator.Open">
            <summary>
            打开数据库连接
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbOperator.Close">
            <summary>
            关闭数据库连接
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbOperator.AddDbParameter(Bigdesk8.Data.SqlParameterCollection,System.Data.SqlClient.SqlParameterCollection)">
            <summary>
            将 <see cref="T:Bigdesk8.Data.SqlParameterCollection"/> 对象中的参数加入到 <see cref="T:System.Data.SqlClient.SqlParameterCollection"/> 对象中。
            </summary>
            <param name="sqlParameterCollection"><see cref="T:Bigdesk8.Data.SqlParameterCollection"/> 对象</param>
            <param name="sqlServerSqlParameterCollection"><see cref="T:System.Data.SqlClient.SqlParameterCollection"/> 对象</param>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbOperator.CreateSqlParameterCollection">
            <summary>
            SQL 参数集合
            </summary>
            <returns>一个 <see cref="T:Bigdesk8.Data.SqlParameterCollection"/> 对象。</returns>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbOperator.CreateDbParameter">
            <summary>
            创建 <see cref="T:System.Data.Common.DbParameter"/> 对象的新实例。
            </summary>
            <returns>一个 <see cref="T:System.Data.Common.DbParameter"/> 对象。</returns>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbOperator.BeginTransaction">
            <summary>
            开始数据库事务
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbOperator.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            以指定的隔离级别启动数据库事务。
            </summary>
            <param name="isolationLevel">指定事务的隔离级别。</param>
            <returns>表示新事务的对象。</returns>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbOperator.CommitTransaction">
            <summary>
            提交数据库事务
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbOperator.RollbackTransaction">
            <summary>
            回滚数据库事务
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbOperator.ExeSqlForDataTable(System.String,Bigdesk8.Data.SqlParameterCollection,System.String)">
            <summary>
            执行 SELECT SQL 语句，返回 DataTable
            </summary>
            <param name="selectSQL">执行的 Select SQL 语句</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <param name="dataTableName">数据表名，不必与数据库的一致</param>
            <returns>生成数据集</returns>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbOperator.ExeSqlForDataSet(System.String,Bigdesk8.Data.SqlParameterCollection,System.String)">
            <summary>
            执行 SELECT SQL 语句，返回 DataSet
            </summary>
            <param name="selectSQL">生成数据集的 Select SQL</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <param name="dataTableName">数据表名，不必与数据库的一致</param>
            <returns>生成数据集</returns>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbOperator.ExeSqlForDataSetWithMultiDataTable(System.String,Bigdesk8.Data.SqlParameterCollection)">
            <summary>
            执行 SELECT SQL 语句，返回 DataSet，其中可以同时包含多个DataTable
            </summary>
            <param name="selectSQL">生成数据集的 Select SQL</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <returns>生成数据集</returns>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbOperator.AddTableToDataSet(System.String,Bigdesk8.Data.SqlParameterCollection,System.String,System.Data.DataSet)">
            <summary>
            执行 SELECT SQL 语句，将新数据表加入到 DataSet 中.
            </summary>
            <param name="selectSQL">生成数据集的 Select SQL</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <param name="dataTableName">数据表名，不必与数据库中的一致</param>
            <param name="dataSet">目标数据集</param>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbOperator.ExecuteNonQuerySql(System.String,Bigdesk8.Data.SqlParameterCollection)">
            <summary>
            执行 INSERT/DELETE/UPDATE SQL 语句, 返回受影响的行数,当前为 SELECT SQL 语句时，返回 -1
            </summary>
            <param name="commandSQL">INSERT/DELETE/UPDATE SQL 语句</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <returns>返回受影响的行数</returns>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbOperator.ExecuteNonQuerySql2(System.String,Bigdesk8.Data.SqlParameterCollection)">
            <summary>
            注意，本函数不对commandSQL进行安全处理，以允许批量执行sql语句
            </summary>
            <param name="commandSQL"></param>
            <param name="sqlParameterCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbOperator.Update(System.String,Bigdesk8.Data.SqlParameterCollection,System.Data.DataTable,System.Int32)">
            <summary>
            更新数据表
            </summary>
            <param name="selectSQL">生成数据集的 SELECT SQL 语句</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <param name="dataTable">需要更新的数据集</param>
            <param name="commandTimeout">数据库更新的超时时间,0或负数表示采用缺省设置</param>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbOperator.Update(System.String,Bigdesk8.Data.SqlParameterCollection,System.String,System.Data.DataSet,System.Int32)">
            <summary>
            更新数据集中的某数据表
            </summary>
            <param name="selectSQL">生成数据集的 SELECT SQL 语句</param>
            <param name="sqlParameterCollection">SQL 参数集合</param>
            <param name="dataTableName">数据表名，不必与数据库中的一致</param>
            <param name="dataSet">需要更新的数据集</param>
            <param name="commandTimeout">数据库更新的超时时间,0或负数表示采用缺省设置</param>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbOperator.GetCurrentDateTime">
            <summary>
            返回数据库服务器端当前日期时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbOperator.GetDataReader(System.String,Bigdesk8.Data.SqlParameterCollection,System.Data.CommandBehavior)">
            <summary>
            返回一个SqlDataReader.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbOperator.GetPagedQuerySQL(System.String,System.String,Bigdesk8.Data.PagedData)">
            <summary>
            SQL 分页查询 SQL 语句
            </summary>
            <param name="querySQL">SQL 语句，注意不带排序字段</param>
            <param name="orderby">排序字段，注意：不要带 order by 关键字，如: order1 desc,order2 asc</param>
            <param name="pageData">分页数据</param>
            <returns>返回整理过的分页 SQL 语句</returns>
        </member>
        <member name="M:Bigdesk8.Data.SqlServerDbOperator.GetRowCountQuerySQL(System.String)">
            <summary>
            SQL 查询记录总数语句
            </summary>
            <param name="querySQL">SQL 语句，注意不带排序字段</param>
            <returns>返回记录总数 SQL 语句</returns>
        </member>
        <member name="T:Bigdesk8.ObjectManager">
            <summary>
            对象管理器
            </summary>
        </member>
        <!-- 对于成员“M:Bigdesk8.ObjectManager.CreateObject``1(System.String,System.String,System.Object[])”忽略有格式错误的 XML 注释 -->
        <member name="T:System.Runtime.CompilerServices.ExtensionAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="T:System.Func`1">
            <summary>
            
            </summary>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="T:System.Func`2">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="T:System.Func`3">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <returns></returns>
        </member>
        <member name="T:System.Func`4">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <param name="arg3"></param>
            <returns></returns>
        </member>
        <member name="T:System.Func`5">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <param name="arg3"></param>
            <param name="arg4"></param>
            <returns></returns>
        </member>
        <member name="T:System.Action">
            <summary>
            
            </summary>
        </member>
        <member name="T:System.Action`2">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <param name="arg1"></param>
            <param name="arg2"></param>
        </member>
        <member name="T:System.Action`3">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <param name="arg3"></param>
        </member>
        <member name="T:System.Action`4">
            <summary>
            
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <param name="arg1"></param>
            <param name="arg2"></param>
            <param name="arg3"></param>
            <param name="arg4"></param>
        </member>
        <member name="T:Bigdesk8.Windows.Controls.DBCheckBox">
            <summary>
            <see cref="T:Bigdesk8.Windows.Controls.DBCheckBox"/> 对 <see cref="T:System.Windows.Forms.CheckBox"/> 复选框控件进行功能扩展
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBCheckBox.ItemName">
            <summary>
            数据项名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBCheckBox.QueryValue">
            <summary>
             CheckBox 在查询时,选中与不选中所代表的值
            </summary>
        </member>
        <member name="T:Bigdesk8.Web.JavaScriptManager">
            <summary>
            Web下的脚本处理类
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.TopWindowLocation(System.Web.UI.Page,System.String)">
            <summary>
            在最顶端的窗口打开链接，会留下历史记录
            </summary>
            <param name="page">WEB窗体</param>
            <param name="navigateUrl">URL</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.TopWindowLocation(System.Web.UI.Page,System.String,System.Boolean)">
            <summary>
            在最顶端的窗口打开链接，会留下历史记录
            </summary>
            <param name="page">WEB窗体</param>
            <param name="navigateUrl">URL</param>
            <param name="isScriptOnTop">JS是否在页面顶部</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.ParentWindowLocation(System.Web.UI.Page,System.String)">
            <summary>
            在父窗口打开链接，会留下历史记录
            </summary>
            <param name="page">WEB窗体</param>
            <param name="navigateUrl">URL</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.ParentWindowLocation(System.Web.UI.Page,System.String,System.Boolean)">
            <summary>
            在父窗口打开链接，会留下历史记录
            </summary>
            <param name="page">WEB窗体</param>
            <param name="navigateUrl">URL</param>
            <param name="isScriptOnTop">JS是否在页面顶部</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.WindowLocation(System.Web.UI.Page,System.String)">
            <summary>
            在当前窗口打开链接，会留下历史记录
            </summary>
            <param name="page">WEB窗体</param>
            <param name="navigateUrl">URL</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.WindowLocation(System.Web.UI.Page,System.String,System.Boolean)">
            <summary>
            在当前窗口打开链接，会留下历史记录
            </summary>
            <param name="page">WEB窗体</param>
            <param name="navigateUrl">URL</param>
            <param name="isScriptOnTop">JS是否在页面顶部</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.WindowLocation(System.Web.UI.Page,System.String,System.String,System.Boolean)">
            <summary>
            打开链接，会留下历史记录
            </summary>
            <param name="page">WEB窗体</param>
            <param name="navigateUrl">URL</param>
            <param name="window">JS窗口</param>
            <param name="isScriptOnTop">JS是否在页面顶部</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.TopWindowLocationReplace(System.Web.UI.Page,System.String)">
            <summary>
            在最顶端的窗口打开链接，不会留下历史记录
            </summary>
            <param name="page">WEB窗体</param>
            <param name="navigateUrl">URL</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.TopWindowLocationReplace(System.Web.UI.Page,System.String,System.Boolean)">
            <summary>
            在最顶端的窗口打开链接，不会留下历史记录
            </summary>
            <param name="page">WEB窗体</param>
            <param name="navigateUrl">URL</param>
            <param name="isScriptOnTop">JS是否在页面顶部</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.ParentWindowLocationReplace(System.Web.UI.Page,System.String)">
            <summary>
            在父窗口打开链接，不会留下历史记录
            </summary>
            <param name="page">WEB窗体</param>
            <param name="navigateUrl">URL</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.ParentWindowLocationReplace(System.Web.UI.Page,System.String,System.Boolean)">
            <summary>
            在父窗口打开链接，不会留下历史记录
            </summary>
            <param name="page">WEB窗体</param>
            <param name="navigateUrl">URL</param>
            <param name="isScriptOnTop">JS是否在页面顶部</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.WindowLocationReplace(System.Web.UI.Page,System.String)">
            <summary>
            在当前窗口打开链接，不会留下历史记录
            </summary>
            <param name="page">WEB窗体</param>
            <param name="navigateUrl">URL</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.WindowLocationReplace(System.Web.UI.Page,System.String,System.Boolean)">
            <summary>
            在当前窗口打开链接，不会留下历史记录
            </summary>
            <param name="page">WEB窗体</param>
            <param name="navigateUrl">URL</param>
            <param name="isScriptOnTop">JS是否在页面顶部</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.WindowLocationReplace(System.Web.UI.Page,System.String,System.String,System.Boolean)">
            <summary>
            打开链接，不会留下历史记录
            </summary>
            <param name="page">WEB窗体</param>
            <param name="navigateUrl">URL</param>
            <param name="window">JS窗口</param>
            <param name="isScriptOnTop">JS是否在页面顶部</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.TopWindowRefresh(System.Web.UI.Page)">
            <summary>
            刷新最顶端的窗口
            </summary>
            <param name="page">WEB窗体</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.TopWindowRefresh(System.Web.UI.Page,System.Boolean)">
            <summary>
            刷新最顶端的窗口
            </summary>
            <param name="page">WEB窗体</param>
            <param name="isScriptOnTop">JS是否在页面顶部</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.ParentWindowRefresh(System.Web.UI.Page)">
            <summary>
            刷新父窗口
            </summary>
            <param name="page">WEB窗体</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.ParentWindowRefresh(System.Web.UI.Page,System.Boolean)">
            <summary>
            刷新父窗口
            </summary>
            <param name="page">WEB窗体</param>
            <param name="isScriptOnTop">JS是否在页面顶部</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.WindowRefresh(System.Web.UI.Page)">
            <summary>
            刷新当前窗口
            </summary>
            <param name="page">WEB窗体</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.WindowRefresh(System.Web.UI.Page,System.Boolean)">
            <summary>
            刷新当前窗口
            </summary>
            <param name="page">WEB窗体</param>
            <param name="isScriptOnTop">JS是否在页面顶部</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.WindowRefresh(System.Web.UI.Page,System.String,System.Boolean)">
            <summary>
            刷新指定窗口
            </summary>
            <param name="page">WEB窗体</param>
            <param name="window">JS窗口</param>
            <param name="isScriptOnTop">JS是否在页面顶部</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.OpenNewWindow(System.Web.UI.Page,System.String)">
            <summary>
            打开一个新的默认外观的窗口
            </summary>
            <param name="page">WEB窗体</param>
            <param name="navigateUrl">URL</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.OpenNewWindow(System.Web.UI.Page,System.String,System.Boolean)">
            <summary>
            打开一个新的默认外观的窗口
            </summary>
            <param name="page">WEB窗体</param>
            <param name="navigateUrl">URL</param>
            <param name="isScriptOnTop">JS是否在页面顶部</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.OpenNewWindow2(System.Web.UI.Page,System.String,System.Boolean)">
            <summary>
            打开一个新的窗口, 无菜单栏, 无状态栏, 无工具栏, 位于屏幕左上角
            </summary>
            <param name="page">WEB窗体</param>
            <param name="navigateUrl">URL</param>
            <param name="scrollbarsVisible">滚动条是否可见</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.OpenNewWindow2(System.Web.UI.Page,System.String,System.Boolean,System.Boolean)">
            <summary>
            打开一个新的窗口, 无菜单栏, 无状态栏, 无工具栏, 位于屏幕左上角
            </summary>
            <param name="page">WEB窗体</param>
            <param name="navigateUrl">URL</param>
            <param name="scrollbarsVisible">滚动条是否可见</param>
            <param name="isScriptOnTop">JS是否在页面顶部</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.WindowAlert(System.Web.UI.Page,System.String)">
            <summary>
            在窗口中显示警告信息
            </summary>
            <param name="page">WEB窗体</param>
            <param name="message">警告信息</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.WindowAlert(System.Web.UI.Page,System.String,System.Boolean)">
            <summary>
            在窗口中显示警告信息
            </summary>
            <param name="page">WEB窗体</param>
            <param name="message">警告信息</param>
            <param name="isScriptOnTop">JS是否在页面顶部</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.WindowClose(System.Web.UI.Page)">
            <summary>
            关闭窗口
            </summary>
            <param name="page">WEB窗体</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.WindowClose(System.Web.UI.Page,System.Boolean)">
            <summary>
            关闭窗口
            </summary>
            <param name="page">WEB窗体</param>
            <param name="isScriptOnTop">JS是否在页面顶部</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.TopWindowClose(System.Web.UI.Page)">
            <summary>
            关闭最顶端的窗口
            </summary>
            <param name="page">WEB窗体</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.TopWindowClose(System.Web.UI.Page,System.Boolean)">
            <summary>
            关闭最顶端的窗口
            </summary>
            <param name="page">WEB窗体</param>
            <param name="isScriptOnTop">JS是否在页面顶部</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.WindowExecuteString(System.Web.UI.Page,System.String)">
            <summary>
            执行脚本
            </summary>
            <param name="page">WEB窗体</param>
            <param name="javascriptString">需要执行的 javascript 脚本字符串</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.WindowExecuteString(System.Web.UI.Page,System.String,System.Boolean)">
            <summary>
            执行脚本
            </summary>
            <param name="page">WEB窗体</param>
            <param name="javascriptString">需要执行的 javascript 脚本字符串</param>
            <param name="isScriptOnTop">JS是否在页面顶部</param>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.DealString(System.String)">
            <summary>
            处理参数格式
            </summary>
            <param name="param">格式</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Web.JavaScriptManager.RegisterClientScript(System.Web.UI.Page,System.String,System.Boolean)">
            <summary>
            注册脚本
            </summary>
            <param name="page">WEB窗体</param>
            <param name="script">脚本</param>
            <param name="isScriptOnTop">JS是否在页面顶部</param>
        </member>
        <member name="T:Bigdesk8.Web.Controls.ImageEx">
            <summary>
            支持把内存流中的图片直接显示到页面
            用法：
            在web配置文件<httpHandlers></httpHandlers>中添加
            <add verb="*" path="ImageExHandle.axd" type="Bigdesk8.Web.ImageExHandle,Bigdesk8" validate="false"/>
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.ImageEx.ImageStream">
            <summary>
            存储图像数据的内存流
            </summary>
        </member>
        <member name="T:Bigdesk8.Web.Controls.DBDatePicker">
            <summary>
            日期控件
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBDatePicker.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:Bigdesk8.Web.Controls.DBDatePicker._ErrorMessage">
            <summary>
            错误信息，如果不为String.Empty,则有错误
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBDatePicker.ItemCheck">
            <summary>
            检查类型是否匹配，长度是否超长，必填项是否已填，取值范围是否正确等等.....
            </summary>
            <returns>检查成功返回true,不成功返回false</returns>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBDatePicker.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            将需要呈现的 HTML 属性和样式添加到指定的 <see cref="T:System.Web.UI.HtmlTextWriter"/> 实例中。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBDatePicker.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            处理 <see cref="T:Bigdesk8.Web.Controls.DBTextBox"/> 控件的回发数据。
            当 ReadOnly=True 时, 客户端JS对控件赋值, 服务器端可以接收到.
            </summary>
            <param name="postDataKey">已发送集合中引用要加载的内容的索引</param>
            <param name="postCollection">发送到服务器的集合</param>
            <returns>如果发送内容与上次的发送内容不同，则为 true；否则为 false。</returns>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBDatePicker.ItemName">
            <summary>
            数据项名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBDatePicker.ItemNameCN">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBDatePicker.ItemRelation">
            <summary>
            数据项与数据的关系
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBDatePicker.ItemIsRequired">
            <summary>
            是否为必填项
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBDatePicker.ItemDefaultData">
            <summary>
            默认数据，默认值为string.Empty
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBDatePicker.MinData">
            <summary>
            最小值，注意：DBNull，string.Empty自动转换成null
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBDatePicker.MaxData">
            <summary>
            最大值，注意：DBNull，string.Empty自动转换成null
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBDatePicker.MaxLength">
            <summary>
            获取或设置文本框中最多允许的字符数
            </summary>
        </member>
        <member name="T:Bigdesk8.Data.DataRelation">
            <summary>
            数据项与数据关系
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.DataRelation.Equal">
            <summary>
            等于
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.DataRelation.NotEqual">
            <summary>
            不等于
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.DataRelation.GreaterThan">
            <summary>
            大于
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.DataRelation.LessThan">
            <summary>
            小于
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.DataRelation.GreaterThanOrEqual">
            <summary>
            大于等于
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.DataRelation.LessThanOrEqual">
            <summary>
            小于等于
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.DataRelation.Like">
            <summary>
            字符串匹配
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.DataRelation.LeftLike">
            <summary>
            左边字符串匹配
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.DataRelation.RightLike">
            <summary>
            右边字符串匹配
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.WorkflowTemplateManager.BusinessWorkflowTemplate">
            <summary>
            工作流模板信息类，创建时，所有属性不能为NULL
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.WorkflowTemplateManager.BusinessWorkflowTemplate.SystemName">
            <summary>
            系统名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.WorkflowTemplateManager.BusinessWorkflowTemplate.ModuleName">
            <summary>
            模块名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.WorkflowTemplateManager.BusinessWorkflowTemplate.CategoryName">
            <summary>
            种类名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.WorkflowTemplateManager.BusinessWorkflowTemplate.TemplateID">
            <summary>
            模板编号GUID号
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.WorkflowTemplateManager.BusinessWorkflowTemplate.TemplateContent">
            <summary>
            模板内容
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.WorkflowTemplateManager.BusinessWorkflowTemplate.TemplateDesc">
            <summary>
            模板说明
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.WorkflowTemplateManager.BusinessWorkflowTemplate.CreateDateTime">
            <summary>
            创建日期时间，格式为yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.WorkflowTemplateManager.BusinessWorkflowTemplate.ModifyDateTime">
            <summary>
            最后修改日期时间，格式为yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.LogManager.BusinessLog">
            <summary>
            日志类，创建时，所有属性不能为NULL
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.LogManager.BusinessLog.LogID">
            <summary>
            流水号
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.LogManager.BusinessLog.SystemName">
            <summary>
            系统名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.LogManager.BusinessLog.ModuleName">
            <summary>
            模块名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.LogManager.BusinessLog.CategoryName">
            <summary>
            种类名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.LogManager.BusinessLog.KeyString">
            <summary>
            主键标识
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.LogManager.BusinessLog.Operation">
            <summary>
            操作
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.LogManager.BusinessLog.PriorStatus">
            <summary>
            操作前状态
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.LogManager.BusinessLog.PostStatus">
            <summary>
            操作后状态
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.LogManager.BusinessLog.MessageInfo">
            <summary>
            信息，意见等
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.LogManager.BusinessLog.OperatorID">
            <summary>
            操作人LoginId
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.LogManager.BusinessLog.OperatorName">
            <summary>
            操作人名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.LogManager.BusinessLog.OperateDateTime">
            <summary>
            操作日期时间
            </summary>
        </member>
        <member name="T:Bigdesk8.Web.Controls.SubmitButton">
            <summary>
            <see cref="T:Bigdesk8.Web.Controls.SubmitButton"/> 提交数据按钮(可防止重复点击)，可作为保存，更新等操作按钮
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.SubmitButton.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.SubmitButton.UseSubmitBehavior">
            <summary>
            本控件使用 ASP.NET 回发机制。返回值总是 false;
            </summary>
        </member>
        <member name="T:Bigdesk8.Web.Controls.HttpUploadHandler">
            <summary>
            文件上传服务抽象类 IHttpHandler
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.HttpUploadHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.HttpUploadHandler.UploadFile(System.String,System.String,System.Byte[],System.Boolean,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            上传文件
            </summary>
            <param name="fileID">文件标识</param>
            <param name="fileName">文件名称</param>
            <param name="data">数据</param>
            <param name="isFirstChunk">是否是第一个文件块</param>
            <param name="isLastChunk">是否是最后一个文件块</param>
            <param name="customParams">自定义参数</param>
            <returns>返回文件标识</returns>
            <returns>返回SHA1散列值</returns>
        </member>
        <member name="M:Bigdesk8.Web.Controls.HttpUploadHandler.CancelUpload(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            取消上传
            </summary>
            <param name="fileID">文件标识</param>
            <param name="customParams">自定义参数</param>
            <returns>取消是否成功</returns>
        </member>
        <member name="M:Bigdesk8.Web.Controls.HttpUploadHandler.DeleteFile(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            删除文件
            </summary>
            <param name="fileID">文件标识</param>
            <param name="customParams">自定义参数</param>
            <returns>删除是否成功</returns>
        </member>
        <member name="M:Bigdesk8.Web.Controls.HttpUploadHandler.GetViewFileUrl(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            获得查看文件地址
            </summary>
            <param name="fileID">文件标识</param>
            <param name="customParams">自定义参数</param>
            <returns></returns>
        </member>
        <member name="P:Bigdesk8.Web.Controls.HttpUploadHandler.HttpContext">
            <summary>
            HTTP请求上下文
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.HttpUploadHandler.IsReusable">
            <summary>
            
            </summary>
        </member>
        <member name="T:Bigdesk8.Web.Controls.DBMemo">
            <summary>
            普通文本格式，将换行符替换成HTML标签<br/>
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBMemo.#ctor">
            <summary>
            构造函数
            </summary>
            原先生成到客户端的html控件P的显示效果不易调控，故改成了html控件Label。2012-11-12 缪卫华
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBMemo.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            将 <see cref="T:Bigdesk8.Web.Controls.DBMemo"/> 的内容呈现到指定的编写器中。
            </summary>
            <param name="writer">向客户端呈现 HTML 内容的输出流。</param> 
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBMemo.ItemName">
            <summary>
            数据项名称
            </summary>
        </member>
        <member name="T:Bigdesk8.MobileServiceChannel.LMSChannelFactory">
            <summary>
            创建精简移动服务通道的工厂
            </summary>
        </member>
        <member name="M:Bigdesk8.MobileServiceChannel.LMSChannelFactory.CreateLMSChannel(System.String)">
            <summary>
            创建精简移动服务通道
            </summary>
            <param name="channelName">通道名称</param>
            <returns></returns>
        </member>
        <member name="T:Bigdesk8.Windows.Controls.PowerDataGrid">
            <summary>
            
            </summary>
            参考自http://blog.appdoc.cn/2011/03/10/splitpager-control-used-in-datagridview-of-winform/
        </member>
        <member name="F:Bigdesk8.Windows.Controls.PowerDataGrid.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:Bigdesk8.Windows.Controls.PowerDataGrid.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:Bigdesk8.Windows.Controls.PowerDataGrid.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="F:Bigdesk8.Windows.Controls.PowerDataGrid.pageIndex">
            <summary>
            当前所在的页面
            </summary>
        </member>
        <member name="F:Bigdesk8.Windows.Controls.PowerDataGrid.pageSize">
            <summary>
            每页面显示记录的个数
            </summary>
        </member>
        <member name="F:Bigdesk8.Windows.Controls.PowerDataGrid.pageCount">
            <summary>
            页面的总数
            </summary>
        </member>
        <member name="F:Bigdesk8.Windows.Controls.PowerDataGrid.recordCount">
            <summary>
            数据记录的总数
            </summary>
        </member>
        <member name="T:Bigdesk8.Web.CookieManager">
            <summary>
            Cookie 管理
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.CookieManager.WriteCookie(System.String,System.String)">
            <summary>
            写cookie值
            </summary>
            <param name="strName">名称</param>
            <param name="strValue">值</param>
        </member>
        <member name="M:Bigdesk8.Web.CookieManager.WriteCookie(System.String,System.String,System.String)">
            <summary>
            写cookie值
            </summary>
            <param name="strName">名称</param>
            <param name="key">键</param>
            <param name="strValue">值</param>
        </member>
        <member name="M:Bigdesk8.Web.CookieManager.WriteCookie(System.String,System.String,System.Int32)">
            <summary>
            写cookie值
            </summary>
            <param name="strName">名称</param>
            <param name="strValue">值</param>
            <param name="expires">过期时间(分钟)</param>
        </member>
        <member name="M:Bigdesk8.Web.CookieManager.GetCookie(System.String)">
            <summary>
            读cookie值
            </summary>
            <param name="strName">名称</param>
            <returns>cookie值</returns>
        </member>
        <member name="M:Bigdesk8.Web.CookieManager.GetCookie(System.String,System.String)">
            <summary>
            读cookie值
            </summary>
            <param name="strName">名称</param>
            <param name="key">键</param>
            <returns>cookie值</returns>
        </member>
        <member name="T:Bigdesk8.Web.Controls.DBHtml">
            <summary>
            HTML格式控件
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBHtml.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBHtml.ItemName">
            <summary>
            数据项名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBHtml.Text">
            <summary>
            获取或设置 <see cref="T:Bigdesk8.Web.Controls.DBHtml"/> 控件的文本内容。返回控件的文本内容。默认值为 String.Empty。
            </summary>
        </member>
        <member name="T:Bigdesk8.Data.SqlServer2005DbOperator">
            <summary>
            SQL Server 2005 数据库访问类	
            </summary>
            一般来说，DAL能在sql2005上运行，也就能在sql2008上运行，则DAL中的数据库访问类就不能说死是访问sql2005，还是sql2008。
            这时，不管DAL中的数据库访问类是从SqlServer2005DbOperator继承，还是SqlServer2008DbOperator（尚未定义）继承，都会造成名字上的混淆。
            故将本类的功能直接合并到SqlServerDBOperator中。
        </member>
        <member name="M:Bigdesk8.Data.SqlServer2005DbOperator.#ctor(System.Configuration.ConnectionStringSettings)">
            <summary>
            构造函数
            </summary>
            <param name="connectionStringSetting">连接字符串</param>
        </member>
        <member name="M:Bigdesk8.Data.SqlServer2005DbOperator.GetPagedQuerySQL(System.String,System.String,Bigdesk8.Data.PagedData)">
            <summary>
            SQL 分页查询 SQL 语句
            </summary>
            <param name="querySQL">SQL 语句，注意不带排序字段</param>
            <param name="orderby">排序字段，注意：不要带 order by 关键字，如: order1 desc,order2 asc</param>
            <param name="pageData">分页数据</param>
            <returns>返回整理过的分页 SQL 语句</returns>
        </member>
        <member name="M:Bigdesk8.Data.SqlServer2005DbOperator.GetRowCountQuerySQL(System.String)">
            <summary>
            SQL 查询记录总数语句
            </summary>
            <param name="querySQL">SQL 语句，注意不带排序字段</param>
            <returns>返回记录总数 SQL 语句</returns>
        </member>
        <member name="T:Bigdesk8.Data.PagedData">
            <summary>
            与分页相关的属性，方便执行分页操作。无法继承此类。
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.PagedData.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="recordCount">所有记录的总数</param>
            <param name="pageSize">每页显示的记录数</param>
            <param name="currentPageIndex">当前页索引,从 0 开始</param>
        </member>
        <member name="M:Bigdesk8.Data.PagedData.CalculatePagedData">
            <summary>
            计算分页数据
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.PagedData.CurrentPageIndex">
            <summary>
            获取当前页的索引，从 0 开始
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.PagedData.PageSize">
            <summary>
            获取要在每页上显示的记录数，从 1 开始
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.PagedData.PageCount">
            <summary>
            获取所有记录所需要的总页数，从 0 开始
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.PagedData.RecordCountInPage">
            <summary>
            获取当前页显示的记录数，从 0 开始
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.PagedData.RecordCount">
            <summary>
            获取所有记录的总数，从 0 开始
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.PagedData.IsFirstPage">
            <summary>
            获取一个值，该值指示当前页是否是首页。如果当前页是首页，则为 true；否则为 false。
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.PagedData.IsLastPage">
            <summary>
            获取一个值，该值指示当前页是否是最后一页。如果当前页是最后一页，则为 true；否则为 false。
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.PagedData.PreviousPageIndex">
            <summary>
            获取上一页索引，从 0 开始
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.PagedData.NextPageIndex">
            <summary>
            获取下一页索引，从 0 开始
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.PagedData.PageCountRemain">
            <summary>
            获取当前页之后未显示的页的总数，从 0 开始
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.PagedData.RecordCountRemain">
            <summary>
            获取在当前页之后还未显示的剩余记录数，从 0 开始
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.PagedData.FirstIndexInPage">
            <summary>
            获取页面中显示的首条记录的索引，从 0 开始
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.PagedData.LastIndexInPage">
            <summary>
            获取页面中显示的最后一条记录的索引，从 0 开始
            </summary>
        </member>
        <member name="T:Bigdesk8.Ext.FilterTranslator">
            <summary>
            将检索规则 翻译成 where sql 语句,并生成相应的参数列表
            如果遇到{CurrentUserID}这种，翻译成对应的参数
            </summary>
            原始作者：ligerUI的作者
        </member>
        <member name="F:Bigdesk8.Ext.FilterTranslator.paramCounter">
            <summary>
            参数计数器
            </summary>
        </member>
        <member name="M:Bigdesk8.Ext.FilterTranslator.GetOperatorQueryText(System.String)">
            <summary>
            获取操作符的SQL Text
            </summary>
            <param name="op"></param>
            <returns></returns> 
        </member>
        <member name="T:Bigdesk8.Business.StateManager.IStateManager">
            <summary>
            业务信息状态管理接口
            </summary>
        </member>
        <member name="M:Bigdesk8.Business.StateManager.IStateManager.GetNextStateIfPast(System.Int32,System.String,System.Int32)">
            <summary>
            获取审核通过的下一状态
            </summary>
        </member>
        <member name="M:Bigdesk8.Business.StateManager.IStateManager.GetNextStateIfRejected(System.Int32,System.String,System.Int32)">
            <summary>
            获取审核不通过的下一状态
            </summary>
            <param name="systemID"></param>
            <param name="moduleCode"></param>
            <param name="currentOperateState"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.StateManager.IStateManager.GetNextCancelStateWhenCancelled(System.Int32,System.String,System.Int32)">
            <summary>
            获取撤销操作后的状态下可进行的撤销操作
            </summary>
            <param name="systemID"></param>
            <param name="moduleCode"></param>
            <param name="currentCancelState"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.StateManager.IStateManager.GetNextOperateStateWhenCancelled(System.Int32,System.String,System.Int32)">
            <summary>
            获取撤销操作后的状态下可进行的操作
            </summary>
            <param name="systemID"></param>
            <param name="moduleCode"></param>
            <param name="currentCancelState"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.StateManager.IStateManager.GetFollowingStateWhenCancelled(System.Int32,System.String,System.Int32)">
            <summary>
            获取撤销操作后，数据记录接下来的总体状态情况
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.StateManager.IStateManager.DB">
            <summary>
            数据库访问对象
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.StateManager.RecordState">
            <summary>
            业务记录的相关状态结构
            </summary>
        </member>
        <member name="M:Bigdesk8.Windows.Controls.GridViewPageEventArgs.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="newPageIndex">新页面的index</param>
        </member>
        <member name="T:Bigdesk8.Web.Controls.DBTextList">
            <summary>
            普通文本格式列表，换行符不做特殊处理
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBTextList.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            将控件呈现给指定的 HTML 编写器。
            </summary>
            <param name="writer">接收控件内容的 <see cref="T:System.Web.UI.HtmlTextWriter"/> 对象。</param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBTextList.DeleteUnChecked">
            <summary>
            删除未选中项
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBTextList.RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)">
            <summary>
            用指定的信息呈现列表中的项
            </summary>
            <param name="itemType"><see cref="T:System.Web.UI.WebControls.ListItemType"/> 枚举值之一</param>
            <param name="repeatIndex">指定列表控件中项的位置的序号索引。</param>
            <param name="repeatInfo">表示用于呈现列表中的项的信息。</param>
            <param name="writer">表示要在客户端呈现 HTML 内容的输出流。</param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBTextList.CreateControlStyle">
            <summary>
            创建内部用来实现所有与样式有关的属性的样式对象。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBTextList.GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)">
            <summary>
            检索列表控件中指定索引位置的指定项类型的样式。
            </summary>
            <param name="itemType"><see cref="T:System.Web.UI.WebControls.ListItemType"/> 枚举值之一</param>
            <param name="repeatIndex">指定列表控件中项的位置的序号索引。</param>
            <returns></returns>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextList.CheckedText">
            <summary>
            选中项的标识
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextList.UnCheckedText">
            <summary>
            未选中项的标识
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextList.IsShowUnchecked">
            <summary>
            是否显示未选中项，默认值true，显示
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextList.SplitString">
            <summary>
            内容分隔符
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextList.AutoPostBack">
            <summary>
            获取一个值，该值指示当用户更改列表中的选定内容时是否自动产生向服务器的回发。默认值为 false。
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextList.CausesValidation">
            <summary>
            获取一个值，该值指示在单击从 System.Web.UI.WebControls.ListControl 类派生的控件时是否执行验证。
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextList.CellPadding">
            <summary>
            获取或设置单元格内容和单元格边框之间的空间量。
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextList.CellSpacing">
            <summary>
            获取或设置表单元格之间的距离。
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextList.RepeatColumns">
            <summary>
            获取或设置要显示的列数。
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextList.RepeatDirection">
            <summary>
            获取或设置一个值，该值指示控件是垂直显示还是水平显示。默认值为 Vertical
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextList.RepeatLayout">
            <summary>
            获取或设置复选框的布局。默认值为 Table。
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextList.TextAlign">
            <summary>
            获取或设置组内复选框的文本对齐方式。默认值为 Right。
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextList.RepeatedItemCount">
            <summary>
            获取列表项数
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextList.HasFooter">
            <summary>
            获取一个值，该值指示是否包脚注部分
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextList.HasHeader">
            <summary>
            获取一个值，该值指示是否包含标题节。
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextList.HasSeparators">
            <summary>
            获取一个值，该值指示是否包含列表项之间的分隔符。
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBTextList.ItemName">
            <summary>
            数据项名称
            </summary>
        </member>
        <member name="T:Bigdesk8.Data.DBOperatorFactory">
            <summary>
            创建一个 Factory 类，实现自动数据库切换的管理
            (随着数据库种类的增加，判断的方法可能会有所变化，应当根据实际情况来做相应的调整)
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.DBOperatorFactory.GetDBOperator(System.Configuration.ConnectionStringSettings)">
            <summary>
            连接数据源，创建数据库操作对象
            </summary>
            <param name="connectionStringSetting">连接数据源的字符串</param>
            <returns>数据库操作对象</returns>
        </member>
        <member name="M:Bigdesk8.Data.DBOperatorFactory.GetDBOperator(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <param name="dataBaseType"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Data.DBOperatorFactory.GetDBOperator(System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="connectionString"></param>
            <param name="dataBaseType"></param>
            <returns></returns>
        </member>
        <member name="T:Bigdesk8.Data.DataBaseType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.DataBaseType.SQLSERVER2000">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.DataBaseType.SQLSERVER2005">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.DataBaseType.SQLSERVER2008">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.DataBaseType.ORACLE11G">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.DataBaseType.ACCESS2000">
            <summary>
            
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.UserRightManager.IUserRightInfo">
            <summary>
            用户权限信息接口，主要针对一个用户权限信息
            </summary>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightInfo.HasRole(System.Int32)">
            <summary>
            判断用户是否有某个角色
            </summary>
            <param name="roleID">角色编号</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightInfo.HasRole(System.String)">
            <summary>
            判断用户是否有某个角色
            </summary>
            <param name="roleName">角色名称</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightInfo.HasRight(System.Int32)">
            <summary>
            判断用户是否具有权限
            </summary>
            <param name="systemID">系统编号</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightInfo.HasRight(System.Int32,System.String)">
            <summary>
            判断用户对某个模块是否具有权限
            </summary>
            <param name="systemID">系统编号</param>
            <param name="moduleCode">模块代码</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightInfo.HasRight(System.Int32,System.String,System.String)">
            <summary>
            判断用户对某个模块的某个操作是否具有权限
            </summary>
            <param name="systemID">系统编号</param>
            <param name="moduleCode">模块代码</param>
            <param name="operateCode">操作代码</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightInfo.HasRight(System.Int32,System.String,System.String,System.String)">
            <summary>
            判断用户对某个模块的某个操作的某个业务数据分类是否具有权限
            </summary>
            <param name="systemID">系统编号</param>
            <param name="moduleCode">模块代码</param>
            <param name="operateCode">操作代码</param>
            <param name="dataTypeCode">业务数据分类代码</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightInfo.HasRight2(System.Int32,System.String)">
            <summary>
            判断用户对某个操作是否具有权限
            </summary>
            <param name="systemID">系统编号</param>
            <param name="operateCode">操作代码</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightInfo.SelectDataType(System.Int32,System.String)">
            <summary>
            获得用户具有操作权限的业务数据分类
            </summary>
            <param name="systemID">系统编号</param>
            <param name="moduleCode">模块代码</param>
            <returns>返回值key=DataTypeCode,value=DataTypeName</returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightInfo.SelectDataType(System.Int32,System.String,System.String)">
            <summary>
            获得用户具有操作权限的业务数据分类
            </summary>
            <param name="systemID">系统编号</param>
            <param name="moduleCode">模块代码</param>
            <param name="operateCode">操作代码</param>
            <returns>返回值key=DataTypeCode,value=DataTypeName</returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightInfo.SelectDataType2(System.Int32,System.String)">
            <summary>
            获得用户具有操作权限的业务数据分类
            </summary>
            <param name="systemID">系统编号</param>
            <param name="operateCode">操作代码</param>
            <returns>返回值key=DataTypeCode,value=DataTypeName</returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightInfo.SelectModule(System.Int32)">
            <summary>
            获得用户的模块
            </summary>
            <param name="systemID">系统编号</param>
            <returns>返回值key=ModuleCode,value=ModuleName</returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightInfo.SelectModule(System.Int32,System.String)">
            <summary>
            获得用户具有操作权限的模块
            </summary>
            <param name="systemID">系统编号</param>
            <param name="operateCode">操作代码</param>
            <returns>返回值key=ModuleCode,value=ModuleName</returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightInfo.SelectModuleDataType(System.Int32)">
            <summary>
            获得用户的模块业务数据分类
            </summary>
            <param name="systemID">系统编号</param>
            <returns>返回值key=ModuleCode;DataTypeCode,value=ModuleName;DataTypeName</returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.IUserRightInfo.SelectModuleDataType(System.Int32,System.String)">
            <summary>
            获得用户的模块业务数据分类
            </summary>
            <param name="systemID">系统编号</param>
            <param name="operateCode">操作代码</param>
            <returns>返回值key=ModuleCode;DataTypeCode,value=ModuleName;DataTypeName</returns>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.IUserRightInfo.DB">
            <summary>
            数据库访问对象
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.IUserRightInfo.Exists">
            <summary>
            用户是否存在
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.IUserRightInfo.IsGuest">
            <summary>
            用户是否是匿名用户
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.IUserRightInfo.UserID">
            <summary>
            用户编号
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.IUserRightInfo.UserName">
            <summary>
            用户名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.IUserRightInfo.LoginName">
            <summary>
            登录名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.IUserRightInfo.OrgUnitName">
            <summary>
            科室  张鎏添加
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.IUserRightInfo.CountOfUserMatched">
            <summary>
            符合构造函数条件的用户的个数
            </summary>
            该死的数据库中可能存在重复的用户记录
        </member>
        <member name="T:Bigdesk8.Business.DebugManager.DebugManagerFactory">
            <summary>
            调试信息管理
            </summary>
        </member>
        <member name="M:Bigdesk8.Business.DebugManager.DebugManagerFactory.CreateDebugManager(System.String)">
            <summary>
            获取调试信息管理器
            </summary>
            <param name="debugerName">debugerName</param>
            <returns>返回指定的调试信息管理器</returns>
        </member>
        <member name="T:Bigdesk8.Business.DebugManager.DBDebugManager">
            <summary>
            调试信息管理
            </summary>
        </member>
        <member name="M:Bigdesk8.Business.DebugManager.DBDebugManager.AddDebug(Bigdesk8.Business.DebugManager.BusinessDebug)">
            <summary>
            添加调试信息
            </summary>
            <param name="businessDebug">调试信息</param>
            <returns>返回调试信息</returns>
        </member>
        <member name="M:Bigdesk8.Business.DebugManager.DBDebugManager.GetDebug(System.Int64)">
            <summary>
            获得调试信息
            </summary>
            <param name="debugID">调试信息编号</param>
            <returns>返回调试信息</returns>
        </member>
        <member name="M:Bigdesk8.Business.DebugManager.DBDebugManager.GetDebug(System.String,System.TimeSpan)">
            <summary>
            获得调试信息
            </summary>
            <param name="debugMessage">查询条件</param>
            <param name="timeSpan">最近多长时间</param>
            <returns>返回符合条件的调试信息</returns>
        </member>
        <member name="P:Bigdesk8.Business.DebugManager.DBDebugManager.DB">
            <summary>
            数据库访问对象
            </summary>
        </member>
        <member name="T:Bigdesk8.Windows.Controls.DBComboBox">
            <summary>
            只允许从中选择一项的下拉列表控件
            </summary>
        </member>
        <member name="F:Bigdesk8.Windows.Controls.DBComboBox._ErrorMessage">
            <summary>
            错误信息，如果不为String.Empty,则有错误
            </summary>
        </member>
        <member name="M:Bigdesk8.Windows.Controls.DBComboBox.ItemCheck">
            <summary>
            检查类型是否匹配，长度是否超长，必填项是否已填，取值范围是否正确等等.....
            </summary>
            <returns>检查成功返回true,不成功返回false</returns>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBComboBox.ItemNameCN">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBComboBox.ItemIsRequired">
            <summary>
            是否为必填项
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBComboBox.ItemName">
            <summary>
            Value 数据项名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBComboBox.ItemType">
            <summary>
            Value 数据类型
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBComboBox.ItemRelation">
            <summary>
            Value 数据项与数据的关系
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBComboBox.TextItemName">
            <summary>
            Text 数据项名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBComboBox.TextItemType">
            <summary>
            Text 数据类型
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBComboBox.TextItemRelation">
            <summary>
            Text 数据项与数据的关系
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBComboBox.SelectedValue">
            <summary>
            WinForm中，如果ComboBox没用数据源绑定方式绑定数据，那么SelectedValue属性根本就无效的，
            使用这个属性得到的值都是null，故进行了重写。
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBComboBox.SelectedText">
            <summary>
            WinForm中，如果ComboBox没用数据源绑定方式绑定数据，那么SelectedText属性根本就无效的，
            使用这个属性得到的值都是null，故进行了重写。
            </summary>
        </member>
        <member name="P:Bigdesk8.Windows.Controls.DBComboBox.IsAutoAddItem">
            <summary>
            当列表中可选项不存在时，是否自动添加
            </summary>
        </member>
        <member name="T:Bigdesk8.Web.Controls.DBPasswordBox">
            <summary>
            密码文本框控件
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBPasswordBox.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:Bigdesk8.Web.Controls.DBPasswordBox._ErrorMessage">
            <summary>
            错误信息，如果不为String.Empty,则有错误
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBPasswordBox.ItemCheck">
            <summary>
            检查类型是否匹配，长度是否超长，必填项是否已填，取值范围是否正确等等.....
            </summary>
            <returns>检查成功返回true,不成功返回false</returns>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBPasswordBox.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            将需要呈现的 HTML 属性和样式添加到指定的 <see cref="T:System.Web.UI.HtmlTextWriter"/> 实例中。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBPasswordBox.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            处理 <see cref="T:Bigdesk8.Web.Controls.DBTextBox"/> 控件的回发数据。
            当 ReadOnly=True 时, 客户端JS对控件赋值, 服务器端可以接收到.
            </summary>
            <param name="postDataKey">已发送集合中引用要加载的内容的索引</param>
            <param name="postCollection">发送到服务器的集合</param>
            <returns>如果发送内容与上次的发送内容不同，则为 true；否则为 false。</returns>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBPasswordBox.ItemName">
            <summary>
            数据项名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBPasswordBox.ItemNameCN">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBPasswordBox.ItemIsRequired">
            <summary>
            是否为必填项
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBPasswordBox.ItemDefaultData">
            <summary>
            默认数据，默认值为string.Empty
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBPasswordBox.MinLength">
            <summary>
            获取或设置文本框中最少的字符数。如果为0，则不检查长度。默认值为 0。
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBPasswordBox.MaxLength">
            <summary>
            获取或设置文本框中最多允许的字符数。如果为0，则不检查长度。默认值为 0。
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBPasswordBox.TextMode">
            <summary>
            获取文本框的单行模式
            </summary>
        </member>
        <member name="T:Bigdesk8.Web.Controls.DBCheckBox">
            <summary>
            <see cref="T:Bigdesk8.Web.Controls.DBCheckBox"/> 对 <see cref="T:System.Web.UI.WebControls.CheckBox"/> 复选框控件进行功能扩展
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBCheckBox.ItemName">
            <summary>
            数据项名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBCheckBox.QueryValue">
            <summary>
             CheckBox 在查询时,选中与不选中所代表的值
            </summary>
        </member>
        <member name="T:Bigdesk8.Data.OleDbParameterCollection">
            <summary>
            SQL 参数集合
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.OleDbParameterCollection.Add(System.String,System.Object)">
            <summary>
            在给定参数名称和参数值的情况下，将 <see cref="T:System.Data.OleDb.OleDbParameter"/> 添加到 <see cref="T:Bigdesk8.Data.SqlParameterCollection"/> 中。
            </summary>
            <param name="parameterName">参数名</param>
            <param name="value">要添加到集合中的 <see cref="T:System.Data.OleDb.OleDbParameter"/> 的 <see cref="T:System.Data.OleDb.OleDbParameter"/>.Value。</param>
            <returns>新 <see cref="T:System.Data.OleDb.OleDbParameter"/> 对象的索引。</returns>
        </member>
        <member name="M:Bigdesk8.Data.OleDbParameterCollection.Add(System.String,System.Data.DbType,System.Object)">
            <summary>
            在给定参数名称、数据类型和参数值的情况下，将 <see cref="T:System.Data.OleDb.OleDbParameter"/> 添加到 <see cref="T:Bigdesk8.Data.SqlParameterCollection"/> 中。
            </summary>
            <param name="parameterName">参数名</param>
            <param name="dataType">数据类型</param>
            <param name="value">要添加到集合中的 <see cref="T:System.Data.OleDb.OleDbParameter"/> 的 <see cref="T:System.Data.OleDb.OleDbParameter"/>.Value。</param>
            <returns>新 <see cref="T:System.Data.OleDb.OleDbParameter"/> 对象的索引。</returns>
        </member>
        <member name="M:Bigdesk8.Data.OleDbParameterCollection.Add(System.String,System.Data.DbType,System.Int32,System.Object)">
            <summary>
            在给定参数名称、数据类型、参数值和列的长度的情况下，将 <see cref="T:System.Data.OleDb.OleDbParameter"/> 添加到 <see cref="T:Bigdesk8.Data.SqlParameterCollection"/> 中。
            </summary>
            <param name="parameterName">参数名</param>
            <param name="dataType">数据类型</param>
            <param name="size">列的长度</param>
            <param name="value">要添加到集合中的 <see cref="T:System.Data.OleDb.OleDbParameter"/> 的 <see cref="T:System.Data.OleDb.OleDbParameter"/>.Value。</param>
            <returns>新 <see cref="T:System.Data.OleDb.OleDbParameter"/> 对象的索引。</returns>
        </member>
        <member name="T:Bigdesk8.Web.TreeViewGenerator">
            <summary>
            some note here
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.TreeViewGenerator.InitTreeView(System.Web.UI.WebControls.TreeView,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="treeView"></param>
            <param name="pathOfConfigFile"></param>
            <param name="treeConfigTableName"></param>
            <param name="parentNodeID"></param>
        </member>
        <member name="T:Bigdesk8.Security.Griddle">
            <summary>
            Griddle: 一个秀安全保护功能的筛子
            </summary>
        </member>
        <member name="T:Bigdesk8.Security.AntiSqlInjection">
            <summary>
            AntiSqlInjection 的摘要说明。
            </summary>
        </member>
        <member name="M:Bigdesk8.Security.AntiSqlInjection.GetSafeSql(System.String)">
            <summary>
            过滤危险 SQL
            </summary>
            <param name="sqlString"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Security.AntiSqlInjection.GetSafeInput(System.String)">
            <summary>
            为防止sql注入，对用户的输入进行安全检查。
            1. 如果试图sql注入，则输入的字符串中间很大可能会含有空格；
            2. 或者会用函数sql函数char()插入一些特殊字符。
            </summary>
            <param name="inputString"></param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Security.AntiSqlInjection.ParameterizeInClause(System.String,System.String,Bigdesk8.Data.SqlParameterCollection@)">
            <summary>
            将sql语句in子句中以逗号分隔的字符串，转换成sql参数的形式
            </summary>
            <param name="inClause">sql语句in子句中以逗号分隔的字符串</param>
            <param name="preOfParam">参数名称的前缀，需要加“@”或者“:”符号</param>
            <param name="sp">传入的SqlParameterCollection对象</param>
            <returns>形成的sql参数的字符串</returns>
        </member>
        <member name="T:Bigdesk8.Ext.FilterHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bigdesk8.Ext.FilterHelper.GetSearchClause(System.String,System.String@,Bigdesk8.Data.SqlParameterCollection@,System.Boolean)">
            <summary>
            
            </summary>
            <param name="jsonSearchString"></param>
            <param name="sql"></param>
            <param name="spc"></param>
            <param name="isAndRelation">生成的子句和主sql之间是否用and连接，true: and, false: or</param>
        </member>
        <member name="T:Bigdesk8.Business.BizMsgManager.BizMsgManagerFactory">
            <summary>
            日志管理
            </summary>
        </member>
        <member name="M:Bigdesk8.Business.BizMsgManager.BizMsgManagerFactory.CreateBizMsgManager(System.String)">
            <summary>
            获取业务消息管理器
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.BizMsgManager.DBBizMsgManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:Bigdesk8.Business.BizMsgManager.DBBizMsgManager.GetBizMsg(System.Int64)">
            <summary>
            
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.BizMsgManager.DBBizMsgManager.DB">
            <summary>
            数据库访问对象
            </summary>
        </member>
        <member name="T:Bigdesk8.Web.DefaultCacheStrategy">
            <summary>
            默认缓存管理类
            </summary>
        </member>
        <member name="F:Bigdesk8.Web.DefaultCacheStrategy._timeOut">
            <summary>
            默认缓存存活期为3600秒(1小时)
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.DefaultCacheStrategy.AddObject(System.String,System.Object)">
            <summary>
            加入当前对象到缓存中
            </summary>
            <param name="objId">对象的键值</param>
            <param name="o">缓存的对象</param>
        </member>
        <member name="M:Bigdesk8.Web.DefaultCacheStrategy.AddObjectWithFileChange(System.String,System.Object,System.String[])">
            <summary>
            加入当前对象到缓存中,并对相关文件建立依赖
            </summary>
            <param name="objId">对象的键值</param>
            <param name="o">缓存的对象</param>
            <param name="files">监视的路径文件</param>
        </member>
        <member name="M:Bigdesk8.Web.DefaultCacheStrategy.AddObjectWithDepend(System.String,System.Object,System.String[])">
            <summary>
            加入当前对象到缓存中,并使用依赖键
            </summary>
            <param name="objId">对象的键值</param>
            <param name="o">缓存的对象</param>
            <param name="dependKey">依赖关联的键值</param>
        </member>
        <member name="M:Bigdesk8.Web.DefaultCacheStrategy.onRemove(System.String,System.Object,System.Web.Caching.CacheItemRemovedReason)">
            <summary>
            建立回调委托的一个实例
            </summary>
            <param name="key"></param>
            <param name="val"></param>
            <param name="reason"></param>
        </member>
        <member name="M:Bigdesk8.Web.DefaultCacheStrategy.RemoveObject(System.String)">
            <summary>
            删除缓存对象
            </summary>
            <param name="objId">对象的关键字</param>
        </member>
        <member name="M:Bigdesk8.Web.DefaultCacheStrategy.RetrieveObject(System.String)">
            <summary>
            返回一个指定的对象
            </summary>
            <param name="objId">对象的关键字</param>
            <returns>对象</returns>
        </member>
        <member name="M:Bigdesk8.Web.DefaultCacheStrategy.Clear">
            <summary>
            移除所有的ID和对象
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.DefaultCacheStrategy.GetObjIDs">
            <summary>
            获取所有的ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Web.DefaultCacheStrategy.GetData">
            <summary>
            获取所有ID和对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:Bigdesk8.Web.DefaultCacheStrategy.TimeOut">
            <summary>
            设置到期相对时间[单位: 秒]，当为0时，表示无限期
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.DefaultCacheStrategy.GetWebCacheObj">
            <summary>
            获取 Web 应用程序的缓存对象
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.DefaultCacheStrategy.Count">
            <summary>
            获取ID和对象的数目
            </summary>
        </member>
        <member name="T:Bigdesk8.SerializationUtility">
            <summary>
            序列化和反序列化处理类
            </summary>
        </member>
        <member name="M:Bigdesk8.SerializationUtility.Save``1(``0,System.String)">
            <summary>
            序列化 - 将对象序列化成文件
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="obj">对象</param>
            <param name="filename">文件路径</param>
        </member>
        <member name="M:Bigdesk8.SerializationUtility.Load``1(System.String)">
            <summary>
            反序列化 - 将文件序列化成对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="filename">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.SerializationUtility.Serialize``1(``0)">
            <summary>
            序列化 - 将对象序列化成XML字符串
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="obj">对象</param>
            <returns>XML字符串</returns>
        </member>
        <member name="M:Bigdesk8.SerializationUtility.DeSerialize``1(System.String)">
            <summary>
            反序列化 - 将XML字符串序列化成对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="objXML">对象XML字符串</param>
            <returns></returns>
        </member>
        <member name="T:Bigdesk8.Data.DataItem">
            <summary>
            单一数据项
            </summary>
        </member>
        <member name="F:Bigdesk8.Data.DataItem._ItemData">
            <summary>
            数据
            </summary>
        </member>
        <member name="M:Bigdesk8.Data.DataItem.ItemCheck">
            <summary>
            检查类型是否匹配，长度是否超长，必填项是否已填，取值范围是否正确等等.....
            </summary>
            <returns>检查成功返回true,不成功返回false</returns>
        </member>
        <member name="M:Bigdesk8.Data.DataItem.OnChecked">
            <summary>
            检查完成后执行
            </summary>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Data.DataItem.OnItemDataChanged(System.String)">
            <summary>
            数据改变后执行
            </summary>
            <param name="newData">新数据</param>
        </member>
        <member name="P:Bigdesk8.Data.DataItem.ItemName">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.DataItem.ItemNameCN">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.DataItem.ItemType">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.DataItem.ItemData">
            <summary>
            数据
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.DataItem.ItemLength">
            <summary>
            最大长度。默认值为 0。
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.DataItem.ItemIsRequired">
            <summary>
            是否为必填项。默认值为 false。
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.DataItem.ItemRelation">
            <summary>
            与数据的关系
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.DataItem.ItemDefaultData">
            <summary>
            默认数据，默认值为string.Empty
            </summary>
        </member>
        <member name="P:Bigdesk8.Data.DataItem.ItemFormat">
            <summary>
            显示格式
            </summary>
        </member>
        <member name="E:Bigdesk8.Data.DataItem.Checked">
            <summary>
            检查完成后事件
            </summary>
        </member>
        <member name="E:Bigdesk8.Data.DataItem.ItemDataChanged">
            <summary>
            数据改变后事件
            </summary>
        </member>
        <member name="T:Bigdesk8.Ext.FilterGroup">
            <summary>
            对应前台的检索规则数据
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.UserRightManager.UserRightInfo">
            <summary>
            用户权限信息，主要针对一个用户权限信息
            </summary>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightInfo.#ctor(Bigdesk8.Data.DBOperator,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="dbOperator">数据库访问类</param>
            <param name="userID">用户编号</param>
            
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightInfo.#ctor(Bigdesk8.Data.DBOperator,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="dbOperator">数据库访问类</param>
            <param name="loginName">登录名称</param>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightInfo.HasRole(System.Int32)">
            <summary>
            判断用户是否有某个角色
            </summary>
            <param name="roleID">角色编号</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightInfo.HasRole(System.String)">
            <summary>
            判断用户是否有某个角色
            </summary>
            <param name="roleName">角色名称</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightInfo.HasRight(System.Int32)">
            <summary>
            判断用户是否具有权限
            </summary>
            <param name="systemID">系统编号</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightInfo.HasRight(System.Int32,System.String)">
            <summary>
            获得用户对某个模块是否具有权限
            </summary>
            <param name="systemID">系统编号</param>
            <param name="moduleCode">模块代码</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightInfo.HasRight(System.Int32,System.String,System.String)">
            <summary>
            判断用户对某个模块的某个操作是否具有权限
            </summary>
            <param name="systemID">系统编号</param>
            <param name="moduleCode">模块代码</param>
            <param name="operateCode">操作代码</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightInfo.HasRight(System.Int32,System.String,System.String,System.String)">
            <summary>
            判断用户对某个模块的某个操作的某个业务数据分类是否具有权限
            </summary>
            <param name="systemID">系统编号</param>
            <param name="moduleCode">模块代码</param>
            <param name="operateCode">操作代码</param>
            <param name="dataTypeCode">业务数据分类代码</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightInfo.HasRight2(System.Int32,System.String)">
            <summary>
            判断用户对某个操作是否具有权限
            </summary>
            <param name="systemID">系统编号</param>
            <param name="operateCode">操作代码</param>
            <returns></returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightInfo.SelectDataType(System.Int32,System.String)">
            <summary>
            获得用户具有操作权限的业务数据分类
            </summary>
            <param name="systemID">系统编号</param>
            <param name="moduleCode">模块代码</param>
            <returns>返回值key=DataTypeCode,value=DataTypeName</returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightInfo.SelectDataType(System.Int32,System.String,System.String)">
            <summary>
            获得用户具有操作权限的业务数据分类
            </summary>
            <param name="systemID">系统编号</param>
            <param name="moduleCode">模块代码</param>
            <param name="operateCode">操作代码</param>
            <returns>返回值key=DataTypeCode,value=DataTypeName</returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightInfo.SelectDataType2(System.Int32,System.String)">
            <summary>
            获得用户具有操作权限的业务数据分类
            </summary>
            <param name="systemID">系统编号</param>
            <param name="operateCode">操作代码</param>
            <returns>返回值key=DataTypeCode,value=DataTypeName</returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightInfo.SelectModule(System.Int32)">
            <summary>
            获得用户的模块
            </summary>
            <param name="systemID">系统编号</param>
            <returns>返回值key=ModuleCode,value=ModuleName</returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightInfo.SelectModule(System.Int32,System.String)">
            <summary>
            获得用户具有操作权限的模块
            </summary>
            <param name="systemID">系统编号</param>
            <param name="operateCode">操作代码</param>
            <returns>返回值key=ModuleCode,value=ModuleName</returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightInfo.SelectModuleDataType(System.Int32)">
            <summary>
            获得用户的模块业务数据分类
            </summary>
            <param name="systemID">系统编号</param>
            <returns>返回值key=ModuleCode;DataTypeCode,value=ModuleName;DataTypeName</returns>
        </member>
        <member name="M:Bigdesk8.Business.UserRightManager.UserRightInfo.SelectModuleDataType(System.Int32,System.String)">
            <summary>
            获得用户的模块业务数据分类
            </summary>
            <param name="systemID">系统编号</param>
            <param name="operateCode">操作代码</param>
            <returns>返回值key=ModuleCode;DataTypeCode,value=ModuleName;DataTypeName</returns>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.UserRightInfo.DB">
            <summary>
            数据库访问对象
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.UserRightInfo.Exists">
            <summary>
            用户是否存在
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.UserRightInfo.IsGuest">
            <summary>
            用户是否是匿名用户
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.UserRightInfo.UserID">
            <summary>
            用户编号
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.UserRightInfo.UserName">
            <summary>
            用户名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.UserRightInfo.LoginName">
            <summary>
            登录名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.UserRightInfo.OrgUnitName">
            <summary>
            科室   张鎏添加
            </summary>
        </member>
        <member name="P:Bigdesk8.Business.UserRightManager.UserRightInfo.CountOfUserMatched">
            <summary>
            符合构造函数条件的用户的个数
            </summary>
            该死的数据库中可能存在重复的用户记录
        </member>
        <member name="T:Bigdesk8.Business.FileManager.FileManagerFactory">
            <summary>
            统一文件管理器
            提供文件存储，浏览等接口
            使用此接口的程序，不需要关注文件如何存储。存储只需要提供文件及其属性，浏览时只需要提供文件编号
            </summary>
        </member>
        <member name="M:Bigdesk8.Business.FileManager.FileManagerFactory.CreateFileManager(System.String)">
            <summary>
            创建文件管理器
            </summary>
            <param name="managerName">managerName</param>
            <returns>返回文件管理器</returns>
        </member>
        <member name="T:Bigdesk8.Business.FileManager.DBFileManager">
            <summary>
            统一文件管理器
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.QyYwlxCode">
            <summary>
            企业业务类型代码
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.QyYwlxCode.建筑施工">
            <summary>
            施工企业
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.QyYwlxCode.工程监理">
            <summary>
            监理企业 
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.QyYwlxCode.招标代理">
            <summary>
            招标代理机构
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.QyYwlxCode.造价咨询">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.QyYwlxCode.工程检测">
            <summary>
            
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.UeppCodeType">
            <summary>
            统一基础代码表中的代码类型
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UeppCodeType.空父代码类型">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UeppCodeType.项目属地">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UeppCodeType.城市地区">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UeppCodeType.企业经济性质">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UeppCodeType.立项文件类型">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UeppCodeType.立项部门">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UeppCodeType.人员证件类型">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UeppCodeType.人员学历">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UeppCodeType.人员职务">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UeppCodeType.人员职称">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UeppCodeType.企业市域类别">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UeppCodeType.企业备案类型">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UeppCodeType.企业从事业务类型">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UeppCodeType.受理部门">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UeppCodeType.企业证书类型">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UeppCodeType.企业资质序列">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UeppCodeType.企业资质类别">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UeppCodeType.企业资质等级">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UeppCodeType.人员资质类别">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UeppCodeType.人员资质等级">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UeppCodeType.人员证书类型">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UeppCodeType.企业资质行业">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UeppCodeType.人员职称专业">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UeppCodeType.人员执业资格类型">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.UeppCodeType.人员职称级别">
            <summary>
            
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.BasicUserType">
            <summary>
            基本用户类型枚举
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.BasicUserType.未定义">
            <summary>
            因枚举类型变量不能为null, 故设置本项以用于必要情况下的默认赋值
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.BasicUserType.内置用户">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.BasicUserType.管理用户">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.BasicUserType.企业用户">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.BasicUserType.建设单位">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.BasicUserType.甲方">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.BasicUserType.个人用户">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.BasicUserType.项目用户">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.BasicUserType.GH管理用户">
            <summary>
            建筑从业人员社会化管理系统管理用户
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.BasicUserType.测评机构">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.BasicUserType.评审专家">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.BasicUserType.经办人">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.BasicUserType.区管理用户">
            <summary>
            
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.BasicUserType.评估机构">
            <summary>
            
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.ScicLoginType">
            <summary>
            Scic平台登录类型枚举
            </summary>
        </member>
        <member name="F:Bigdesk8.Business.ScicLoginType.未定义">
            <summary>
            因枚举类型变量不能为null, 故设置本项以用于必要情况下的默认赋值
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.ScicLoginInfo">
            <summary>
            Scic平台一次会话的平台级登录信息
            </summary>
            因为struct不支持引用赋值，也就是不能赋以null，故将ScicLoginInfo定义为一个类了
        </member>
        <member name="F:Bigdesk8.Business.ScicLoginInfo.SelectableLoginTypes">
            <summary>
            可选的登录类型
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.BasicLoginInfo">
            <summary>
            
            </summary>
            因为struct不支持引用赋值，也就是不能赋以null，故将BasicLoginInfo定义为一个类了
        </member>
        <member name="F:Bigdesk8.Business.BasicLoginInfo.OrgID">
            <summary>
            用户所代表组织（企业、建设单位等）的ID
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.SubSystem">
            <summary>
            为防止将系统编号定义到各个配置文件中时，出现重号冲突的情况，故在这里集中定义一下
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.FdcxState">
            <summary>
            统一项目的法定程序办理状态
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.CjdwType">
            <summary>
            统一项目的参建单位类型
            </summary>
        </member>
        <member name="T:Bigdesk8.Business.StateManager.StateManagerFactory">
            <summary>
            some note
            </summary>
        </member>
        <member name="M:Bigdesk8.Business.StateManager.StateManagerFactory.CreateStateManager(System.String)">
            <summary>
            some note
            </summary>
            <param name="managerName"></param>
            <returns></returns>
        </member>
        <member name="P:Bigdesk8.Business.StateManager.DBStateManager.DB">
            <summary>
            数据库访问对象
            </summary>
        </member>
        <member name="T:Bigdesk8.Web.Controls.DBRadioButtonList">
            <summary>
            单选框组
            </summary>  
        </member>
        <member name="F:Bigdesk8.Web.Controls.DBRadioButtonList._ErrorMessage">
            <summary>
            错误信息，如果不为String.Empty,则有错误
            </summary>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBRadioButtonList.ItemCheck">
            <summary>
            检查类型是否匹配，长度是否超长，必填项是否已填，取值范围是否正确等等.....
            </summary>
            <returns>检查成功返回true,不成功返回false</returns>
        </member>
        <member name="M:Bigdesk8.Web.Controls.DBRadioButtonList.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            将需要呈现的 HTML 属性和样式添加到指定的 <see cref="T:System.Web.UI.HtmlTextWriter"/> 实例中。
            </summary>
            <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter"/>，表示要在客户端呈现 HTML 内容的输出流。</param>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBRadioButtonList.ItemNameCN">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBRadioButtonList.ItemIsRequired">
            <summary>
            是否为必填项
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBRadioButtonList.ItemName">
            <summary>
            Value 数据项名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBRadioButtonList.ItemType">
            <summary>
            Value 数据类型
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBRadioButtonList.ItemRelation">
            <summary>
            Value 数据项与数据的关系
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBRadioButtonList.TextItemName">
            <summary>
            Text 数据项名称
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBRadioButtonList.TextItemType">
            <summary>
            Text 数据类型
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBRadioButtonList.TextItemRelation">
            <summary>
            Text 数据项与数据的关系
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBRadioButtonList.SelectedValue">
            <summary>
            获取列表控件中选定项的值，或选择列表控件中包含指定值的项。
            返回结果:
                列表控件中选定项的值。默认值为空字符串 ("")。
            </summary>
        </member>
        <member name="P:Bigdesk8.Web.Controls.DBRadioButtonList.IsAutoAddItem">
            <summary>
            当列表中可选项不存在时，是否自动添加
            </summary>
        </member>
    </members>
</doc>
